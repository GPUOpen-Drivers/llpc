; NOTE: Assertions have been autogenerated by tool/update_llpc_test_checks.py UTC_ARGS: --tool lgc
; RUN: lgc -mcpu=gfx802 - < %s | FileCheck --check-prefixes=WAVE64 %s
; RUN: lgc -mcpu=gfx1010 - < %s | FileCheck --check-prefixes=WAVE32 %s
; RUN: lgc -mcpu=gfx1030 - < %s | FileCheck --check-prefixes=GFX1030 %s

define dllexport spir_func void @lgc.shader.CS.main() local_unnamed_addr #0 !lgc.shaderstage !0 {
.entry:
  %0 = call i8 addrspace(7)* (...) @lgc.create.load.buffer.desc.p7i8(i32 0, i32 0, i32 0, i32 2)
  %1 = call i32 (...) @lgc.create.read.builtin.input.i32(i32 40, i32 0, i32 undef, i32 undef)
  %2 = bitcast i8 addrspace(7)* %0 to i32 addrspace(7)*
  store i32 %1, i32 addrspace(7)* %2, align 4
  ret void
}

declare i32 @lgc.create.read.builtin.input.i32(...) local_unnamed_addr #0
declare i8 addrspace(7)* @lgc.create.load.buffer.desc.p7i8(...) local_unnamed_addr #0

attributes #0 = { nounwind }

!lgc.user.data.nodes = !{!1, !2}
!llpc.compute.mode = !{!3}

; ShaderStageCompute
!0 = !{i32 7}
; type, offset, size, count
!1 = !{!"DescriptorTableVaPtr", i32 0, i32 2, i32 1, i32 1}
; type, offset, size, set, binding, stride
!2 = !{!"DescriptorBuffer", i32 6, i32 0, i32 4, i32 0, i32 0, i32 4}
; Compute mode, containing workgroup size
!3 = !{i32 5, i32 6, i32 7}
; WAVE64-LABEL: amdgpu_cs_main:
; WAVE64:         v_mul_lo_u32 v2, v2, 6
; WAVE64-NEXT:    s_getpc_b64 s[0:1]
; WAVE64-NEXT:    s_mov_b32 s3, s1
; WAVE64-NEXT:    s_load_dwordx4 s[0:3], s[2:3], 0x0
; WAVE64-NEXT:    v_add_u32_e32 v1, vcc, v2, v1
; WAVE64-NEXT:    v_mul_lo_u32 v1, v1, 5
; WAVE64-NEXT:    v_add_u32_e32 v0, vcc, v1, v0
; WAVE64-NEXT:    v_lshrrev_b32_e32 v0, 6, v0
; WAVE64-NEXT:    s_waitcnt lgkmcnt(0)
; WAVE64-NEXT:    buffer_store_dword v0, off, s[0:3], 0
; WAVE64-NEXT:    s_endpgm
;
; WAVE32-LABEL: amdgpu_cs_main:
; WAVE32:         s_getpc_b64 s[0:1]
; WAVE32-NEXT:    v_mad_u64_u32 v[1:2], s0, v2, 6, v[1:2]
; WAVE32-NEXT:    s_mov_b32 s3, s1
; WAVE32-NEXT:    s_load_dwordx4 s[0:3], s[2:3], 0x0
; WAVE32-NEXT:    v_mad_u64_u32 v[0:1], s4, v1, 5, v[0:1]
; WAVE32-NEXT:    v_lshrrev_b32_e32 v0, 5, v0
; WAVE32-NEXT:    s_waitcnt lgkmcnt(0)
; WAVE32-NEXT:    buffer_store_dword v0, off, s[0:3], 0
; WAVE32-NEXT:    s_endpgm
;
; GFX1030-LABEL: amdgpu_cs_main:
; GFX1030:         s_getpc_b64 s[0:1]
; GFX1030-NEXT:    s_bfe_u32 s4, s6, 0x50014
; GFX1030-NEXT:    s_mov_b32 s3, s1
; GFX1030-NEXT:    v_mov_b32_e32 v0, s4
; GFX1030-NEXT:    s_load_dwordx4 s[0:3], s[2:3], 0x0
; GFX1030-NEXT:    s_waitcnt lgkmcnt(0)
; GFX1030-NEXT:    buffer_store_dword v0, off, s[0:3], 0
; GFX1030-NEXT:    s_endpgm
