; Test fdot2 on gfx1010 because gfx1010 doesn't support llvm.amdgcn.fdot2 (v_dot2_f32_f16)

; RUN: lgc -mcpu=gfx1010 -print-after=lgc-builder-replayer -o /dev/null 2>&1 - <%s | FileCheck --check-prefixes=CHECK %s
; CHECK-LABEL: IR Dump After Replay LLPC builder
; CHECK:  [[TMP0:%.*]] = fpext <2 x half> %{{.*}} to <2 x float>
; CHECK:  [[TMP1:%.*]] = fpext <2 x half> %{{.*}} to <2 x float>
; CHECK:  [[TMP2:%.*]] = fmul <2 x float> [[TMP0]], [[TMP1]]
; CHECK:  [[TMP3:%.*]] = extractelement <2 x float> [[TMP2]], i64 0
; CHECK:  [[TMP4:%.*]] = extractelement <2 x float> [[TMP2]], i64 1
; CHECK:  [[TMP5:%.*]] = fadd float [[TMP3]], [[TMP4]]
; CHECK:  [[TMP6:%.*]] = fadd float [[TMP5]], %.unpack6

; ModuleID = 'LLPC module'
source_filename = "LLPC module"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-p7:160:256:256:32-p8:128:128-p9:192:256:256:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7:8:9"
target triple = "amdgcn--amdpal"

define dllexport void @"lgc.shader.CS.7CDDB8A86039EBF37A880DA3889512E6:main"() !lgc.shaderstage !5 !llpcfe.resource.mapping !6 {
  %1 = call i32 (...) @lgc.create.read.builtin.input.i32(i32 29, i32 0, i32 poison, i32 poison)
  %2 = call ptr addrspace(7) @lgc.load.buffer.desc(i64 4294967296, i32 0, i32 0, i32 266)
  %3 = shl i32 %1, 4
  %4 = getelementptr i8, ptr addrspace(7) %2, i32 %3
  %.unpack = load half, ptr addrspace(7) %4, align 2
  %.elt1 = getelementptr inbounds i8, ptr addrspace(7) %4, i32 2
  %.unpack2 = load half, ptr addrspace(7) %.elt1, align 2
  %5 = getelementptr i8, ptr addrspace(7) %4, i32 4
  %.unpack3 = load half, ptr addrspace(7) %5, align 2
  %.elt4 = getelementptr i8, ptr addrspace(7) %4, i32 6
  %.unpack5 = load half, ptr addrspace(7) %.elt4, align 2
  %6 = getelementptr i8, ptr addrspace(7) %4, i32 8
  %.unpack6 = load float, ptr addrspace(7) %6, align 4
  %7 = insertelement <2 x half> poison, half %.unpack, i64 0
  %8 = insertelement <2 x half> %7, half %.unpack2, i64 1
  %9 = insertelement <2 x half> poison, half %.unpack3, i64 0
  %10 = insertelement <2 x half> %9, half %.unpack5, i64 1
  %11 = call float (...) @lgc.create.fdot2.f32(<2 x half> %8, <2 x half> %10, float %.unpack6, i1 false)
  %12 = getelementptr i8, ptr addrspace(7) %4, i32 12
  store float %11, ptr addrspace(7) %12, align 4
  ret void
}

; Function Attrs: nounwind willreturn memory(read)
declare i32 @lgc.create.read.builtin.input.i32(...) #0

; Function Attrs: nounwind willreturn memory(none)
declare ptr addrspace(7) @lgc.load.buffer.desc(i64, i32, i32, i32) #1

; Function Attrs: nounwind memory(none)
declare float @lgc.create.fdot2.f32(...) #2

attributes #0 = { nounwind willreturn memory(read) }
attributes #1 = { nounwind willreturn memory(none) }
attributes #2 = { nounwind memory(none) }

!llpc.compute.mode = !{!0}
!lgc.client = !{!1}
!lgc.options = !{!2}
!lgc.options.CS = !{!3}
!lgc.user.data.nodes = !{!4}

!0 = !{i32 8, i32 8, i32 1}
!1 = !{!"DX12"}
!2 = !{i32 -1010443957, i32 1479304606, i32 -922603727, i32 -992904437, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 256, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0, i32 3, i32 16777216, i32 16842752, i32 0, i32 0, i32 0, i32 -410708944, i32 1187695996}
!3 = !{i32 -1010443957, i32 1479304606, i32 -922603727, i32 -992904437, i32 0, i32 0, i32 0, i32 -1, i32 -1}
!4 = !{!"DescriptorBufferCompact", i32 17, i32 255, i32 3, i32 2, i64 4294967296, i32 0, i32 2}
!5 = !{i32 7}
!6 = !{i64 5101115464294405168}
