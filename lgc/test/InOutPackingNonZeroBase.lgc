; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --tool lgc
; RUN: lgc -mcpu=gfx1010 --print-after=lgc-patch-resource-collect --verify-ir %s -o=/dev/null 2>&1 | FileCheck --check-prefixes=IR %s
; Throw in 'cat' as a hack to prevent update_test_checks from touching the "MAPPING" lines
; RUN: lgc -mcpu=gfx1010 -v --verify-ir %s -o=/dev/null 2>&1 > %t.out
; RUN: cat %t.out | FileCheck --check-prefixes=MAPPING %s

; Check that input-output packing works with non-zero-based vector components.

; ModuleID = 'lgcPipeline'
source_filename = "lgcPipeline"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn--amdpal"

; MAPPING-LABEL: {{^//}} LLPC location input/output mapping results (FS)
;
; MAPPING:      (FS) Input:  [location, component] = [0, 0]  =>  Mapped = [0, 0]
; MAPPING-NEXT: (FS) Input:  [location, component] = [1, 0]  =>  Mapped = [0, 1]
; MAPPING-NEXT: (FS) Input:  [location, component] = [2, 0]  =>  Mapped = [0, 2]
; MAPPING-NEXT: (FS) Input:  [location, component] = [3, 0]  =>  Mapped = [0, 3]
; MAPPING-NEXT: (FS) Input:  [location, component] = [4, 0]  =>  Mapped = [1, 0]
; MAPPING-NEXT: (FS) Input:  [location, component] = [5, 0]  =>  Mapped = [1, 1]
; MAPPING-NEXT: (FS) Input:  [location, component] = [6, 0]  =>  Mapped = [1, 2]
; MAPPING-NEXT: (FS) Input:  [location, component] = [7, 0]  =>  Mapped = [1, 3]
; MAPPING-NEXT: (FS) Input:  [location, component] = [8, 0]  =>  Mapped = [2, 0]
; MAPPING-NEXT: (FS) Input:  [location, component] = [9, 0]  =>  Mapped = [2, 1]

; MAPPING-LABEL: {{^//}} LLPC location input/output mapping results (VS)
;
; MAPPING:       (VS) Input:  [location, component] = [1, 0]  =>  Mapped = [1, 0]
;
; MAPPING:       (VS) Output: [location, component] = [7, 0]  =>  Mapped = [1, 3]
; MAPPING-NEXT:  (VS) Output: [location, component] = [8, 0]  =>  Mapped = [2, 0]
; MAPPING-NEXT:  (VS) Output: [location, component] = [9, 0]  =>  Mapped = [2, 1]

; ModuleID = 'lgcPipeline'
source_filename = "lgcPipeline"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn--amdpal"

; Function Attrs: nounwind
define dllexport spir_func void @lgc.shader.VS.main() local_unnamed_addr #0 !spirv.ExecutionModel !9 !lgc.shaderstage !10 {
; IR-LABEL: @lgc.shader.VS.main(
; IR-NEXT:  .entry:
; IR-NEXT:    [[TMP0:%.*]] = call <3 x float> @lgc.input.import.generic__v3f32(i1 false, i32 1, i32 0, i32 0, i32 poison)
; IR-NEXT:    [[TMP1:%.*]] = extractelement <3 x float> [[TMP0]], i64 0
; IR-NEXT:    [[TMP2:%.*]] = extractelement <3 x float> [[TMP0]], i64 1
; IR-NEXT:    [[TMP3:%.*]] = extractelement <3 x float> [[TMP0]], i64 2
; IR-NEXT:    [[TMP4:%.*]] = bitcast float [[TMP1]] to i32
; IR-NEXT:    [[TMP5:%.*]] = bitcast float [[TMP2]] to i32
; IR-NEXT:    [[TMP6:%.*]] = bitcast float [[TMP3]] to i32
; IR-NEXT:    [[TMP7:%.*]] = bitcast i32 [[TMP4]] to float
; IR-NEXT:    call void @lgc.output.export.generic.i32.i32.f32(i32 7, i32 0, float [[TMP7]]) #[[ATTR3:[0-9]+]]
; IR-NEXT:    [[TMP8:%.*]] = bitcast i32 [[TMP5]] to float
; IR-NEXT:    [[TMP9:%.*]] = insertelement <2 x float> poison, float [[TMP8]], i64 0
; IR-NEXT:    [[TMP10:%.*]] = bitcast i32 [[TMP6]] to float
; IR-NEXT:    [[TMP11:%.*]] = insertelement <2 x float> [[TMP9]], float [[TMP10]], i64 1
; IR-NEXT:    call void @lgc.output.export.generic.i32.i32.v2f32(i32 8, i32 0, <2 x float> [[TMP11]]) #[[ATTR3]]
; IR-NEXT:    ret void
;
.entry:
  %0 = call <3 x float> (...) @lgc.create.read.generic.input__v3f32(i32 1, i32 0, i32 0, i32 0, i32 0, i32 poison)

  %1 = extractelement <3 x float> %0, i64 0
  %2 = extractelement <3 x float> %0, i64 1
  %3 = extractelement <3 x float> %0, i64 2

  call void (...) @lgc.create.write.generic.output(float %1, i32 7, i32 0, i32 0, i32 0, i32 0, i32 undef)
  call void (...) @lgc.create.write.generic.output(float %2, i32 8, i32 0, i32 0, i32 0, i32 0, i32 undef)
  call void (...) @lgc.create.write.generic.output(float %3, i32 9, i32 0, i32 0, i32 0, i32 0, i32 undef)

  ret void
}

; Function Attrs: nounwind {{readonly willreturn|willreturn memory\(read\)}}
declare <3 x float> @lgc.create.read.generic.input__v3f32(...) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @lgc.create.write.generic.output(...) local_unnamed_addr #0

; Function Attrs: nounwind
define dllexport spir_func void @lgc.shader.FS.main() local_unnamed_addr #0 !spirv.ExecutionModel !11 !lgc.shaderstage !12 {
; IR-LABEL: @lgc.shader.FS.main(
; IR-NEXT:  .entry:
; IR-NEXT:    [[INTERPPERSPCENTER:%.*]] = call <2 x float> @lgc.input.import.builtin.InterpPerspCenter.v2f32.i32(i32 268435457) #[[ATTR4:[0-9]+]]
; IR-NEXT:    [[TMP0:%.*]] = call float (...) @lgc.input.import.interpolated__f32(i1 false, i32 9, i32 0, i32 0, i32 poison, i32 0, <2 x float> [[INTERPPERSPCENTER]])
; IR-NEXT:    [[INTERPPERSPCENTER1:%.*]] = call <2 x float> @lgc.input.import.builtin.InterpPerspCenter.v2f32.i32(i32 268435457) #[[ATTR4]]
; IR-NEXT:    [[TMP1:%.*]] = call float (...) @lgc.input.import.interpolated__f32(i1 false, i32 8, i32 0, i32 0, i32 poison, i32 0, <2 x float> [[INTERPPERSPCENTER1]])
; IR-NEXT:    [[INTERPPERSPCENTER2:%.*]] = call <2 x float> @lgc.input.import.builtin.InterpPerspCenter.v2f32.i32(i32 268435457) #[[ATTR4]]
; IR-NEXT:    [[TMP2:%.*]] = call float (...) @lgc.input.import.interpolated__f32(i1 false, i32 7, i32 0, i32 0, i32 poison, i32 0, <2 x float> [[INTERPPERSPCENTER2]])
; IR-NEXT:    [[INTERPPERSPCENTER3:%.*]] = call <2 x float> @lgc.input.import.builtin.InterpPerspCenter.v2f32.i32(i32 268435457) #[[ATTR4]]
; IR-NEXT:    [[TMP3:%.*]] = call float (...) @lgc.input.import.interpolated__f32(i1 false, i32 6, i32 0, i32 0, i32 poison, i32 0, <2 x float> [[INTERPPERSPCENTER3]])
; IR-NEXT:    [[INTERPPERSPCENTER4:%.*]] = call <2 x float> @lgc.input.import.builtin.InterpPerspCenter.v2f32.i32(i32 268435457) #[[ATTR4]]
; IR-NEXT:    [[TMP4:%.*]] = call float (...) @lgc.input.import.interpolated__f32(i1 false, i32 5, i32 0, i32 0, i32 poison, i32 0, <2 x float> [[INTERPPERSPCENTER4]])
; IR-NEXT:    [[INTERPPERSPCENTER5:%.*]] = call <2 x float> @lgc.input.import.builtin.InterpPerspCenter.v2f32.i32(i32 268435457) #[[ATTR4]]
; IR-NEXT:    [[TMP5:%.*]] = call float (...) @lgc.input.import.interpolated__f32(i1 false, i32 4, i32 0, i32 0, i32 poison, i32 0, <2 x float> [[INTERPPERSPCENTER5]])
; IR-NEXT:    [[INTERPPERSPCENTER6:%.*]] = call <2 x float> @lgc.input.import.builtin.InterpPerspCenter.v2f32.i32(i32 268435457) #[[ATTR4]]
; IR-NEXT:    [[TMP6:%.*]] = call float (...) @lgc.input.import.interpolated__f32(i1 false, i32 3, i32 0, i32 0, i32 poison, i32 0, <2 x float> [[INTERPPERSPCENTER6]])
; IR-NEXT:    [[INTERPPERSPCENTER7:%.*]] = call <2 x float> @lgc.input.import.builtin.InterpPerspCenter.v2f32.i32(i32 268435457) #[[ATTR4]]
; IR-NEXT:    [[TMP7:%.*]] = call float (...) @lgc.input.import.interpolated__f32(i1 false, i32 2, i32 0, i32 0, i32 poison, i32 0, <2 x float> [[INTERPPERSPCENTER7]])
; IR-NEXT:    [[INTERPPERSPCENTER8:%.*]] = call <2 x float> @lgc.input.import.builtin.InterpPerspCenter.v2f32.i32(i32 268435457) #[[ATTR4]]
; IR-NEXT:    [[TMP8:%.*]] = call float (...) @lgc.input.import.interpolated__f32(i1 false, i32 1, i32 0, i32 0, i32 poison, i32 0, <2 x float> [[INTERPPERSPCENTER8]])
; IR-NEXT:    [[INTERPPERSPCENTER9:%.*]] = call <2 x float> @lgc.input.import.builtin.InterpPerspCenter.v2f32.i32(i32 268435457) #[[ATTR4]]
; IR-NEXT:    [[TMP9:%.*]] = call float (...) @lgc.input.import.interpolated__f32(i1 false, i32 0, i32 0, i32 0, i32 poison, i32 0, <2 x float> [[INTERPPERSPCENTER9]])
; IR-NEXT:    [[TMP10:%.*]] = fadd reassoc nnan nsz arcp contract afn float [[TMP9]], [[TMP8]]
; IR-NEXT:    [[TMP11:%.*]] = fadd reassoc nnan nsz arcp contract afn float [[TMP10]], [[TMP7]]
; IR-NEXT:    [[TMP12:%.*]] = fadd reassoc nnan nsz arcp contract afn float [[TMP11]], [[TMP6]]
; IR-NEXT:    [[TMP13:%.*]] = fadd reassoc nnan nsz arcp contract afn float [[TMP12]], [[TMP5]]
; IR-NEXT:    [[TMP14:%.*]] = fadd reassoc nnan nsz arcp contract afn float [[TMP13]], [[TMP4]]
; IR-NEXT:    [[TMP15:%.*]] = fadd reassoc nnan nsz arcp contract afn float [[TMP14]], [[TMP3]]
; IR-NEXT:    [[TMP16:%.*]] = fadd reassoc nnan nsz arcp contract afn float [[TMP15]], [[TMP2]]
; IR-NEXT:    [[TMP17:%.*]] = fadd reassoc nnan nsz arcp contract afn float [[TMP16]], [[TMP1]]
; IR-NEXT:    [[TMP18:%.*]] = fadd reassoc nnan nsz arcp contract afn float [[TMP17]], [[TMP0]]
; IR-NEXT:    [[TMP19:%.*]] = insertelement <4 x float> poison, float [[TMP18]], i64 0
; IR-NEXT:    [[TMP20:%.*]] = shufflevector <4 x float> [[TMP19]], <4 x float> poison, <4 x i32> zeroinitializer
; IR-NEXT:    call void @lgc.output.export.generic.i32.i32.v4f32(i32 0, i32 0, <4 x float> [[TMP20]]) #[[ATTR3]]
; IR-NEXT:    ret void
;
.entry:
  %0 = call float (...) @lgc.create.read.generic.input__f32(i32 9, i32 0, i32 0, i32 0, i32 16, i32 poison)
  %1 = call float (...) @lgc.create.read.generic.input__f32(i32 8, i32 0, i32 0, i32 0, i32 16, i32 poison)
  %2 = call float (...) @lgc.create.read.generic.input__f32(i32 7, i32 0, i32 0, i32 0, i32 16, i32 poison)
  %3 = call float (...) @lgc.create.read.generic.input__f32(i32 6, i32 0, i32 0, i32 0, i32 16, i32 poison)
  %4 = call float (...) @lgc.create.read.generic.input__f32(i32 5, i32 0, i32 0, i32 0, i32 16, i32 poison)
  %5 = call float (...) @lgc.create.read.generic.input__f32(i32 4, i32 0, i32 0, i32 0, i32 16, i32 poison)
  %6 = call float (...) @lgc.create.read.generic.input__f32(i32 3, i32 0, i32 0, i32 0, i32 16, i32 poison)
  %7 = call float (...) @lgc.create.read.generic.input__f32(i32 2, i32 0, i32 0, i32 0, i32 16, i32 poison)
  %8 = call float (...) @lgc.create.read.generic.input__f32(i32 1, i32 0, i32 0, i32 0, i32 16, i32 poison)
  %9 = call float (...) @lgc.create.read.generic.input__f32(i32 0, i32 0, i32 0, i32 0, i32 16, i32 poison)
  %10 = fadd reassoc nnan nsz arcp contract afn float %9, %8
  %11 = fadd reassoc nnan nsz arcp contract afn float %10, %7
  %12 = fadd reassoc nnan nsz arcp contract afn float %11, %6
  %13 = fadd reassoc nnan nsz arcp contract afn float %12, %5
  %14 = fadd reassoc nnan nsz arcp contract afn float %13, %4
  %15 = fadd reassoc nnan nsz arcp contract afn float %14, %3
  %16 = fadd reassoc nnan nsz arcp contract afn float %15, %2
  %17 = fadd reassoc nnan nsz arcp contract afn float %16, %1
  %18 = fadd reassoc nnan nsz arcp contract afn float %17, %0
  %19 = insertelement <4 x float> poison, float %18, i64 0
  %20 = shufflevector <4 x float> %19, <4 x float> poison, <4 x i32> zeroinitializer
  call void (...) @lgc.create.write.generic.output(<4 x float> %20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 undef)
  ret void
}

declare float @lgc.create.read.generic.input__f32(...) local_unnamed_addr #1

attributes #0 = { nounwind }
attributes #1 = { nounwind willreturn }

!lgc.client = !{!0}
!lgc.options = !{!1}
!lgc.options.VS = !{!2}
!lgc.options.FS = !{!3}
!lgc.vertex.inputs = !{!4, !5}
!lgc.color.export.formats = !{!6}
!lgc.input.assembly.state = !{!7}
!amdgpu.pal.metadata.msgpack = !{!8}

!0 = !{!"Vulkan"}
!1 = !{i32 -990039336, i32 -1131788677, i32 -1776313626, i32 -649800053, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2}
!2 = !{i32 1792194202, i32 -1130347412, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 64, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 20, i32 1800}
!3 = !{i32 1377849597, i32 1616775686, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 64, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 20, i32 1800}
!4 = !{i32 0, i32 0, i32 0, i32 32, i32 14, i32 7, i32 -1}
!5 = !{i32 1, i32 0, i32 16, i32 32, i32 14, i32 7, i32 -1}
!6 = !{i32 16}
!7 = !{i32 0, i32 3}
!8 = !{!"\82\B0amdpal.pipelines\91\84\AA.registers\80\B0.spill_threshold\CE\FF\FF\FF\FF\B0.user_data_limit\00\AF.xgl_cache_info\82\B3.128_bit_cache_hash\92\CF\85\AE\0E\1A3i%\83\CF\83\9C\FFlp\AB\F4p\AD.llpc_version\A454.3\AEamdpal.version\92\02\03"}
!9 = !{i32 0}
!10 = !{i32 1}
!11 = !{i32 4}
!12 = !{i32 6}
