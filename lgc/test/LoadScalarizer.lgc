; NOTE: Assertions have been autogenerated by tool/update_llpc_test_checks.py UTC_ARGS: --tool lgc
; RUN: lgc -v -print-after=lgc-patch-load-scalarizer %s | FileCheck --check-prefixes=CHECK %s

; Function Attrs: nounwind memory(readwrite)
define dllexport amdgpu_cs void @shader(i32 inreg %globalTable, i32 inreg %perShaderTable, i64 inreg %loadAddr) #0 !lgc.shaderstage !14 {
.entry:
	%0 = inttoptr i64 %loadAddr to ptr addrspace(1)
	%1 = load <2 x i16>, ptr addrspace(1) %0, align 4
	%2 = insertelement <2 x i16> poison, i16 3, i32 0
	%3 = insertelement <2 x i16> %2, i16 4, i32 1
	%4 = add <2 x i16> %1, %3
	store <2 x i16> %4, ptr addrspace(1) %0
	ret void
}
!lgc.options = !{!3}
!lgc.options.CS = !{!4}
!3 = !{i32 1588449334, i32 843069434, i32 -752255867, i32 1849454014, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2}
!4 = !{i32 -1142870808, i32 452265027, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 64, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 20, i32 1800}
!14 = !{i32 7}

; CHECK-LABEL: @_amdgpu_cs_main(
; CHECK-NEXT:  .entry:
; CHECK-NEXT:    [[TMP0:%.*]] = inttoptr i64 [[LOADADDR:%.*]] to ptr addrspace(1)
; CHECK-NEXT:    [[TMP1:%.*]] = load <2 x i16>, ptr addrspace(1) [[TMP0]], align 4
; CHECK-NEXT:    [[DOTI0:%.*]] = extractelement <2 x i16> [[TMP1]], i64 0
; CHECK-NEXT:    [[DOTI03:%.*]] = add i16 [[DOTI0]], 3
; CHECK-NEXT:    [[DOTI1:%.*]] = extractelement <2 x i16> [[TMP1]], i64 1
; CHECK-NEXT:    [[DOTI14:%.*]] = add i16 [[DOTI1]], 4
; CHECK-NEXT:    [[DOTUPTO0:%.*]] = insertelement <2 x i16> poison, i16 [[DOTI03]], i64 0
; CHECK-NEXT:    [[TMP2:%.*]] = insertelement <2 x i16> [[DOTUPTO0]], i16 [[DOTI14]], i64 1
; CHECK-NEXT:    store <2 x i16> [[TMP2]], ptr addrspace(1) [[TMP0]], align 4
; CHECK-NEXT:    ret void
;
