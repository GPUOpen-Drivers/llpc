
;;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;
 ;  Copyright (c) 2024-2025 Advanced Micro Devices, Inc. All Rights Reserved.
 ;
 ;  Permission is hereby granted, free of charge, to any person obtaining a copy
 ;  of this software and associated documentation files (the "Software"), to
 ;  deal in the Software without restriction, including without limitation the
 ;  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 ;  sell copies of the Software, and to permit persons to whom the Software is
 ;  furnished to do so, subject to the following conditions:
 ;
 ;  The above copyright notice and this permission notice shall be included in all
 ;  copies or substantial portions of the Software.
 ;
 ;  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ;  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ;  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 ;  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 ;  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 ;  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 ;  IN THE SOFTWARE.
 ;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; RUN: not --crash lgc -mcpu=gfx1030 -o - -lgc-use-init-whole-wave /dev/null -passes="require<lgc-pipeline-state>,lgc-mutate-entry-point" %s 2>&1 | FileCheck --check-prefixes=CHECK %s

; REQUIRES: llvm-main-revision-ge-511860

; CHECK: Invalid number of inactive VGPRs, check lgc.cps.maxArgumentVgprs

declare void @lgc.cps.jump(...) #0

define void @test(i32 %cspInit, i32 %arg, ptr %table, i32 %rcr) !lgc.cps !1 !lgc.shaderstage !2 !continuation !3 !continuation.state !4 {
entry:
  %csp = alloca i32, align 4
  %local = alloca i32, align 4, addrspace(5)
  store i32 %cspInit, ptr %csp, align 4
  %table.0 = getelementptr i32, ptr %table, i32 0
  %cr.then = load i32, ptr %table.0, align 4
  %then.arg = add i32 %arg, 1
  %0 = load i32, ptr %csp, align 4
  store i32 %then.arg, ptr addrspace(5) %local
  call void (...) @lgc.cps.jump(i32 %cr.then, i32 2, i32 %0, i32 %rcr, i32 %then.arg)
  unreachable
}

declare !continuation !3 { ptr, ptr } @continuation.prototype.test(ptr, i1)

declare ptr @continuation.malloc(i32)

declare void @continuation.free(ptr)

declare token @llvm.coro.id.retcon(i32, i32, ptr, ptr, ptr, ptr) #1

declare ptr @llvm.coro.begin(token, ptr writeonly) #1

attributes #0 = { noreturn }
attributes #1 = { nounwind }

!continuation.stackAddrspace = !{!0}
!lgc.cps.maxArgumentVgprs = !{!5}

!0 = !{i32 5}
!1 = !{i32 1}
!2 = !{i32 7}
!3 = !{ptr @test}
!4 = !{i32 0}
!5 = !{i32 1}
