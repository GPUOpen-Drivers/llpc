
;;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;
 ;  Copyright (c) 2024-2025 Advanced Micro Devices, Inc. All Rights Reserved.
 ;
 ;  Permission is hereby granted, free of charge, to any person obtaining a copy
 ;  of this software and associated documentation files (the "Software"), to
 ;  deal in the Software without restriction, including without limitation the
 ;  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 ;  sell copies of the Software, and to permit persons to whom the Software is
 ;  furnished to do so, subject to the following conditions:
 ;
 ;  The above copyright notice and this permission notice shall be included in all
 ;  copies or substantial portions of the Software.
 ;
 ;  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ;  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ;  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 ;  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 ;  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 ;  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 ;  IN THE SOFTWARE.
 ;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --tool lgc --version 5
; RUN: lgc -o - --mcpu=gfx1100 -passes=lgc-lower-cooperative-matrix %s | FileCheck --check-prefixes=CHECK %s

define <8 x i32> @muladd_bf16_bf16(<8 x i32> %a, <8 x i32> %b, <8 x i32> %c) {
; CHECK-LABEL: define <8 x i32> @muladd_bf16_bf16(
; CHECK-SAME: <8 x i32> [[A:%.*]], <8 x i32> [[B:%.*]], <8 x i32> [[C:%.*]]) {
; CHECK-NEXT:    [[TMP1:%.*]] = bitcast <8 x i32> [[A]] to <16 x i16>
; CHECK-NEXT:    [[TMP2:%.*]] = bitcast <8 x i32> [[B]] to <16 x i16>
; CHECK-NEXT:    [[TMP3:%.*]] = bitcast <8 x i32> [[C]] to <16 x i16>
; CHECK-NEXT:    [[VALUE1:%.*]] = call <16 x i16> @llvm.amdgcn.wmma.bf16.16x16x16.bf16.v16i16.v16i16(<16 x i16> [[TMP1]], <16 x i16> [[TMP2]], <16 x i16> [[TMP3]], i1 false)
; CHECK-NEXT:    [[TMP4:%.*]] = bitcast <16 x i16> [[VALUE1]] to <8 x i32>
; CHECK-NEXT:    ret <8 x i32> [[TMP4]]
;
  %value = call <8 x i32> (...) @lgc.xdl.cooperative.matrix.muladd__v8i32(<8 x i32> %a, <8 x i32> %b, <8 x i32> %c, i1 false, i1 false, i1 false, i1 false, i32 7, i32 7, i32 7, i32 7, i32 1)
  ret <8 x i32> %value
}

define <8 x float> @muladd_bf16_f32(<8 x i32> %a, <8 x i32> %b, <8 x float> %c) {
; CHECK-LABEL: define <8 x float> @muladd_bf16_f32(
; CHECK-SAME: <8 x i32> [[A:%.*]], <8 x i32> [[B:%.*]], <8 x float> [[C:%.*]]) {
; CHECK-NEXT:    [[TMP1:%.*]] = bitcast <8 x i32> [[A]] to <16 x i16>
; CHECK-NEXT:    [[TMP2:%.*]] = bitcast <8 x i32> [[B]] to <16 x i16>
; CHECK-NEXT:    [[VALUE1:%.*]] = call <8 x float> @llvm.amdgcn.wmma.f32.16x16x16.bf16.v8f32.v16i16(<16 x i16> [[TMP1]], <16 x i16> [[TMP2]], <8 x float> [[C]])
; CHECK-NEXT:    ret <8 x float> [[VALUE1]]
;
  %value = call <8 x float> (...) @lgc.xdl.cooperative.matrix.muladd__v8f32(<8 x i32> %a, <8 x i32> %b, <8 x float> %c, i1 false, i1 false, i1 false, i1 false, i32 7, i32 7, i32 2, i32 2, i32 1)
  ret <8 x float> %value
}

define <4 x i32> @muladd_16x16x16_iu4(<2 x i32> %a, <2 x i32> %b, <4 x i32> %c) {
; CHECK-LABEL: define <4 x i32> @muladd_16x16x16_iu4(
; CHECK-SAME: <2 x i32> [[A:%.*]], <2 x i32> [[B:%.*]], <4 x i32> [[C:%.*]]) {
; CHECK-NEXT:    [[MULADD1:%.*]] = call <4 x i32> @llvm.amdgcn.wmma.i32.16x16x16.iu4.v4i32.v2i32(i1 false, <2 x i32> [[A]], i1 false, <2 x i32> [[B]], <4 x i32> [[C]], i1 false)
; CHECK-NEXT:    ret <4 x i32> [[MULADD1]]
;
  %mulAdd = call <4 x i32> (...) @lgc.xdl.cooperative.matrix.muladd__v4i32(<2 x i32> %a, <2 x i32> %b, <4 x i32> %c, i1 false, i1 false, i1 false, i1 false, i32 10, i32 10, i32 5, i32 5, i32 1)
  ret <4 x i32> %mulAdd
}

declare <8 x i32> @lgc.xdl.cooperative.matrix.muladd__v8i32(...)
declare <8 x float> @lgc.xdl.cooperative.matrix.muladd__v8f32(...)
declare <4 x i32> @lgc.xdl.cooperative.matrix.muladd__v4i32(...)
