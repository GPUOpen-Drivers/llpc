; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --tool lgc --version 2
; RUN: lgc --mcpu=gfx1100 -o - -passes=lgc-lower-cooperative-matrix %s | FileCheck --check-prefixes=CHECK %s

define <8 x float> @test_pack_f16(<8 x float> %a, <8 x float> %b) !spirv.ExecutionModel !8 !lgc.shaderstage !9 {
; CHECK-LABEL: define <8 x float> @test_pack_f16
; CHECK-SAME: (<8 x float> [[A:%.*]], <8 x float> [[B:%.*]]) !spirv.ExecutionModel !5 !lgc.shaderstage [[META6:![0-9]+]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[TMP0:%.*]] = bitcast <8 x float> [[A]] to <16 x half>
; CHECK-NEXT:    [[TMP1:%.*]] = bitcast <8 x float> [[B]] to <16 x half>
; CHECK-NEXT:    [[TMP2:%.*]] = shufflevector <16 x half> [[TMP0]], <16 x half> [[TMP1]], <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>
; CHECK-NEXT:    [[TMP3:%.*]] = bitcast <16 x half> [[TMP2]] to <8 x float>
; CHECK-NEXT:    ret <8 x float> [[TMP3]]
;
entry:
  %r = call <8 x float > (...) @lgc.cooperative.matrix.pack__v8f32(<8 x float> %a, <8 x float> %b)
  ret <8 x float> %r
}

define <8 x float> @test_unpack_lo(<8 x float> %packed) !spirv.ExecutionModel !8 !lgc.shaderstage !9 {
; CHECK-LABEL: define <8 x float> @test_unpack_lo
; CHECK-SAME: (<8 x float> [[PACKED:%.*]]) !spirv.ExecutionModel !5 !lgc.shaderstage [[META6]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[TMP0:%.*]] = bitcast <8 x float> [[PACKED]] to <16 x half>
; CHECK-NEXT:    [[TMP1:%.*]] = shufflevector <16 x half> [[TMP0]], <16 x half> poison, <16 x i32> <i32 0, i32 poison, i32 2, i32 poison, i32 4, i32 poison, i32 6, i32 poison, i32 8, i32 poison, i32 10, i32 poison, i32 12, i32 poison, i32 14, i32 poison>
; CHECK-NEXT:    [[TMP2:%.*]] = bitcast <16 x half> [[TMP1]] to <8 x float>
; CHECK-NEXT:    ret <8 x float> [[TMP2]]
;
entry:
  %r = call <8 x float > (...) @lgc.cooperative.matrix.unpack__v8f32(<8 x float> %packed, i1 false)
  ret <8 x float> %r
}

define <8 x float> @test_unpack_hi(<8 x float> %packed) !spirv.ExecutionModel !8 !lgc.shaderstage !9 {
; CHECK-LABEL: define <8 x float> @test_unpack_hi
; CHECK-SAME: (<8 x float> [[PACKED:%.*]]) !spirv.ExecutionModel !5 !lgc.shaderstage [[META6]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[TMP0:%.*]] = bitcast <8 x float> [[PACKED]] to <16 x half>
; CHECK-NEXT:    [[TMP1:%.*]] = shufflevector <16 x half> [[TMP0]], <16 x half> poison, <16 x i32> <i32 1, i32 poison, i32 3, i32 poison, i32 5, i32 poison, i32 7, i32 poison, i32 9, i32 poison, i32 11, i32 poison, i32 13, i32 poison, i32 15, i32 poison>
; CHECK-NEXT:    [[TMP2:%.*]] = bitcast <16 x half> [[TMP1]] to <8 x float>
; CHECK-NEXT:    ret <8 x float> [[TMP2]]
;
entry:
  %r = call <8 x float > (...) @lgc.cooperative.matrix.unpack__v8f32(<8 x float> %packed, i1 true)
  ret <8 x float> %r
}

define <8 x float> @test_packed_times_scalar(<8 x float> %packed, <2 x half> %scalar) !spirv.ExecutionModel !8 !lgc.shaderstage !9 {
; CHECK-LABEL: define <8 x float> @test_packed_times_scalar
; CHECK-SAME: (<8 x float> [[PACKED:%.*]], <2 x half> [[SCALAR:%.*]]) !spirv.ExecutionModel !5 !lgc.shaderstage [[META6]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[TMP0:%.*]] = bitcast <8 x float> [[PACKED]] to <16 x half>
; CHECK-NEXT:    [[TMP1:%.*]] = shufflevector <16 x half> [[TMP0]], <16 x half> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
; CHECK-NEXT:    [[TMP2:%.*]] = shufflevector <2 x half> [[SCALAR]], <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
; CHECK-NEXT:    [[TMP3:%.*]] = fmul <8 x half> [[TMP1]], [[TMP2]]
; CHECK-NEXT:    [[TMP4:%.*]] = shufflevector <8 x half> [[TMP3]], <8 x half> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
; CHECK-NEXT:    [[TMP5:%.*]] = bitcast <16 x half> [[TMP4]] to <8 x float>
; CHECK-NEXT:    ret <8 x float> [[TMP5]]
;
entry:
  %r = call <8 x float> (...) @lgc.cooperative.matrix.times.scalar__v8f32(<8 x float> %packed, <2 x half> %scalar, i32 6, i32 1)
  ret <8 x float> %r
}

declare <8 x float> @lgc.cooperative.matrix.pack__v8f32(...)
declare <8 x float> @lgc.cooperative.matrix.unpack__v8f32(...)
declare <8 x float> @lgc.cooperative.matrix.times.scalar__v8f32(...)

!llpc.compute.mode = !{!0}
!lgc.client = !{!1}
!lgc.options = !{!2}
!lgc.options.CS = !{!3}

!0 = !{i32 128, i32 2, i32 1}
!1 = !{!"Vulkan"}
!2 = !{i32 -2108299168, i32 -1199997545, i32 1667044824, i32 -422575072, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 -1}
!3 = !{i32 219437737, i32 -1317595285, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 64, i32 64, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 20, i32 1800}
!4 = !{i32 32, i32 1, i32 1}
!8 = !{i32 5}
!9 = !{i32 7}
