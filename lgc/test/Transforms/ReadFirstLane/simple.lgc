; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --tool lgc
; RUN: lgc -o - -passes=lgc-patch-read-first-lane %s | FileCheck --check-prefixes=CHECK %s

define i32 @simple(i32 %x) {
; CHECK-LABEL: @simple(
; CHECK-NEXT:    [[Y:%.*]] = mul i32 [[X:%.*]], 2
; CHECK-NEXT:    [[R:%.*]] = call i32 @llvm.amdgcn.readfirstlane(i32 [[Y]])
; CHECK-NEXT:    ret i32 [[R]]
;
  %y = mul i32 %x, 2
  %r = call i32 @llvm.amdgcn.readfirstlane(i32 %y)
  ret i32 %r
}

define i32 @simple2(i32 %x) {
; CHECK-LABEL: @simple2(
; CHECK-NEXT:    [[A:%.*]] = mul i32 [[X:%.*]], 5
; CHECK-NEXT:    [[TMP1:%.*]] = call i32 @llvm.amdgcn.readfirstlane(i32 [[A]])
; CHECK-NEXT:    [[B:%.*]] = add i32 [[TMP1]], 2
; CHECK-NEXT:    [[R:%.*]] = call i32 @llvm.amdgcn.readfirstlane(i32 [[B]])
; CHECK-NEXT:    ret i32 [[R]]
;
  %a = mul i32 %x, 5
  %b = add i32 %a, 2
  %r = call i32 @llvm.amdgcn.readfirstlane(i32 %b)
  ret i32 %r
}

define <2 x i32> @vec2(ptr addrspace(4) %ptr) {
; CHECK-LABEL: @vec2(
; CHECK-NEXT:    [[PTR_OFS:%.*]] = getelementptr <2 x i32>, ptr addrspace(4) [[PTR:%.*]], i32 2
; CHECK-NEXT:    [[DESC:%.*]] = load <2 x i32>, ptr addrspace(4) [[PTR_OFS]], align 16
; CHECK-NEXT:    [[DESC_0:%.*]] = extractelement <2 x i32> [[DESC]], i32 0
; CHECK-NEXT:    [[DESC_1:%.*]] = extractelement <2 x i32> [[DESC]], i32 1
; CHECK-NEXT:    [[RF_0:%.*]] = call i32 @llvm.amdgcn.readfirstlane(i32 [[DESC_0]])
; CHECK-NEXT:    [[RF_1:%.*]] = call i32 @llvm.amdgcn.readfirstlane(i32 [[DESC_1]])
; CHECK-NEXT:    [[OUT_0:%.*]] = insertelement <2 x i32> poison, i32 [[RF_0]], i32 0
; CHECK-NEXT:    [[OUT_1:%.*]] = insertelement <2 x i32> [[OUT_0]], i32 [[RF_1]], i32 1
; CHECK-NEXT:    ret <2 x i32> [[OUT_1]]
;
  %ptr.ofs = getelementptr <2 x i32>, ptr addrspace(4) %ptr, i32 2
  %desc = load <2 x i32>, ptr addrspace(4) %ptr.ofs, align 16
  %desc.0 = extractelement <2 x i32> %desc, i32 0
  %desc.1 = extractelement <2 x i32> %desc, i32 1
  %rf.0 = call i32 @llvm.amdgcn.readfirstlane(i32 %desc.0)
  %rf.1 = call i32 @llvm.amdgcn.readfirstlane(i32 %desc.1)
  %out.0 = insertelement <2 x i32> poison, i32 %rf.0, i32 0
  %out.1 = insertelement <2 x i32> %out.0, i32 %rf.1, i32 1
  ret <2 x i32> %out.1
}

declare i32 @llvm.amdgcn.readfirstlane(i32)
