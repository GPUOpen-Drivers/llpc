
;;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;
 ;  Copyright (c) 2024-2025 Advanced Micro Devices, Inc. All Rights Reserved.
 ;
 ;  Permission is hereby granted, free of charge, to any person obtaining a copy
 ;  of this software and associated documentation files (the "Software"), to
 ;  deal in the Software without restriction, including without limitation the
 ;  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 ;  sell copies of the Software, and to permit persons to whom the Software is
 ;  furnished to do so, subject to the following conditions:
 ;
 ;  The above copyright notice and this permission notice shall be included in all
 ;  copies or substantial portions of the Software.
 ;
 ;  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ;  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ;  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 ;  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 ;  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 ;  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 ;  IN THE SOFTWARE.
 ;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; BEGIN_SHADERTEST
; RUN: amdllpc -v %gfxip %s | FileCheck -check-prefix=SHADERTEST %s
; SHADERTEST: AMDLLPC SUCCESS
; END_SHADERTEST
; SPIR-V
; Version: 1.3
; Generator: Google Shaderc over Glslang; 11
; Bound: 16558
; Schema: 0
               OpCapability Shader
               OpCapability Int16
               OpCapability GroupNonUniform
               OpCapability GroupNonUniformVote
               OpCapability GroupNonUniformBallot
               OpCapability GroupNonUniformShuffle
               OpCapability StorageBuffer16BitAccess
               OpCapability StorageBuffer8BitAccess
               OpCapability ShaderNonUniform
               OpCapability RuntimeDescriptorArray
               OpExtension "SPV_EXT_descriptor_indexing"
               OpExtension "SPV_KHR_8bit_storage"
          %2 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main" %gl_WorkGroupID %gl_SubgroupSize %gl_SubgroupID %gl_SubgroupInvocationID
               OpExecutionMode %main LocalSize 64 1 1
               OpSource GLSL 450
               OpSourceExtension "GL_EXT_nonuniform_qualifier"
               OpSourceExtension "GL_EXT_samplerless_texture_functions"
               OpSourceExtension "GL_EXT_shader_8bit_storage"
               OpSourceExtension "GL_EXT_shader_explicit_arithmetic_types_int16"
               OpSourceExtension "GL_GOOGLE_cpp_style_line_directive"
               OpSourceExtension "GL_GOOGLE_include_directive"
               OpSourceExtension "GL_KHR_shader_subgroup_arithmetic"
               OpSourceExtension "GL_KHR_shader_subgroup_ballot"
               OpSourceExtension "GL_KHR_shader_subgroup_basic"
               OpSourceExtension "GL_KHR_shader_subgroup_shuffle"
               OpSourceExtension "GL_KHR_shader_subgroup_vote"
               OpName %main "main"
               OpName %WorkgroupList "WorkgroupList"
               OpMemberName %WorkgroupList 0 "work_items"
               OpName %_ ""
               OpName %gl_WorkGroupID "gl_WorkGroupID"
               OpName %GlobalConstants "GlobalConstants"
               OpMemberName %GlobalConstants 0 "base_pixel"
               OpMemberName %GlobalConstants 1 "coarse_primitive_list_stride"
               OpMemberName %GlobalConstants 2 "coarse_fb_width"
               OpMemberName %GlobalConstants 3 "coarse_tile_size_log2"
               OpMemberName %GlobalConstants 4 "fb_color_page"
               OpMemberName %GlobalConstants 5 "fb_depth_page"
               OpMemberName %GlobalConstants 6 "fb_page_stride"
               OpName %UBO "UBO"
               OpMemberName %UBO 0 "constants"
               OpName %__0 ""
               OpName %CoarsePrimitiveCount "CoarsePrimitiveCount"
               OpMemberName %CoarsePrimitiveCount 0 "data"
               OpName %coarse_primitive_counts "coarse_primitive_counts"
               OpName %gl_SubgroupSize "gl_SubgroupSize"
               OpName %gl_SubgroupID "gl_SubgroupID"
               OpName %NUM_SAMPLES_X_LOG2 "NUM_SAMPLES_X_LOG2"
               OpName %NUM_SAMPLES_X "NUM_SAMPLES_X"
               OpName %NUM_SAMPLES_Y_LOG2 "NUM_SAMPLES_Y_LOG2"
               OpName %NUM_SAMPLES_Y "NUM_SAMPLES_Y"
               OpName %NUM_SAMPLES "NUM_SAMPLES"
               OpName %gl_SubgroupInvocationID "gl_SubgroupInvocationID"
               OpName %NUM_SAMPLES_Y_LOG2 "SAMPLING_RATE_DIM_LOG2"
               OpName %SAMPLING_RATE_DIM "SAMPLING_RATE_DIM"
               OpName %FB_FMT "FB_FMT"
               OpName %VRAM_MASK "VRAM_MASK"
               OpName %ZB_FMT "ZB_FMT"
               OpName %Z_SENSITIVE "Z_SENSITIVE"
               OpName %ShadingDescriptor "ShadingDescriptor"
               OpMemberName %ShadingDescriptor 0 "lo_primitive_index"
               OpMemberName %ShadingDescriptor 1 "hi_primitive_index"
               OpMemberName %ShadingDescriptor 2 "fb_index_depth_offset"
               OpName %Registers "Registers"
               OpMemberName %Registers 0 "registers"
               OpName %__1 ""
               OpName %is_fb_16bit "is_fb_16bit"
               OpName %VRAM16 "VRAM16"
               OpMemberName %VRAM16 0 "data"
               OpName %vram16 "vram16"
               OpName %SUPER_SAMPLE "SUPER_SAMPLE"
               OpName %VRAM_SIZE_16 "VRAM_SIZE_16"
               OpName %VRAM32 "VRAM32"
               OpMemberName %VRAM32 0 "data"
               OpName %vram32 "vram32"
               OpName %VRAM_SIZE_32 "VRAM_SIZE_32"
               OpName %is_fb_24bit "is_fb_24bit"
               OpName %ref_mask "ref_mask"
               OpName %is_zb_16bit "is_zb_16bit"
               OpName %is_zb_24bit "is_zb_24bit"
               OpName %ref_mask_0 "ref_mask"
               OpName %VARIANT_FLAGS "VARIANT_FLAGS"
               OpName %HAS_SUPER_SAMPLE_REFERENCE "HAS_SUPER_SAMPLE_REFERENCE"
               OpName %ref "ref"
               OpName %VRAM24 "VRAM24"
               OpMemberName %VRAM24 0 "data"
               OpName %vram24 "vram24"
               OpName %PrimitiveSetup "PrimitiveSetup"
               OpMemberName %PrimitiveSetup 0 "a"
               OpMemberName %PrimitiveSetup 1 "inv_area"
               OpMemberName %PrimitiveSetup 2 "b"
               OpMemberName %PrimitiveSetup 3 "error_i"
               OpMemberName %PrimitiveSetup 4 "c"
               OpMemberName %PrimitiveSetup 5 "error_j"
               OpMemberName %PrimitiveSetup 6 "bb"
               OpMemberName %PrimitiveSetup 7 "z"
               OpName %PrimitiveSetups "PrimitiveSetups"
               OpMemberName %PrimitiveSetups 0 "data"
               OpName %primitive_setup "primitive_setup"
               OpName %PrimitiveAttribute "PrimitiveAttribute"
               OpMemberName %PrimitiveAttribute 0 "bb"
               OpMemberName %PrimitiveAttribute 1 "state"
               OpMemberName %PrimitiveAttribute 2 "tex"
               OpMemberName %PrimitiveAttribute 3 "tex2"
               OpMemberName %PrimitiveAttribute 4 "alpha"
               OpMemberName %PrimitiveAttribute 5 "fbmsk"
               OpMemberName %PrimitiveAttribute 6 "fogcol"
               OpName %PrimitiveAttributes "PrimitiveAttributes"
               OpMemberName %PrimitiveAttributes 0 "data"
               OpName %primitive_attr "primitive_attr"
               OpName %HAS_AA1 "HAS_AA1"
               OpName %HAS_SCANMSK "HAS_SCANMSK"
               OpName %FEEDBACK_READS_DEPTH "FEEDBACK_READS_DEPTH"
               OpName %FEEDBACK_PSM "FEEDBACK_PSM"
               OpName %FEEDBACK_CPSM "FEEDBACK_CPSM"
               OpName %MAX_CSA "MAX_CSA"
               OpName %CLUT16 "CLUT16"
               OpMemberName %CLUT16 0 "data"
               OpName %clut16 "clut16"
               OpName %FEEDBACK "FEEDBACK"
               OpName %TexInfo "TexInfo"
               OpMemberName %TexInfo 0 "sizes"
               OpMemberName %TexInfo 1 "region"
               OpMemberName %TexInfo 2 "bias"
               OpMemberName %TexInfo 3 "padding"
               OpName %TextureInfo "TextureInfo"
               OpMemberName %TextureInfo 0 "data"
               OpName %texture_info "texture_info"
               OpName %bindless_textures "bindless_textures"
               OpName %bindless_samplers "bindless_samplers"
               OpName %TransformedAttributes "TransformedAttributes"
               OpMemberName %TransformedAttributes 0 "stqf0"
               OpMemberName %TransformedAttributes 1 "stqf1"
               OpMemberName %TransformedAttributes 2 "stqf2"
               OpMemberName %TransformedAttributes 3 "rgba0"
               OpMemberName %TransformedAttributes 4 "rgba1"
               OpMemberName %TransformedAttributes 5 "rgba2"
               OpMemberName %TransformedAttributes 6 "padding"
               OpMemberName %TransformedAttributes 7 "st_bb"
               OpName %TransformedAttribute "TransformedAttribute"
               OpMemberName %TransformedAttribute 0 "data"
               OpName %transformed_attr "transformed_attr"
               OpName %StateVector "StateVector"
               OpMemberName %StateVector 0 "combiner"
               OpMemberName %StateVector 1 "blend_mode"
               OpMemberName %StateVector 2 "dimx"
               OpName %StateVectors "StateVectors"
               OpMemberName %StateVectors 0 "data"
               OpName %state_vectors "state_vectors"
               OpName %is_fb_32bit "is_fb_32bit"
               OpName %HAS_PRIMITIVE_RANGE "HAS_PRIMITIVE_RANGE"
               OpName %CoarseTileList "CoarseTileList"
               OpMemberName %CoarseTileList 0 "data"
               OpName %coarse_primitive_list "coarse_primitive_list"
               OpModuleProcessed "entry-point main"
               OpModuleProcessed "client vulkan100"
               OpModuleProcessed "target-env spirv1.3"
               OpModuleProcessed "target-env vulkan1.1"
               OpModuleProcessed "entry-point main"
               OpDecorate %_runtimearr_v2uint ArrayStride 8
               OpMemberDecorate %WorkgroupList 0 NonWritable
               OpMemberDecorate %WorkgroupList 0 Offset 0
               OpDecorate %WorkgroupList Block
               OpDecorate %_ DescriptorSet 2
               OpDecorate %_ Binding 0
               OpDecorate %gl_WorkGroupID BuiltIn WorkgroupId
               OpMemberDecorate %GlobalConstants 0 Offset 0
               OpMemberDecorate %GlobalConstants 1 Offset 8
               OpMemberDecorate %GlobalConstants 2 Offset 12
               OpMemberDecorate %GlobalConstants 3 Offset 16
               OpMemberDecorate %GlobalConstants 4 Offset 20
               OpMemberDecorate %GlobalConstants 5 Offset 24
               OpMemberDecorate %GlobalConstants 6 Offset 28
               OpMemberDecorate %UBO 0 Offset 0
               OpDecorate %UBO Block
               OpDecorate %__0 DescriptorSet 0
               OpDecorate %__0 Binding 2
               OpDecorate %_runtimearr_int ArrayStride 4
               OpMemberDecorate %CoarsePrimitiveCount 0 NonWritable
               OpMemberDecorate %CoarsePrimitiveCount 0 Offset 0
               OpDecorate %CoarsePrimitiveCount Block
               OpDecorate %coarse_primitive_counts DescriptorSet 0
               OpDecorate %coarse_primitive_counts Binding 3
               OpDecorate %gl_SubgroupSize RelaxedPrecision
               OpDecorate %gl_SubgroupSize BuiltIn SubgroupSize
               OpDecorate %gl_SubgroupID BuiltIn SubgroupId
               OpDecorate %NUM_SAMPLES_X_LOG2 SpecId 0
               OpDecorate %NUM_SAMPLES_Y_LOG2 SpecId 1
               OpDecorate %gl_SubgroupInvocationID RelaxedPrecision
               OpDecorate %gl_SubgroupInvocationID BuiltIn SubgroupLocalInvocationId
               OpDecorate %FB_FMT SpecId 2
               OpDecorate %VRAM_MASK SpecId 4
               OpDecorate %ZB_FMT SpecId 3
               OpMemberDecorate %ShadingDescriptor 0 Offset 0
               OpMemberDecorate %ShadingDescriptor 1 Offset 4
               OpMemberDecorate %ShadingDescriptor 2 Offset 8
               OpMemberDecorate %Registers 0 Offset 0
               OpDecorate %Registers Block
               OpDecorate %_runtimearr_ushort ArrayStride 2
               OpMemberDecorate %VRAM16 0 Offset 0
               OpDecorate %VRAM16 Block
               OpDecorate %vram16 DescriptorSet 0
               OpDecorate %vram16 Binding 0
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %VRAM32 0 Offset 0
               OpDecorate %VRAM32 Block
               OpDecorate %vram32 DescriptorSet 0
               OpDecorate %vram32 Binding 0
               OpDecorate %VARIANT_FLAGS SpecId 5
               OpDecorate %_runtimearr_v3uchar ArrayStride 4
               OpMemberDecorate %VRAM24 0 Offset 0
               OpDecorate %VRAM24 Block
               OpDecorate %vram24 DescriptorSet 0
               OpDecorate %vram24 Binding 0
               OpMemberDecorate %PrimitiveSetup 0 Offset 0
               OpMemberDecorate %PrimitiveSetup 1 Offset 12
               OpMemberDecorate %PrimitiveSetup 2 Offset 16
               OpMemberDecorate %PrimitiveSetup 3 Offset 28
               OpMemberDecorate %PrimitiveSetup 4 Offset 32
               OpMemberDecorate %PrimitiveSetup 5 Offset 44
               OpMemberDecorate %PrimitiveSetup 6 Offset 48
               OpMemberDecorate %PrimitiveSetup 7 Offset 64
               OpDecorate %_runtimearr_PrimitiveSetup ArrayStride 80
               OpMemberDecorate %PrimitiveSetups 0 NonWritable
               OpMemberDecorate %PrimitiveSetups 0 Offset 0
               OpDecorate %PrimitiveSetups Block
               OpDecorate %primitive_setup DescriptorSet 0
               OpDecorate %primitive_setup Binding 4
               OpMemberDecorate %PrimitiveAttribute 0 Offset 0
               OpMemberDecorate %PrimitiveAttribute 1 Offset 8
               OpMemberDecorate %PrimitiveAttribute 2 Offset 12
               OpMemberDecorate %PrimitiveAttribute 3 Offset 16
               OpMemberDecorate %PrimitiveAttribute 4 Offset 20
               OpMemberDecorate %PrimitiveAttribute 5 Offset 24
               OpMemberDecorate %PrimitiveAttribute 6 Offset 28
               OpDecorate %_runtimearr_PrimitiveAttribute ArrayStride 32
               OpMemberDecorate %PrimitiveAttributes 0 Offset 0
               OpDecorate %PrimitiveAttributes Block
               OpDecorate %primitive_attr DescriptorSet 0
               OpDecorate %primitive_attr Binding 8
               OpDecorate %FEEDBACK_PSM SpecId 6
               OpDecorate %FEEDBACK_CPSM SpecId 7
               OpDecorate %_runtimearr_ushort_0 ArrayStride 2
               OpMemberDecorate %CLUT16 0 NonWritable
               OpMemberDecorate %CLUT16 0 Offset 0
               OpDecorate %CLUT16 Block
               OpDecorate %clut16 DescriptorSet 0
               OpDecorate %clut16 Binding 14
               OpMemberDecorate %TexInfo 0 Offset 0
               OpMemberDecorate %TexInfo 1 Offset 16
               OpMemberDecorate %TexInfo 2 Offset 32
               OpMemberDecorate %TexInfo 3 Offset 40
               OpDecorate %_arr_TexInfo_uint_2048 ArrayStride 48
               OpMemberDecorate %TextureInfo 0 Offset 0
               OpDecorate %TextureInfo Block
               OpDecorate %texture_info DescriptorSet 0
               OpDecorate %texture_info Binding 15
               OpDecorate %bindless_textures DescriptorSet 1
               OpDecorate %bindless_textures Binding 0
               OpDecorate %bindless_samplers DescriptorSet 0
               OpDecorate %bindless_samplers Binding 12
               OpMemberDecorate %TransformedAttributes 0 Offset 0
               OpMemberDecorate %TransformedAttributes 1 Offset 16
               OpMemberDecorate %TransformedAttributes 2 Offset 32
               OpMemberDecorate %TransformedAttributes 3 Offset 48
               OpMemberDecorate %TransformedAttributes 4 Offset 52
               OpMemberDecorate %TransformedAttributes 5 Offset 56
               OpMemberDecorate %TransformedAttributes 6 Offset 60
               OpMemberDecorate %TransformedAttributes 7 Offset 64
               OpDecorate %_runtimearr_TransformedAttributes ArrayStride 80
               OpMemberDecorate %TransformedAttribute 0 NonWritable
               OpMemberDecorate %TransformedAttribute 0 Offset 0
               OpDecorate %TransformedAttribute Block
               OpDecorate %transformed_attr DescriptorSet 0
               OpDecorate %transformed_attr Binding 7
               OpMemberDecorate %StateVector 0 Offset 0
               OpMemberDecorate %StateVector 1 Offset 4
               OpMemberDecorate %StateVector 2 Offset 8
               OpDecorate %_arr_StateVector_uint_4096 ArrayStride 16
               OpMemberDecorate %StateVectors 0 Offset 0
               OpDecorate %StateVectors Block
               OpDecorate %state_vectors DescriptorSet 0
               OpDecorate %state_vectors Binding 9
               OpDecorate %4454 RelaxedPrecision
               OpDecorate %4459 RelaxedPrecision
               OpDecorate %_runtimearr_ushort_1 ArrayStride 2
               OpMemberDecorate %CoarseTileList 0 NonWritable
               OpMemberDecorate %CoarseTileList 0 Offset 0
               OpDecorate %CoarseTileList Block
               OpDecorate %coarse_primitive_list DescriptorSet 0
               OpDecorate %coarse_primitive_list Binding 1
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize
               OpDecorate %4811 RelaxedPrecision
               OpDecorate %4841 RelaxedPrecision
               OpDecorate %4842 RelaxedPrecision
               OpDecorate %4843 RelaxedPrecision
               OpDecorate %4846 RelaxedPrecision
               OpDecorate %4847 RelaxedPrecision
               OpDecorate %4850 RelaxedPrecision
               OpDecorate %4851 RelaxedPrecision
               OpDecorate %4852 RelaxedPrecision
               OpDecorate %4855 RelaxedPrecision
               OpDecorate %4856 RelaxedPrecision
               OpDecorate %4890 RelaxedPrecision
               OpDecorate %4891 RelaxedPrecision
               OpDecorate %4892 RelaxedPrecision
               OpDecorate %4894 RelaxedPrecision
               OpDecorate %4895 RelaxedPrecision
               OpDecorate %4896 RelaxedPrecision
               OpDecorate %4897 RelaxedPrecision
               OpDecorate %4900 RelaxedPrecision
               OpDecorate %4901 RelaxedPrecision
               OpDecorate %4904 RelaxedPrecision
               OpDecorate %4905 RelaxedPrecision
               OpDecorate %4906 RelaxedPrecision
               OpDecorate %4909 RelaxedPrecision
               OpDecorate %4910 RelaxedPrecision
               OpDecorate %4944 RelaxedPrecision
               OpDecorate %4945 RelaxedPrecision
               OpDecorate %4946 RelaxedPrecision
               OpDecorate %4948 RelaxedPrecision
               OpDecorate %4949 RelaxedPrecision
               OpDecorate %4950 RelaxedPrecision
               OpDecorate %4951 RelaxedPrecision
               OpDecorate %4954 RelaxedPrecision
               OpDecorate %4955 RelaxedPrecision
               OpDecorate %4957 RelaxedPrecision
               OpDecorate %4958 RelaxedPrecision
               OpDecorate %4959 RelaxedPrecision
               OpDecorate %4960 RelaxedPrecision
               OpDecorate %4963 RelaxedPrecision
               OpDecorate %4964 RelaxedPrecision
               OpDecorate %4965 RelaxedPrecision
               OpDecorate %4968 RelaxedPrecision
               OpDecorate %4969 RelaxedPrecision
               OpDecorate %4999 RelaxedPrecision
               OpDecorate %5000 RelaxedPrecision
               OpDecorate %5001 RelaxedPrecision
               OpDecorate %5003 RelaxedPrecision
               OpDecorate %5004 RelaxedPrecision
               OpDecorate %5005 RelaxedPrecision
               OpDecorate %5006 RelaxedPrecision
               OpDecorate %5008 RelaxedPrecision
               OpDecorate %5009 RelaxedPrecision
               OpDecorate %5010 RelaxedPrecision
               OpDecorate %5011 RelaxedPrecision
               OpDecorate %5014 RelaxedPrecision
               OpDecorate %5015 RelaxedPrecision
               OpDecorate %5017 RelaxedPrecision
               OpDecorate %5018 RelaxedPrecision
               OpDecorate %5019 RelaxedPrecision
               OpDecorate %5020 RelaxedPrecision
               OpDecorate %5023 RelaxedPrecision
               OpDecorate %5024 RelaxedPrecision
               OpDecorate %5025 RelaxedPrecision
               OpDecorate %5028 RelaxedPrecision
               OpDecorate %5029 RelaxedPrecision
               OpDecorate %5050 RelaxedPrecision
               OpDecorate %5051 RelaxedPrecision
               OpDecorate %5052 RelaxedPrecision
               OpDecorate %5054 RelaxedPrecision
               OpDecorate %5055 RelaxedPrecision
               OpDecorate %5056 RelaxedPrecision
               OpDecorate %5057 RelaxedPrecision
               OpDecorate %5059 RelaxedPrecision
               OpDecorate %5060 RelaxedPrecision
               OpDecorate %5061 RelaxedPrecision
               OpDecorate %5062 RelaxedPrecision
               OpDecorate %5065 RelaxedPrecision
               OpDecorate %5066 RelaxedPrecision
               OpDecorate %5068 RelaxedPrecision
               OpDecorate %5069 RelaxedPrecision
               OpDecorate %5070 RelaxedPrecision
               OpDecorate %5071 RelaxedPrecision
               OpDecorate %5073 RelaxedPrecision
               OpDecorate %5074 RelaxedPrecision
               OpDecorate %5075 RelaxedPrecision
               OpDecorate %5076 RelaxedPrecision
               OpDecorate %5079 RelaxedPrecision
               OpDecorate %5080 RelaxedPrecision
               OpDecorate %5081 RelaxedPrecision
               OpDecorate %5084 RelaxedPrecision
               OpDecorate %5085 RelaxedPrecision
               OpDecorate %6436 RelaxedPrecision
               OpDecorate %6437 RelaxedPrecision
               OpDecorate %7427 NoContraction
               OpDecorate %7430 NoContraction
               OpDecorate %7435 NoContraction
               OpDecorate %7438 NoContraction
               OpDecorate %7451 NoContraction
               OpDecorate %7457 NoContraction
               OpDecorate %7833 NoContraction
               OpDecorate %7835 NoContraction
               OpDecorate %7839 NoContraction
               OpDecorate %7841 NoContraction
               OpDecorate %8767 NonUniform
               OpDecorate %8834 NonUniform
               OpDecorate %9395 RelaxedPrecision
               OpDecorate %9399 RelaxedPrecision
               OpDecorate %9408 RelaxedPrecision
               OpDecorate %9655 RelaxedPrecision
       %void = OpTypeVoid
          %4 = OpTypeFunction %void
       %uint = OpTypeInt 32 0
       %bool = OpTypeBool
        %int = OpTypeInt 32 1
      %v4int = OpTypeVector %int 4
      %v3int = OpTypeVector %int 3
      %v2int = OpTypeVector %int 2
      %float = OpTypeFloat 32
     %v4uint = OpTypeVector %uint 4
    %v2float = OpTypeVector %float 2
    %v4float = OpTypeVector %float 4
    %v3float = OpTypeVector %float 3
     %int_12 = OpConstant %int 12
      %int_1 = OpConstant %int 1
     %uint_0 = OpConstant %uint 0
     %int_17 = OpConstant %int 17
     %int_13 = OpConstant %int 13
     %int_14 = OpConstant %int 14
     %int_16 = OpConstant %int 16
     %int_18 = OpConstant %int 18
     %int_23 = OpConstant %int 23
     %int_24 = OpConstant %int 24
      %int_0 = OpConstant %int 0
      %int_8 = OpConstant %int 8
        %308 = OpConstantComposite %v4int %int_0 %int_8 %int_16 %int_24
    %int_255 = OpConstant %int 255
        %311 = OpConstantComposite %v4int %int_255 %int_255 %int_255 %int_255
      %int_5 = OpConstant %int 5
     %int_10 = OpConstant %int 10
     %int_15 = OpConstant %int 15
        %322 = OpConstantComposite %v4int %int_0 %int_5 %int_10 %int_15
     %int_31 = OpConstant %int 31
        %325 = OpConstantComposite %v4int %int_31 %int_31 %int_31 %int_1
      %int_3 = OpConstant %int 3
      %int_7 = OpConstant %int 7
        %335 = OpConstantComposite %v4int %int_3 %int_3 %int_3 %int_7
        %345 = OpConstantComposite %v4int %int_0 %int_0 %int_0 %int_0
     %uint_1 = OpConstant %uint 1
     %uint_2 = OpConstant %uint 2
     %uint_3 = OpConstant %uint 3
     %v2bool = OpTypeVector %bool 2
      %int_2 = OpConstant %int 2
      %int_4 = OpConstant %int 4
      %int_6 = OpConstant %int 6
        %514 = OpConstantComposite %v2int %int_0 %int_0
        %553 = OpConstantComposite %v3int %int_0 %int_0 %int_0
     %v3bool = OpTypeVector %bool 3
     %int_n1 = OpConstant %int -1
     %v4bool = OpTypeVector %bool 4
        %874 = OpConstantComposite %v2int %int_4 %int_2
        %889 = OpConstantComposite %v2int %int_6 %int_4
        %904 = OpConstantComposite %v2int %int_2 %int_6
    %uint_64 = OpConstant %uint 64
    %uint_16 = OpConstant %uint 16
     %uint_8 = OpConstant %uint 8
     %uint_6 = OpConstant %uint 6
     %uint_4 = OpConstant %uint 4
   %uint_128 = OpConstant %uint 128
     %uint_7 = OpConstant %uint 7
    %uint_32 = OpConstant %uint 32
     %uint_5 = OpConstant %uint 5
      %false = OpConstantFalse %bool
       %true = OpConstantTrue %bool
    %uint_20 = OpConstant %uint 20
    %uint_19 = OpConstant %uint 19
  %uint_8192 = OpConstant %uint 8192
   %uint_256 = OpConstant %uint 256
    %uint_24 = OpConstant %uint 24
     %v2uint = OpTypeVector %uint 2
%_runtimearr_v2uint = OpTypeRuntimeArray %v2uint
%WorkgroupList = OpTypeStruct %_runtimearr_v2uint
%_ptr_StorageBuffer_WorkgroupList = OpTypePointer StorageBuffer %WorkgroupList
          %_ = OpVariable %_ptr_StorageBuffer_WorkgroupList StorageBuffer
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%gl_WorkGroupID = OpVariable %_ptr_Input_v3uint Input
%_ptr_Input_uint = OpTypePointer Input %uint
%_ptr_StorageBuffer_v2uint = OpTypePointer StorageBuffer %v2uint
%GlobalConstants = OpTypeStruct %v2int %int %int %int %int %int %int
        %UBO = OpTypeStruct %GlobalConstants
%_ptr_Uniform_UBO = OpTypePointer Uniform %UBO
        %__0 = OpVariable %_ptr_Uniform_UBO Uniform
%_ptr_Uniform_int = OpTypePointer Uniform %int
%_runtimearr_int = OpTypeRuntimeArray %int
%CoarsePrimitiveCount = OpTypeStruct %_runtimearr_int
%_ptr_StorageBuffer_CoarsePrimitiveCount = OpTypePointer StorageBuffer %CoarsePrimitiveCount
%coarse_primitive_counts = OpVariable %_ptr_StorageBuffer_CoarsePrimitiveCount StorageBuffer
%_ptr_StorageBuffer_int = OpTypePointer StorageBuffer %int
%gl_SubgroupSize = OpVariable %_ptr_Input_uint Input
       %1657 = OpConstantComposite %v2int %int_2 %int_2
%gl_SubgroupID = OpVariable %_ptr_Input_uint Input
%NUM_SAMPLES_X_LOG2 = OpSpecConstant %int 0
%NUM_SAMPLES_X = OpSpecConstantOp %int ShiftLeftLogical %int_1 %NUM_SAMPLES_X_LOG2
%NUM_SAMPLES_Y_LOG2 = OpSpecConstant %int 0
%NUM_SAMPLES_Y = OpSpecConstantOp %int ShiftLeftLogical %int_1 %NUM_SAMPLES_Y_LOG2
%NUM_SAMPLES = OpSpecConstantOp %int IMul %NUM_SAMPLES_X %NUM_SAMPLES_Y
       %1673 = OpSpecConstantOp %bool SGreaterThan %NUM_SAMPLES %int_1
       %1678 = OpSpecConstantOp %uint IAdd %NUM_SAMPLES_X %uint_0
       %1688 = OpSpecConstantOp %uint IAdd %NUM_SAMPLES_X %uint_0
%gl_SubgroupInvocationID = OpVariable %_ptr_Input_uint Input
       %1720 = OpConstantComposite %v2int %int_2 %int_4
       %1729 = OpSpecConstantOp %bool SGreaterThan %NUM_SAMPLES %int_1
       %1734 = OpSpecConstantOp %uint IAdd %NUM_SAMPLES_X %uint_0
       %1744 = OpSpecConstantOp %uint IAdd %NUM_SAMPLES_X %uint_0
       %1779 = OpConstantComposite %v2int %int_4 %int_4
       %1788 = OpSpecConstantOp %bool SGreaterThan %NUM_SAMPLES %int_1
       %1793 = OpSpecConstantOp %uint IAdd %NUM_SAMPLES_X %uint_0
       %1803 = OpSpecConstantOp %uint IAdd %NUM_SAMPLES_X %uint_0
       %1843 = OpConstantComposite %v2int %int_4 %int_8
       %1849 = OpSpecConstantOp %bool SGreaterThan %NUM_SAMPLES %int_1
       %1854 = OpSpecConstantOp %uint IAdd %NUM_SAMPLES_X %uint_0
       %1864 = OpSpecConstantOp %uint IAdd %NUM_SAMPLES_X %uint_0
       %1904 = OpConstantComposite %v2int %int_8 %int_8
       %1905 = OpSpecConstantOp %bool SGreaterThan %NUM_SAMPLES %int_1
       %1910 = OpSpecConstantOp %uint IAdd %NUM_SAMPLES_X %uint_0
       %1919 = OpSpecConstantOp %uint IAdd %NUM_SAMPLES_X %uint_0
       %1966 = OpSpecConstantOp %bool SLessThan %NUM_SAMPLES_X %NUM_SAMPLES_Y
%SAMPLING_RATE_DIM = OpSpecConstantOp %int ShiftLeftLogical %int_1 %NUM_SAMPLES_Y_LOG2
       %1995 = OpSpecConstantOp %int ISub %SAMPLING_RATE_DIM %int_1
       %1996 = OpSpecConstantOp %int Not %1995
     %int_32 = OpConstant %int 32
     %FB_FMT = OpSpecConstant %uint 0
  %VRAM_MASK = OpSpecConstant %uint 4194303
     %ZB_FMT = OpSpecConstant %uint 0
%uint_4294967295 = OpConstant %uint 4294967295
%Z_SENSITIVE = OpSpecConstantOp %bool INotEqual %ZB_FMT %uint_4294967295
%ShadingDescriptor = OpTypeStruct %uint %uint %uint
  %Registers = OpTypeStruct %ShadingDescriptor
%_ptr_PushConstant_Registers = OpTypePointer PushConstant %Registers
        %__1 = OpVariable %_ptr_PushConstant_Registers PushConstant
%_ptr_PushConstant_uint = OpTypePointer PushConstant %uint
       %2117 = OpSpecConstantOp %int ISub %NUM_SAMPLES %int_1
       %2118 = OpSpecConstantOp %uint IAdd %2117 %uint_0
       %2123 = OpSpecConstantOp %bool IEqual %FB_FMT %uint_2
    %uint_10 = OpConstant %uint 10
       %2125 = OpSpecConstantOp %bool IEqual %FB_FMT %uint_10
       %2126 = OpSpecConstantOp %bool LogicalOr %2123 %2125
    %uint_50 = OpConstant %uint 50
       %2128 = OpSpecConstantOp %bool IEqual %FB_FMT %uint_50
       %2129 = OpSpecConstantOp %bool LogicalOr %2126 %2128
    %uint_58 = OpConstant %uint 58
       %2131 = OpSpecConstantOp %bool IEqual %FB_FMT %uint_58
%is_fb_16bit = OpSpecConstantOp %bool LogicalOr %2129 %2131
     %ushort = OpTypeInt 16 0
%_runtimearr_ushort = OpTypeRuntimeArray %ushort
     %VRAM16 = OpTypeStruct %_runtimearr_ushort
%_ptr_StorageBuffer_VRAM16 = OpTypePointer StorageBuffer %VRAM16
     %vram16 = OpVariable %_ptr_StorageBuffer_VRAM16 StorageBuffer
%_ptr_StorageBuffer_ushort = OpTypePointer StorageBuffer %ushort
%SUPER_SAMPLE = OpSpecConstantOp %bool SGreaterThan %NUM_SAMPLES %int_1
       %2157 = OpSpecConstantOp %uint IAdd %VRAM_MASK %uint_1
%VRAM_SIZE_16 = OpSpecConstantOp %uint UDiv %2157 %uint_2
 %uint_65535 = OpConstant %uint 65535
%_runtimearr_uint = OpTypeRuntimeArray %uint
     %VRAM32 = OpTypeStruct %_runtimearr_uint
%_ptr_StorageBuffer_VRAM32 = OpTypePointer StorageBuffer %VRAM32
     %vram32 = OpVariable %_ptr_StorageBuffer_VRAM32 StorageBuffer
%_ptr_StorageBuffer_uint = OpTypePointer StorageBuffer %uint
       %2203 = OpSpecConstantOp %uint IAdd %VRAM_MASK %uint_1
%VRAM_SIZE_32 = OpSpecConstantOp %uint UDiv %2203 %uint_4
       %2209 = OpSpecConstantOp %bool IEqual %FB_FMT %uint_1
    %uint_49 = OpConstant %uint 49
       %2211 = OpSpecConstantOp %bool IEqual %FB_FMT %uint_49
%is_fb_24bit = OpSpecConstantOp %bool LogicalOr %2209 %2211
%uint_16777215 = OpConstant %uint 16777215
   %ref_mask = OpSpecConstantOp %uint Select %is_fb_24bit %uint_16777215 %uint_4294967295
       %2243 = OpSpecConstantOp %bool IEqual %ZB_FMT %uint_50
       %2244 = OpSpecConstantOp %bool IEqual %ZB_FMT %uint_58
       %2245 = OpSpecConstantOp %bool LogicalOr %2243 %2244
       %2246 = OpSpecConstantOp %bool IEqual %ZB_FMT %uint_2
       %2247 = OpSpecConstantOp %bool LogicalOr %2245 %2246
       %2248 = OpSpecConstantOp %bool IEqual %ZB_FMT %uint_10
%is_zb_16bit = OpSpecConstantOp %bool LogicalOr %2247 %2248
       %2290 = OpSpecConstantOp %bool IEqual %ZB_FMT %uint_49
       %2291 = OpSpecConstantOp %bool IEqual %ZB_FMT %uint_1
%is_zb_24bit = OpSpecConstantOp %bool LogicalOr %2290 %2291
 %ref_mask_0 = OpSpecConstantOp %uint Select %is_zb_24bit %uint_16777215 %uint_4294967295
       %2331 = OpSpecConstantOp %bool SGreaterThanEqual %NUM_SAMPLES %int_16
       %2339 = OpSpecConstantOp %bool SGreaterThanEqual %NUM_SAMPLES %int_8
       %2347 = OpSpecConstantOp %bool SGreaterThanEqual %NUM_SAMPLES %int_4
       %2362 = OpSpecConstantOp %int ISub %NUM_SAMPLES %int_1
       %2363 = OpSpecConstantOp %int Not %2362
       %2364 = OpSpecConstantOp %uint IAdd %2363 %uint_0
       %2371 = OpSpecConstantOp %int ISub %NUM_SAMPLES %int_1
       %2372 = OpSpecConstantOp %uint IAdd %2371 %uint_0
       %2380 = OpSpecConstantOp %int ISub %NUM_SAMPLES %int_1
       %2381 = OpSpecConstantOp %int Not %2380
       %2382 = OpSpecConstantOp %uint IAdd %2381 %uint_0
       %2394 = OpSpecConstantOp %int ISub %NUM_SAMPLES %int_1
       %2395 = OpSpecConstantOp %int Not %2394
       %2396 = OpSpecConstantOp %uint IAdd %2395 %uint_0
       %2444 = OpSpecConstantOp %bool SGreaterThanEqual %NUM_SAMPLES %int_16
       %2451 = OpSpecConstantOp %bool SGreaterThanEqual %NUM_SAMPLES %int_8
       %2458 = OpSpecConstantOp %bool SGreaterThanEqual %NUM_SAMPLES %int_4
       %2513 = OpSpecConstantOp %bool SGreaterThanEqual %NUM_SAMPLES %int_16
       %2520 = OpSpecConstantOp %bool SGreaterThanEqual %NUM_SAMPLES %int_8
       %2527 = OpSpecConstantOp %bool SGreaterThanEqual %NUM_SAMPLES %int_4
       %2539 = OpSpecConstantOp %bool LogicalNot %SUPER_SAMPLE
%VARIANT_FLAGS = OpSpecConstant %uint 0
       %2551 = OpSpecConstantOp %uint BitwiseAnd %VARIANT_FLAGS %uint_16
%HAS_SUPER_SAMPLE_REFERENCE = OpSpecConstantOp %bool INotEqual %2551 %uint_0
%ushort_65535 = OpConstant %ushort 65535
   %ushort_0 = OpConstant %ushort 0
        %ref = OpSpecConstantOp %uint Select %is_zb_24bit %uint_16777215 %uint_4294967295
      %uchar = OpTypeInt 8 0
    %v3uchar = OpTypeVector %uchar 3
%_runtimearr_v3uchar = OpTypeRuntimeArray %v3uchar
     %VRAM24 = OpTypeStruct %_runtimearr_v3uchar
%_ptr_StorageBuffer_VRAM24 = OpTypePointer StorageBuffer %VRAM24
     %vram24 = OpVariable %_ptr_StorageBuffer_VRAM24 StorageBuffer
       %2631 = OpConstantComposite %v3uint %uint_0 %uint_8 %uint_16
%_ptr_StorageBuffer_v3uchar = OpTypePointer StorageBuffer %v3uchar
%PrimitiveSetup = OpTypeStruct %v3int %float %v3int %float %v3int %float %v4int %v4uint
%_runtimearr_PrimitiveSetup = OpTypeRuntimeArray %PrimitiveSetup
%PrimitiveSetups = OpTypeStruct %_runtimearr_PrimitiveSetup
%_ptr_StorageBuffer_PrimitiveSetups = OpTypePointer StorageBuffer %PrimitiveSetups
%primitive_setup = OpVariable %_ptr_StorageBuffer_PrimitiveSetups StorageBuffer
%_ptr_StorageBuffer_PrimitiveSetup = OpTypePointer StorageBuffer %PrimitiveSetup
      %short = OpTypeInt 16 1
    %v4short = OpTypeVector %short 4
%PrimitiveAttribute = OpTypeStruct %v4short %uint %uint %uint %uint %uint %uint
%_runtimearr_PrimitiveAttribute = OpTypeRuntimeArray %PrimitiveAttribute
%PrimitiveAttributes = OpTypeStruct %_runtimearr_PrimitiveAttribute
%_ptr_StorageBuffer_PrimitiveAttributes = OpTypePointer StorageBuffer %PrimitiveAttributes
%primitive_attr = OpVariable %_ptr_StorageBuffer_PrimitiveAttributes StorageBuffer
       %2706 = OpSpecConstantOp %uint BitwiseAnd %VARIANT_FLAGS %uint_2
    %HAS_AA1 = OpSpecConstantOp %bool INotEqual %2706 %uint_0
%uint_33554432 = OpConstant %uint 33554432
       %2750 = OpSpecConstantOp %uint BitwiseAnd %VARIANT_FLAGS %uint_4
%HAS_SCANMSK = OpSpecConstantOp %bool INotEqual %2750 %uint_0
    %float_0 = OpConstant %float 0
%float_4_29496704e_09 = OpConstant %float 4.29496704e+09
%uint_100663296 = OpConstant %uint 100663296
%uint_67108864 = OpConstant %uint 67108864
%float_0_0078125 = OpConstant %float 0.0078125
       %2886 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
  %float_255 = OpConstant %float 255
       %2888 = OpConstantComposite %v4float %float_255 %float_255 %float_255 %float_255
  %float_0_5 = OpConstant %float 0.5
       %2997 = OpSpecConstantOp %uint BitwiseAnd %VARIANT_FLAGS %uint_32
%FEEDBACK_READS_DEPTH = OpSpecConstantOp %bool INotEqual %2997 %uint_0
%FEEDBACK_PSM = OpSpecConstant %uint 0
%FEEDBACK_CPSM = OpSpecConstant %uint 0
       %3014 = OpSpecConstantOp %bool IEqual %FEEDBACK_CPSM %uint_0
    %uint_15 = OpConstant %uint 15
     %int_28 = OpConstant %int 28
       %3042 = OpSpecConstantOp %bool IEqual %FEEDBACK_PSM %uint_19
    %uint_27 = OpConstant %uint 27
       %3044 = OpSpecConstantOp %bool IEqual %FEEDBACK_PSM %uint_27
       %3045 = OpSpecConstantOp %bool LogicalOr %3042 %3044
       %3052 = OpSpecConstantOp %bool IEqual %FEEDBACK_CPSM %uint_0
    %uint_31 = OpConstant %uint 31
    %MAX_CSA = OpSpecConstantOp %uint Select %3052 %uint_15 %uint_31
   %uint_512 = OpConstant %uint 512
       %3066 = OpSpecConstantOp %bool IEqual %FEEDBACK_CPSM %uint_0
%_runtimearr_ushort_0 = OpTypeRuntimeArray %ushort
     %CLUT16 = OpTypeStruct %_runtimearr_ushort_0
%_ptr_StorageBuffer_CLUT16 = OpTypePointer StorageBuffer %CLUT16
     %clut16 = OpVariable %_ptr_StorageBuffer_CLUT16 StorageBuffer
       %3162 = OpSpecConstantOp %bool IEqual %FEEDBACK_PSM %uint_1
       %3163 = OpSpecConstantOp %bool IEqual %FEEDBACK_PSM %uint_49
       %3164 = OpSpecConstantOp %bool LogicalOr %3162 %3163
       %3177 = OpSpecConstantOp %bool IEqual %FEEDBACK_PSM %uint_2
       %3178 = OpSpecConstantOp %bool IEqual %FEEDBACK_PSM %uint_10
       %3179 = OpSpecConstantOp %bool LogicalOr %3177 %3178
       %3180 = OpSpecConstantOp %bool IEqual %FEEDBACK_PSM %uint_50
       %3181 = OpSpecConstantOp %bool LogicalOr %3179 %3180
       %3182 = OpSpecConstantOp %bool IEqual %FEEDBACK_PSM %uint_58
       %3183 = OpSpecConstantOp %bool LogicalOr %3181 %3182
       %3212 = OpSpecConstantOp %uint BitwiseAnd %VARIANT_FLAGS %uint_1
   %FEEDBACK = OpSpecConstantOp %bool INotEqual %3212 %uint_0
 %uint_32768 = OpConstant %uint 32768
%uint_524288 = OpConstant %uint 524288
%uint_1048576 = OpConstant %uint 1048576
 %uint_65536 = OpConstant %uint 65536
%uint_131072 = OpConstant %uint 131072
%uint_262144 = OpConstant %uint 262144
    %TexInfo = OpTypeStruct %v4float %v4float %v2float %v2float
  %uint_2048 = OpConstant %uint 2048
%_arr_TexInfo_uint_2048 = OpTypeArray %TexInfo %uint_2048
%TextureInfo = OpTypeStruct %_arr_TexInfo_uint_2048
%_ptr_Uniform_TextureInfo = OpTypePointer Uniform %TextureInfo
%texture_info = OpVariable %_ptr_Uniform_TextureInfo Uniform
%_ptr_Uniform_TexInfo = OpTypePointer Uniform %TexInfo
     %int_21 = OpConstant %int 21
%float_0_0625 = OpConstant %float 0.0625
   %float_16 = OpConstant %float 16
    %float_1 = OpConstant %float 1
       %3377 = OpConstantComposite %v2float %float_1 %float_1
%float_0_015625 = OpConstant %float 0.015625
       %3437 = OpTypeImage %float 2D 0 0 0 1 Unknown
%_runtimearr_3437 = OpTypeRuntimeArray %3437
%_ptr_UniformConstant__runtimearr_3437 = OpTypePointer UniformConstant %_runtimearr_3437
%bindless_textures = OpVariable %_ptr_UniformConstant__runtimearr_3437 UniformConstant
%_ptr_UniformConstant_3437 = OpTypePointer UniformConstant %3437
       %3445 = OpTypeSampler
%_arr_3445_uint_2 = OpTypeArray %3445 %uint_2
%_ptr_UniformConstant__arr_3445_uint_2 = OpTypePointer UniformConstant %_arr_3445_uint_2
%bindless_samplers = OpVariable %_ptr_UniformConstant__arr_3445_uint_2 UniformConstant
%_ptr_UniformConstant_3445 = OpTypePointer UniformConstant %3445
       %3453 = OpTypeSampledImage %3437
%TransformedAttributes = OpTypeStruct %v4float %v4float %v4float %uint %uint %uint %uint %v4float
%_runtimearr_TransformedAttributes = OpTypeRuntimeArray %TransformedAttributes
%TransformedAttribute = OpTypeStruct %_runtimearr_TransformedAttributes
%_ptr_StorageBuffer_TransformedAttribute = OpTypePointer StorageBuffer %TransformedAttribute
%transformed_attr = OpVariable %_ptr_StorageBuffer_TransformedAttribute StorageBuffer
%_ptr_StorageBuffer_TransformedAttributes = OpTypePointer StorageBuffer %TransformedAttributes
%float_0_00390625 = OpConstant %float 0.00390625
       %3670 = OpSpecConstantOp %bool SGreaterThan %NUM_SAMPLES %int_1
%float_n2047 = OpConstant %float -2047
       %3707 = OpConstantComposite %v2float %float_n2047 %float_n2047
 %float_2047 = OpConstant %float 2047
       %3709 = OpConstantComposite %v2float %float_2047 %float_2047
       %3860 = OpConstantComposite %v3float %float_0 %float_0 %float_0
     %int_11 = OpConstant %int 11
  %float_128 = OpConstant %float 128
%StateVector = OpTypeStruct %uint %uint %v2uint
  %uint_4096 = OpConstant %uint 4096
%_arr_StateVector_uint_4096 = OpTypeArray %StateVector %uint_4096
%StateVectors = OpTypeStruct %_arr_StateVector_uint_4096
%_ptr_Uniform_StateVectors = OpTypePointer Uniform %StateVectors
%state_vectors = OpVariable %_ptr_Uniform_StateVectors Uniform
%_ptr_Uniform_StateVector = OpTypePointer Uniform %StateVector
  %uint_1024 = OpConstant %uint 1024
%uint_2097152 = OpConstant %uint 2097152
       %4127 = OpSpecConstantOp %bool IEqual %FB_FMT %uint_0
    %uint_48 = OpConstant %uint 48
       %4129 = OpSpecConstantOp %bool IEqual %FB_FMT %uint_48
%is_fb_32bit = OpSpecConstantOp %bool LogicalOr %4127 %4129
       %4136 = OpSpecConstantOp %bool LogicalNot %is_fb_24bit
%float_1_00392163 = OpConstant %float 1.00392163
%float_0_00392156886 = OpConstant %float 0.00392156886
%uint_2163800312 = OpConstant %uint 2163800312
       %4371 = OpSpecConstantOp %uint BitwiseAnd %VARIANT_FLAGS %uint_8
%HAS_PRIMITIVE_RANGE = OpSpecConstantOp %bool INotEqual %4371 %uint_0
%_runtimearr_ushort_1 = OpTypeRuntimeArray %ushort
%CoarseTileList = OpTypeStruct %_runtimearr_ushort_1
%_ptr_StorageBuffer_CoarseTileList = OpTypePointer StorageBuffer %CoarseTileList
%coarse_primitive_list = OpVariable %_ptr_StorageBuffer_CoarseTileList StorageBuffer
       %4495 = OpConstantComposite %v4uint %uint_0 %uint_0 %uint_0 %uint_0
%gl_WorkGroupSize = OpConstantComposite %v3uint %uint_64 %uint_1 %uint_1
      %10974 = OpUndef %uint
      %11051 = OpUndef %float
      %11549 = OpUndef %int
      %11865 = OpUndef %bool
      %13321 = OpUndef %v4float
      %16458 = OpConstantComposite %v2int %int_1 %int_1
      %16459 = OpConstantComposite %v4uint %uint_8 %uint_8 %uint_8 %uint_8
      %16460 = OpConstantComposite %v4uint %uint_4 %uint_4 %uint_4 %uint_4
      %16461 = OpConstantComposite %v2int %int_3 %int_3
      %16462 = OpConstantComposite %v2int %int_7 %int_7
      %16463 = OpConstantComposite %v4uint %uint_2 %uint_2 %uint_2 %uint_2
      %16464 = OpConstantComposite %v4uint %uint_1 %uint_1 %uint_1 %uint_1
      %16465 = OpConstantComposite %v4float %float_0_00390625 %float_0_00390625 %float_0_00390625 %float_0_00390625
      %16466 = OpConstantComposite %v2float %float_0_5 %float_0_5
      %16467 = OpConstantComposite %v2float %float_0_015625 %float_0_015625
    %int_128 = OpConstant %int 128
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
%_ptr_Uniform_v2float = OpTypePointer Uniform %v2float
       %main = OpFunction %void None %4
               OpNoLine
          %6 = OpLabel
       %4762 = OpAccessChain %_ptr_Input_uint %gl_WorkGroupID %uint_2
       %4763 = OpLoad %uint %4762
       %4764 = OpAccessChain %_ptr_StorageBuffer_v2uint %_ %int_0 %4763
       %4765 = OpLoad %v2uint %4764
       %4767 = OpCompositeExtract %uint %4765 0
       %4768 = OpBitFieldUExtract %uint %4767 %int_0 %int_16
       %4769 = OpBitcast %int %4768
       %4772 = OpBitFieldUExtract %uint %4767 %int_16 %int_16
       %4773 = OpBitcast %int %4772
       %4775 = OpAccessChain %_ptr_Input_uint %gl_WorkGroupID %uint_1
       %4776 = OpLoad %uint %4775
       %4777 = OpAccessChain %_ptr_Uniform_int %__0 %int_0 %int_3
       %4778 = OpLoad %int %4777
       %4779 = OpISub %int %4778 %int_3
       %4780 = OpBitFieldUExtract %uint %4776 %int_0 %4779
       %4781 = OpBitcast %int %4780
       %4782 = OpIMul %int %4781 %int_8
       %4785 = OpIAdd %int %4769 %4782
       %4792 = OpShiftRightLogical %uint %4776 %4779
       %4793 = OpBitcast %int %4792
       %4794 = OpIMul %int %4793 %int_8
       %4797 = OpIAdd %int %4773 %4794
               OpNoLine
      %16469 = OpCompositeConstruct %v2int %4785 %4797
       %4800 = OpCompositeExtract %uint %4765 1
       %4801 = OpBitcast %int %4800
       %4803 = OpAccessChain %_ptr_Uniform_int %__0 %int_0 %int_1
       %4804 = OpLoad %int %4803
       %4805 = OpIMul %int %4801 %4804
       %4808 = OpAccessChain %_ptr_StorageBuffer_int %coarse_primitive_counts %int_0 %4801
       %4809 = OpLoad %int %4808
       %4811 = OpLoad %uint %gl_SubgroupSize
       %4812 = OpIEqual %bool %4811 %uint_4
               OpSelectionMerge %5091 None
               OpBranchConditional %4812 %4813 %4859
       %4859 = OpLabel
       %4861 = OpIEqual %bool %4811 %uint_8
               OpSelectionMerge %5090 None
               OpBranchConditional %4861 %4862 %4913
       %4913 = OpLabel
       %4915 = OpIEqual %bool %4811 %uint_16
               OpSelectionMerge %5089 None
               OpBranchConditional %4915 %4916 %4972
       %4972 = OpLabel
       %4974 = OpIEqual %bool %4811 %uint_32
               OpSelectionMerge %5088 None
               OpBranchConditional %4974 %4975 %5032
       %5032 = OpLabel
               OpSelectionMerge %5087 None
               OpBranchConditional %1905 %5033 %5078
       %5078 = OpLabel
       %5079 = OpLoad %uint %gl_SubgroupInvocationID
       %5080 = OpBitFieldUExtract %uint %5079 %int_0 %int_3
       %5081 = OpBitcast %int %5080
       %5084 = OpBitFieldUExtract %uint %5079 %int_3 %int_3
       %5085 = OpBitcast %int %5084
               OpNoLine
      %16470 = OpCompositeConstruct %v2int %5081 %5085
               OpBranch %5087
       %5033 = OpLabel
       %5034 = OpAccessChain %_ptr_Input_uint %gl_WorkGroupID %uint_0
       %5035 = OpLoad %uint %5034
       %5036 = OpUMod %uint %5035 %1910
       %5037 = OpBitcast %int %5036
       %5044 = OpUDiv %uint %5035 %1919
       %5045 = OpBitcast %int %5044
               OpNoLine
      %16471 = OpCompositeConstruct %v2int %5037 %5045
       %5050 = OpLoad %uint %gl_SubgroupInvocationID
       %5051 = OpBitFieldUExtract %uint %5050 %int_0 %int_1
       %5052 = OpBitcast %int %5051
       %5054 = OpBitFieldUExtract %uint %5050 %int_2 %int_1
       %5055 = OpBitcast %int %5054
       %5056 = OpIMul %int %5055 %int_2
       %5057 = OpIAdd %int %5052 %5056
       %5059 = OpBitFieldUExtract %uint %5050 %int_4 %int_1
       %5060 = OpBitcast %int %5059
       %5061 = OpIMul %int %5060 %int_4
       %5062 = OpIAdd %int %5057 %5061
       %5065 = OpBitFieldUExtract %uint %5050 %int_1 %int_1
       %5066 = OpBitcast %int %5065
       %5068 = OpBitFieldUExtract %uint %5050 %int_3 %int_1
       %5069 = OpBitcast %int %5068
       %5070 = OpIMul %int %5069 %int_2
       %5071 = OpIAdd %int %5066 %5070
       %5073 = OpBitFieldUExtract %uint %5050 %int_5 %int_1
       %5074 = OpBitcast %int %5073
       %5075 = OpIMul %int %5074 %int_4
       %5076 = OpIAdd %int %5071 %5075
               OpNoLine
      %16472 = OpCompositeConstruct %v2int %5076 %5062
               OpBranch %5087
       %5087 = OpLabel
      %10635 = OpPhi %v2int %16471 %5033 %514 %5078
      %10623 = OpPhi %v2int %16472 %5033 %16470 %5078
               OpBranch %5088
       %4975 = OpLabel
       %4976 = OpLoad %uint %gl_SubgroupID
       %4977 = OpBitFieldUExtract %uint %4976 %int_0 %int_1
       %4978 = OpBitcast %int %4977
               OpNoLine
      %16473 = OpCompositeConstruct %v2int %4978 %int_0
               OpSelectionMerge %5031 None
               OpBranchConditional %1849 %4981 %5022
       %5022 = OpLabel
       %5023 = OpLoad %uint %gl_SubgroupInvocationID
       %5024 = OpBitFieldUExtract %uint %5023 %int_0 %int_2
       %5025 = OpBitcast %int %5024
       %5028 = OpBitFieldUExtract %uint %5023 %int_2 %int_3
       %5029 = OpBitcast %int %5028
               OpNoLine
      %16474 = OpCompositeConstruct %v2int %5025 %5029
               OpBranch %5031
       %4981 = OpLabel
       %4982 = OpAccessChain %_ptr_Input_uint %gl_WorkGroupID %uint_0
       %4983 = OpLoad %uint %4982
       %4984 = OpUMod %uint %4983 %1854
       %4985 = OpBitcast %int %4984
       %4986 = OpIMul %int %int_2 %4985
       %4989 = OpIAdd %int %4978 %4986
       %4993 = OpUDiv %uint %4983 %1864
       %4994 = OpBitcast %int %4993
               OpNoLine
      %16475 = OpCompositeConstruct %v2int %4989 %4994
       %4999 = OpLoad %uint %gl_SubgroupInvocationID
       %5000 = OpBitFieldUExtract %uint %4999 %int_0 %int_1
       %5001 = OpBitcast %int %5000
       %5003 = OpBitFieldUExtract %uint %4999 %int_2 %int_1
       %5004 = OpBitcast %int %5003
       %5005 = OpIMul %int %5004 %int_2
       %5006 = OpIAdd %int %5001 %5005
       %5008 = OpBitFieldUExtract %uint %4999 %int_4 %int_1
       %5009 = OpBitcast %int %5008
       %5010 = OpIMul %int %5009 %int_4
       %5011 = OpIAdd %int %5006 %5010
       %5014 = OpBitFieldUExtract %uint %4999 %int_1 %int_1
       %5015 = OpBitcast %int %5014
       %5017 = OpBitFieldUExtract %uint %4999 %int_3 %int_1
       %5018 = OpBitcast %int %5017
       %5019 = OpIMul %int %5018 %int_2
       %5020 = OpIAdd %int %5015 %5019
               OpNoLine
      %16476 = OpCompositeConstruct %v2int %5020 %5011
               OpBranch %5031
       %5031 = OpLabel
      %10634 = OpPhi %v2int %16475 %4981 %16473 %5022
      %10622 = OpPhi %v2int %16476 %4981 %16474 %5022
               OpBranch %5088
       %5088 = OpLabel
      %10633 = OpPhi %v2int %10634 %5031 %10635 %5087
      %10621 = OpPhi %v2int %10622 %5031 %10623 %5087
      %16492 = OpCompositeConstruct %v2bool %4974 %4974
      %16493 = OpSelect %v2int %16492 %1843 %1904
               OpBranch %5089
       %4916 = OpLabel
       %4917 = OpLoad %uint %gl_SubgroupID
       %4918 = OpBitFieldUExtract %uint %4917 %int_0 %int_1
       %4919 = OpBitcast %int %4918
       %4922 = OpBitFieldUExtract %uint %4917 %int_1 %int_1
       %4923 = OpBitcast %int %4922
               OpNoLine
      %16477 = OpCompositeConstruct %v2int %4919 %4923
               OpSelectionMerge %4971 None
               OpBranchConditional %1788 %4925 %4962
       %4962 = OpLabel
       %4963 = OpLoad %uint %gl_SubgroupInvocationID
       %4964 = OpBitFieldUExtract %uint %4963 %int_0 %int_2
       %4965 = OpBitcast %int %4964
       %4968 = OpBitFieldUExtract %uint %4963 %int_2 %int_2
       %4969 = OpBitcast %int %4968
               OpNoLine
      %16478 = OpCompositeConstruct %v2int %4965 %4969
               OpBranch %4971
       %4925 = OpLabel
       %4926 = OpAccessChain %_ptr_Input_uint %gl_WorkGroupID %uint_0
       %4927 = OpLoad %uint %4926
       %4928 = OpUMod %uint %4927 %1793
       %4929 = OpBitcast %int %4928
       %4930 = OpIMul %int %int_2 %4929
       %4933 = OpIAdd %int %4919 %4930
       %4937 = OpUDiv %uint %4927 %1803
       %4938 = OpBitcast %int %4937
       %4939 = OpIMul %int %int_2 %4938
       %4942 = OpIAdd %int %4923 %4939
               OpNoLine
      %16479 = OpCompositeConstruct %v2int %4933 %4942
       %4944 = OpLoad %uint %gl_SubgroupInvocationID
       %4945 = OpBitFieldUExtract %uint %4944 %int_0 %int_1
       %4946 = OpBitcast %int %4945
       %4948 = OpBitFieldUExtract %uint %4944 %int_2 %int_1
       %4949 = OpBitcast %int %4948
       %4950 = OpIMul %int %4949 %int_2
       %4951 = OpIAdd %int %4946 %4950
       %4954 = OpBitFieldUExtract %uint %4944 %int_1 %int_1
       %4955 = OpBitcast %int %4954
       %4957 = OpBitFieldUExtract %uint %4944 %int_3 %int_1
       %4958 = OpBitcast %int %4957
       %4959 = OpIMul %int %4958 %int_2
       %4960 = OpIAdd %int %4955 %4959
               OpNoLine
      %16480 = OpCompositeConstruct %v2int %4960 %4951
               OpBranch %4971
       %4971 = OpLabel
      %10632 = OpPhi %v2int %16479 %4925 %16477 %4962
      %10620 = OpPhi %v2int %16480 %4925 %16478 %4962
               OpBranch %5089
       %5089 = OpLabel
      %10631 = OpPhi %v2int %10632 %4971 %10633 %5088
      %10619 = OpPhi %v2int %10620 %4971 %10621 %5088
      %10610 = OpPhi %v2int %1779 %4971 %16493 %5088
               OpBranch %5090
       %4862 = OpLabel
       %4863 = OpLoad %uint %gl_SubgroupID
       %4864 = OpBitFieldUExtract %uint %4863 %int_0 %int_2
       %4865 = OpBitcast %int %4864
       %4868 = OpBitFieldUExtract %uint %4863 %int_2 %int_1
       %4869 = OpBitcast %int %4868
               OpNoLine
      %16481 = OpCompositeConstruct %v2int %4865 %4869
               OpSelectionMerge %4912 None
               OpBranchConditional %1729 %4871 %4903
       %4903 = OpLabel
       %4904 = OpLoad %uint %gl_SubgroupInvocationID
       %4905 = OpBitFieldUExtract %uint %4904 %int_0 %int_1
       %4906 = OpBitcast %int %4905
       %4909 = OpBitFieldUExtract %uint %4904 %int_1 %int_1
       %4910 = OpBitcast %int %4909
               OpNoLine
      %16482 = OpCompositeConstruct %v2int %4906 %4910
               OpBranch %4912
       %4871 = OpLabel
       %4872 = OpAccessChain %_ptr_Input_uint %gl_WorkGroupID %uint_0
       %4873 = OpLoad %uint %4872
       %4874 = OpUMod %uint %4873 %1734
       %4875 = OpBitcast %int %4874
       %4876 = OpIMul %int %int_4 %4875
       %4879 = OpIAdd %int %4865 %4876
       %4883 = OpUDiv %uint %4873 %1744
       %4884 = OpBitcast %int %4883
       %4885 = OpIMul %int %int_2 %4884
       %4888 = OpIAdd %int %4869 %4885
               OpNoLine
      %16483 = OpCompositeConstruct %v2int %4879 %4888
       %4890 = OpLoad %uint %gl_SubgroupInvocationID
       %4891 = OpBitFieldUExtract %uint %4890 %int_0 %int_1
       %4892 = OpBitcast %int %4891
       %4894 = OpBitFieldUExtract %uint %4890 %int_2 %int_1
       %4895 = OpBitcast %int %4894
       %4896 = OpIMul %int %4895 %int_2
       %4897 = OpIAdd %int %4892 %4896
       %4900 = OpBitFieldUExtract %uint %4890 %int_1 %int_1
       %4901 = OpBitcast %int %4900
               OpNoLine
      %16484 = OpCompositeConstruct %v2int %4901 %4897
               OpBranch %4912
       %4912 = OpLabel
      %10630 = OpPhi %v2int %16483 %4871 %16481 %4903
      %10618 = OpPhi %v2int %16484 %4871 %16482 %4903
               OpBranch %5090
       %5090 = OpLabel
      %10629 = OpPhi %v2int %10630 %4912 %10631 %5089
      %10617 = OpPhi %v2int %10618 %4912 %10619 %5089
      %10608 = OpPhi %v2int %1720 %4912 %10610 %5089
               OpBranch %5091
       %4813 = OpLabel
       %4814 = OpLoad %uint %gl_SubgroupID
       %4815 = OpBitFieldUExtract %uint %4814 %int_0 %int_2
       %4816 = OpBitcast %int %4815
       %4819 = OpBitFieldUExtract %uint %4814 %int_2 %int_2
       %4820 = OpBitcast %int %4819
               OpNoLine
      %16485 = OpCompositeConstruct %v2int %4816 %4820
               OpSelectionMerge %4858 None
               OpBranchConditional %1673 %4822 %4849
       %4849 = OpLabel
       %4850 = OpLoad %uint %gl_SubgroupInvocationID
       %4851 = OpBitFieldUExtract %uint %4850 %int_0 %int_1
       %4852 = OpBitcast %int %4851
       %4855 = OpBitFieldUExtract %uint %4850 %int_1 %int_1
       %4856 = OpBitcast %int %4855
               OpNoLine
      %16486 = OpCompositeConstruct %v2int %4852 %4856
               OpBranch %4858
       %4822 = OpLabel
       %4823 = OpAccessChain %_ptr_Input_uint %gl_WorkGroupID %uint_0
       %4824 = OpLoad %uint %4823
       %4825 = OpUMod %uint %4824 %1678
       %4826 = OpBitcast %int %4825
       %4827 = OpIMul %int %int_4 %4826
       %4830 = OpIAdd %int %4816 %4827
       %4834 = OpUDiv %uint %4824 %1688
       %4835 = OpBitcast %int %4834
       %4836 = OpIMul %int %int_4 %4835
       %4839 = OpIAdd %int %4820 %4836
               OpNoLine
      %16487 = OpCompositeConstruct %v2int %4830 %4839
       %4841 = OpLoad %uint %gl_SubgroupInvocationID
       %4842 = OpBitFieldUExtract %uint %4841 %int_0 %int_1
       %4843 = OpBitcast %int %4842
       %4846 = OpBitFieldUExtract %uint %4841 %int_1 %int_1
       %4847 = OpBitcast %int %4846
               OpNoLine
      %16488 = OpCompositeConstruct %v2int %4847 %4843
               OpBranch %4858
       %4858 = OpLabel
      %10628 = OpPhi %v2int %16487 %4822 %16485 %4849
      %10616 = OpPhi %v2int %16488 %4822 %16486 %4849
               OpBranch %5091
       %5091 = OpLabel
      %10627 = OpPhi %v2int %10628 %4858 %10629 %5090
      %10615 = OpPhi %v2int %10616 %4858 %10617 %5090
      %10606 = OpPhi %v2int %1657 %4858 %10608 %5090
       %5093 = OpCompositeConstruct %v2int %NUM_SAMPLES_Y %NUM_SAMPLES_Y
       %5094 = OpIMul %v2int %16469 %5093
               OpSelectionMerge %5111 None
               OpBranchConditional %1966 %5095 %5111
       %5095 = OpLabel
       %5097 = OpCompositeExtract %int %10606 0
       %5098 = OpIMul %int %5097 %int_2
      %10317 = OpCompositeInsert %v2int %5098 %10606 0
       %5101 = OpCompositeExtract %int %10615 0
       %5102 = OpIMul %int %5101 %int_2
       %5105 = OpCompositeExtract %int %10615 1
       %5106 = OpBitwiseAnd %int %5105 %int_1
       %5109 = OpIAdd %int %5102 %5106
      %10324 = OpCompositeInsert %v2int %5109 %10615 0
               OpBranch %5111
       %5111 = OpLabel
      %10636 = OpPhi %v2int %10615 %5091 %10324 %5095
      %10625 = OpPhi %v2int %10606 %5091 %10317 %5095
       %5115 = OpIMul %v2int %10625 %10627
       %5116 = OpIAdd %v2int %5094 %5115
       %5118 = OpIAdd %v2int %5116 %10636
       %5122 = OpCompositeConstruct %v2int %1996 %1996
       %5123 = OpBitwiseAnd %v2int %5118 %5122
       %5126 = OpCompositeExtract %int %5118 0
       %5127 = OpShiftRightArithmetic %int %5126 %NUM_SAMPLES_Y_LOG2
       %5128 = OpBitcast %uint %5127
       %5130 = OpCompositeExtract %int %5118 1
       %5131 = OpShiftRightArithmetic %int %5130 %NUM_SAMPLES_Y_LOG2
       %5132 = OpBitcast %uint %5131
       %5133 = OpAccessChain %_ptr_Uniform_int %__0 %int_0 %int_4
       %5134 = OpLoad %int %5133
       %5135 = OpIMul %int %5134 %int_32
       %5136 = OpBitcast %uint %5135
       %5137 = OpAccessChain %_ptr_Uniform_int %__0 %int_0 %int_6
       %5138 = OpLoad %int %5137
       %5139 = OpBitcast %uint %5138
               OpSelectionMerge %5806 None
               OpSwitch %FB_FMT %5762 2 %5773 10 %5773 50 %5773 58 %5773 19 %5784 20 %5795
       %5795 = OpLabel
               OpBranch %5806
       %5784 = OpLabel
               OpBranch %5806
       %5773 = OpLabel
               OpBranch %5806
       %5762 = OpLabel
               OpBranch %5806
       %5806 = OpLabel
      %10646 = OpPhi %uint %uint_64 %5762 %uint_64 %5773 %uint_128 %5784 %uint_128 %5795
      %10645 = OpPhi %uint %uint_32 %5762 %uint_64 %5773 %uint_64 %5784 %uint_128 %5795
      %10644 = OpPhi %uint %uint_8 %5762 %uint_16 %5773 %uint_16 %5784 %uint_32 %5795
      %10643 = OpPhi %uint %uint_8 %5762 %uint_8 %5773 %uint_16 %5784 %uint_16 %5795
      %10642 = OpPhi %uint %uint_2 %5762 %uint_2 %5773 %uint_4 %5784 %uint_4 %5795
      %10641 = OpPhi %uint %uint_6 %5762 %uint_6 %5773 %uint_7 %5784 %uint_7 %5795
      %10640 = OpPhi %uint %uint_5 %5762 %uint_6 %5773 %uint_6 %5784 %uint_7 %5795
      %10639 = OpPhi %uint %uint_3 %5762 %uint_4 %5773 %uint_4 %5784 %uint_5 %5795
      %10638 = OpPhi %uint %uint_3 %5762 %uint_3 %5773 %uint_4 %5784 %uint_4 %5795
      %10637 = OpPhi %uint %uint_1 %5762 %uint_1 %5773 %uint_2 %5784 %uint_2 %5795
       %5232 = OpShiftRightLogical %uint %5128 %10641
       %5236 = OpShiftRightLogical %uint %5132 %10640
       %5238 = OpIEqual %bool %FB_FMT %uint_20
       %5240 = OpIEqual %bool %FB_FMT %uint_19
       %5241 = OpLogicalOr %bool %5238 %5240
               OpSelectionMerge %5245 None
               OpBranchConditional %5241 %5242 %5245
       %5242 = OpLabel
       %5244 = OpShiftRightLogical %uint %5139 %int_1
               OpBranch %5245
       %5245 = OpLabel
      %10649 = OpPhi %uint %5139 %5806 %5244 %5242
       %5248 = OpIMul %uint %5236 %10649
       %5250 = OpIAdd %uint %5248 %5232
       %5254 = OpISub %uint %10646 %uint_1
       %5255 = OpBitwiseAnd %uint %5128 %5254
       %5258 = OpShiftRightLogical %uint %5255 %10639
       %5262 = OpISub %uint %10645 %uint_1
       %5263 = OpBitwiseAnd %uint %5132 %5262
       %5266 = OpShiftRightLogical %uint %5263 %10638
       %5270 = OpISub %uint %10643 %uint_1
       %5271 = OpBitwiseAnd %uint %5132 %5270
       %5274 = OpShiftRightLogical %uint %5271 %10637
       %5278 = OpISub %uint %10644 %uint_1
       %5279 = OpBitwiseAnd %uint %5128 %5278
       %5283 = OpISub %uint %10642 %uint_1
       %5284 = OpBitwiseAnd %uint %5132 %5283
               OpSelectionMerge %5756 None
               OpSwitch %FB_FMT %5287 0 %5287 1 %5287 44 %5287 36 %5287 27 %5287 48 %5338 49 %5338 2 %5391 50 %5447 10 %5505 58 %5560 19 %5617 20 %5683
       %5683 = OpLabel
       %5685 = OpBitwiseAnd %uint %5266 %uint_1
       %5687 = OpBitwiseAnd %uint %5258 %uint_1
       %5688 = OpShiftLeftLogical %uint %5687 %int_1
       %5689 = OpBitwiseOr %uint %5685 %5688
       %5691 = OpBitwiseAnd %uint %5266 %uint_2
       %5692 = OpShiftLeftLogical %uint %5691 %int_1
       %5693 = OpBitwiseOr %uint %5689 %5692
       %5695 = OpBitwiseAnd %uint %5258 %uint_2
       %5696 = OpShiftLeftLogical %uint %5695 %int_2
       %5697 = OpBitwiseOr %uint %5693 %5696
       %5699 = OpBitwiseAnd %uint %5266 %uint_4
       %5700 = OpShiftLeftLogical %uint %5699 %int_2
       %5701 = OpBitwiseOr %uint %5697 %5700
       %5704 = OpIAdd %uint %5701 %5136
       %5706 = OpBitwiseAnd %uint %5284 %uint_2
       %5707 = OpShiftRightLogical %uint %5706 %int_1
       %5709 = OpBitwiseAnd %uint %5279 %uint_8
       %5710 = OpShiftRightLogical %uint %5709 %int_2
       %5711 = OpBitwiseOr %uint %5707 %5710
       %5713 = OpBitwiseAnd %uint %5279 %uint_16
       %5714 = OpShiftRightLogical %uint %5713 %int_2
       %5715 = OpBitwiseOr %uint %5711 %5714
       %5717 = OpBitwiseAnd %uint %5279 %uint_1
       %5718 = OpShiftLeftLogical %uint %5717 %int_3
       %5719 = OpBitwiseOr %uint %5715 %5718
       %5721 = OpBitwiseAnd %uint %5284 %uint_1
       %5722 = OpShiftLeftLogical %uint %5721 %int_4
       %5723 = OpBitwiseOr %uint %5719 %5722
       %5725 = OpBitwiseAnd %uint %5279 %uint_2
       %5726 = OpShiftLeftLogical %uint %5725 %int_4
       %5727 = OpBitwiseOr %uint %5723 %5726
       %5729 = OpBitwiseAnd %uint %5279 %uint_4
       %5730 = OpShiftLeftLogical %uint %5729 %int_4
       %5733 = OpShiftLeftLogical %uint %5706 %int_5
       %5734 = OpBitwiseXor %uint %5730 %5733
       %5736 = OpBitwiseAnd %uint %5274 %uint_1
       %5737 = OpShiftLeftLogical %uint %5736 %int_6
       %5738 = OpBitwiseXor %uint %5734 %5737
       %5739 = OpBitwiseOr %uint %5727 %5738
       %5741 = OpIMul %uint %5250 %uint_8192
       %5743 = OpIMul %uint %5704 %uint_256
       %5744 = OpIAdd %uint %5741 %5743
       %5746 = OpIMul %uint %5274 %uint_64
       %5747 = OpIAdd %uint %5744 %5746
       %5748 = OpShiftLeftLogical %uint %5747 %int_1
       %5750 = OpIAdd %uint %5748 %5739
       %5753 = OpShiftLeftLogical %uint %VRAM_MASK %int_1
       %5754 = OpBitwiseOr %uint %5753 %uint_1
       %5755 = OpBitwiseAnd %uint %5750 %5754
               OpBranch %5756
       %5617 = OpLabel
       %5619 = OpBitwiseAnd %uint %5258 %uint_1
       %5621 = OpBitwiseAnd %uint %5266 %uint_1
       %5622 = OpShiftLeftLogical %uint %5621 %int_1
       %5623 = OpBitwiseOr %uint %5619 %5622
       %5625 = OpBitwiseAnd %uint %5258 %uint_2
       %5626 = OpShiftLeftLogical %uint %5625 %int_1
       %5627 = OpBitwiseOr %uint %5623 %5626
       %5629 = OpBitwiseAnd %uint %5266 %uint_2
       %5630 = OpShiftLeftLogical %uint %5629 %int_2
       %5631 = OpBitwiseOr %uint %5627 %5630
       %5633 = OpBitwiseAnd %uint %5258 %uint_4
       %5634 = OpShiftLeftLogical %uint %5633 %int_2
       %5635 = OpBitwiseOr %uint %5631 %5634
       %5638 = OpIAdd %uint %5635 %5136
       %5640 = OpBitwiseAnd %uint %5284 %uint_2
       %5641 = OpShiftRightLogical %uint %5640 %int_1
       %5643 = OpBitwiseAnd %uint %5279 %uint_8
       %5644 = OpShiftRightLogical %uint %5643 %int_2
       %5645 = OpBitwiseOr %uint %5641 %5644
       %5647 = OpBitwiseAnd %uint %5279 %uint_1
       %5648 = OpShiftLeftLogical %uint %5647 %int_2
       %5649 = OpBitwiseOr %uint %5645 %5648
       %5651 = OpBitwiseAnd %uint %5284 %uint_1
       %5652 = OpShiftLeftLogical %uint %5651 %int_3
       %5653 = OpBitwiseOr %uint %5649 %5652
       %5655 = OpBitwiseAnd %uint %5279 %uint_2
       %5656 = OpShiftLeftLogical %uint %5655 %int_3
       %5657 = OpBitwiseOr %uint %5653 %5656
       %5659 = OpBitwiseAnd %uint %5279 %uint_4
       %5660 = OpShiftLeftLogical %uint %5659 %int_3
       %5663 = OpShiftLeftLogical %uint %5640 %int_4
       %5664 = OpBitwiseXor %uint %5660 %5663
       %5666 = OpBitwiseAnd %uint %5274 %uint_1
       %5667 = OpShiftLeftLogical %uint %5666 %int_5
       %5668 = OpBitwiseXor %uint %5664 %5667
       %5669 = OpBitwiseOr %uint %5657 %5668
       %5671 = OpIMul %uint %5250 %uint_8192
       %5673 = OpIMul %uint %5638 %uint_256
       %5674 = OpIAdd %uint %5671 %5673
       %5676 = OpIMul %uint %5274 %uint_64
       %5677 = OpIAdd %uint %5674 %5676
       %5679 = OpIAdd %uint %5677 %5669
       %5682 = OpBitwiseAnd %uint %5679 %VRAM_MASK
               OpBranch %5756
       %5560 = OpLabel
       %5562 = OpBitwiseAnd %uint %5266 %uint_1
       %5564 = OpBitwiseAnd %uint %5258 %uint_1
       %5565 = OpShiftLeftLogical %uint %5564 %int_1
       %5566 = OpBitwiseOr %uint %5562 %5565
       %5568 = OpBitwiseAnd %uint %5266 %uint_4
       %5569 = OpBitwiseOr %uint %5566 %5568
       %5571 = OpBitwiseAnd %uint %5266 %uint_2
       %5572 = OpShiftLeftLogical %uint %5571 %int_2
       %5573 = OpBitwiseOr %uint %5569 %5572
       %5575 = OpBitwiseAnd %uint %5258 %uint_2
       %5576 = OpShiftLeftLogical %uint %5575 %int_3
       %5577 = OpBitwiseOr %uint %5573 %5576
       %5580 = OpIAdd %uint %5577 %5136
       %5582 = OpBitwiseXor %uint %5580 %uint_24
       %5584 = OpBitwiseAnd %uint %5279 %uint_8
       %5585 = OpShiftRightLogical %uint %5584 %int_3
       %5587 = OpBitwiseAnd %uint %5279 %uint_1
       %5588 = OpShiftLeftLogical %uint %5587 %int_1
       %5589 = OpBitwiseOr %uint %5585 %5588
       %5591 = OpBitwiseAnd %uint %5284 %uint_1
       %5592 = OpShiftLeftLogical %uint %5591 %int_2
       %5593 = OpBitwiseOr %uint %5589 %5592
       %5595 = OpBitwiseAnd %uint %5279 %uint_2
       %5596 = OpShiftLeftLogical %uint %5595 %int_2
       %5597 = OpBitwiseOr %uint %5593 %5596
       %5599 = OpBitwiseAnd %uint %5279 %uint_4
       %5600 = OpShiftLeftLogical %uint %5599 %int_2
       %5601 = OpBitwiseOr %uint %5597 %5600
       %5603 = OpIMul %uint %5250 %uint_8192
       %5605 = OpIMul %uint %5582 %uint_256
       %5606 = OpIAdd %uint %5603 %5605
       %5608 = OpIMul %uint %5274 %uint_64
       %5609 = OpIAdd %uint %5606 %5608
       %5611 = OpIMul %uint %5601 %uint_2
       %5612 = OpIAdd %uint %5609 %5611
       %5615 = OpBitwiseAnd %uint %5612 %VRAM_MASK
       %5616 = OpShiftRightLogical %uint %5615 %int_1
               OpBranch %5756
       %5505 = OpLabel
       %5507 = OpBitwiseAnd %uint %5266 %uint_1
       %5509 = OpBitwiseAnd %uint %5258 %uint_1
       %5510 = OpShiftLeftLogical %uint %5509 %int_1
       %5511 = OpBitwiseOr %uint %5507 %5510
       %5513 = OpBitwiseAnd %uint %5266 %uint_4
       %5514 = OpBitwiseOr %uint %5511 %5513
       %5516 = OpBitwiseAnd %uint %5266 %uint_2
       %5517 = OpShiftLeftLogical %uint %5516 %int_2
       %5518 = OpBitwiseOr %uint %5514 %5517
       %5520 = OpBitwiseAnd %uint %5258 %uint_2
       %5521 = OpShiftLeftLogical %uint %5520 %int_3
       %5522 = OpBitwiseOr %uint %5518 %5521
       %5525 = OpIAdd %uint %5522 %5136
       %5527 = OpBitwiseAnd %uint %5279 %uint_8
       %5528 = OpShiftRightLogical %uint %5527 %int_3
       %5530 = OpBitwiseAnd %uint %5279 %uint_1
       %5531 = OpShiftLeftLogical %uint %5530 %int_1
       %5532 = OpBitwiseOr %uint %5528 %5531
       %5534 = OpBitwiseAnd %uint %5284 %uint_1
       %5535 = OpShiftLeftLogical %uint %5534 %int_2
       %5536 = OpBitwiseOr %uint %5532 %5535
       %5538 = OpBitwiseAnd %uint %5279 %uint_2
       %5539 = OpShiftLeftLogical %uint %5538 %int_2
       %5540 = OpBitwiseOr %uint %5536 %5539
       %5542 = OpBitwiseAnd %uint %5279 %uint_4
       %5543 = OpShiftLeftLogical %uint %5542 %int_2
       %5544 = OpBitwiseOr %uint %5540 %5543
       %5546 = OpIMul %uint %5250 %uint_8192
       %5548 = OpIMul %uint %5525 %uint_256
       %5549 = OpIAdd %uint %5546 %5548
       %5551 = OpIMul %uint %5274 %uint_64
       %5552 = OpIAdd %uint %5549 %5551
       %5554 = OpIMul %uint %5544 %uint_2
       %5555 = OpIAdd %uint %5552 %5554
       %5558 = OpBitwiseAnd %uint %5555 %VRAM_MASK
       %5559 = OpShiftRightLogical %uint %5558 %int_1
               OpBranch %5756
       %5447 = OpLabel
       %5449 = OpBitwiseAnd %uint %5266 %uint_1
       %5451 = OpBitwiseAnd %uint %5258 %uint_1
       %5452 = OpShiftLeftLogical %uint %5451 %int_1
       %5453 = OpBitwiseOr %uint %5449 %5452
       %5455 = OpBitwiseAnd %uint %5266 %uint_2
       %5456 = OpShiftLeftLogical %uint %5455 %int_1
       %5457 = OpBitwiseOr %uint %5453 %5456
       %5459 = OpBitwiseAnd %uint %5258 %uint_2
       %5460 = OpShiftLeftLogical %uint %5459 %int_2
       %5461 = OpBitwiseOr %uint %5457 %5460
       %5463 = OpBitwiseAnd %uint %5266 %uint_4
       %5464 = OpShiftLeftLogical %uint %5463 %int_2
       %5465 = OpBitwiseOr %uint %5461 %5464
       %5468 = OpIAdd %uint %5465 %5136
       %5470 = OpBitwiseXor %uint %5468 %uint_24
       %5472 = OpBitwiseAnd %uint %5279 %uint_8
       %5473 = OpShiftRightLogical %uint %5472 %int_3
       %5475 = OpBitwiseAnd %uint %5279 %uint_1
       %5476 = OpShiftLeftLogical %uint %5475 %int_1
       %5477 = OpBitwiseOr %uint %5473 %5476
       %5479 = OpBitwiseAnd %uint %5284 %uint_1
       %5480 = OpShiftLeftLogical %uint %5479 %int_2
       %5481 = OpBitwiseOr %uint %5477 %5480
       %5483 = OpBitwiseAnd %uint %5279 %uint_2
       %5484 = OpShiftLeftLogical %uint %5483 %int_2
       %5485 = OpBitwiseOr %uint %5481 %5484
       %5487 = OpBitwiseAnd %uint %5279 %uint_4
       %5488 = OpShiftLeftLogical %uint %5487 %int_2
       %5489 = OpBitwiseOr %uint %5485 %5488
       %5491 = OpIMul %uint %5250 %uint_8192
       %5493 = OpIMul %uint %5470 %uint_256
       %5494 = OpIAdd %uint %5491 %5493
       %5496 = OpIMul %uint %5274 %uint_64
       %5497 = OpIAdd %uint %5494 %5496
       %5499 = OpIMul %uint %5489 %uint_2
       %5500 = OpIAdd %uint %5497 %5499
       %5503 = OpBitwiseAnd %uint %5500 %VRAM_MASK
       %5504 = OpShiftRightLogical %uint %5503 %int_1
               OpBranch %5756
       %5391 = OpLabel
       %5393 = OpBitwiseAnd %uint %5266 %uint_1
       %5395 = OpBitwiseAnd %uint %5258 %uint_1
       %5396 = OpShiftLeftLogical %uint %5395 %int_1
       %5397 = OpBitwiseOr %uint %5393 %5396
       %5399 = OpBitwiseAnd %uint %5266 %uint_2
       %5400 = OpShiftLeftLogical %uint %5399 %int_1
       %5401 = OpBitwiseOr %uint %5397 %5400
       %5403 = OpBitwiseAnd %uint %5258 %uint_2
       %5404 = OpShiftLeftLogical %uint %5403 %int_2
       %5405 = OpBitwiseOr %uint %5401 %5404
       %5407 = OpBitwiseAnd %uint %5266 %uint_4
       %5408 = OpShiftLeftLogical %uint %5407 %int_2
       %5409 = OpBitwiseOr %uint %5405 %5408
       %5412 = OpIAdd %uint %5409 %5136
       %5414 = OpBitwiseAnd %uint %5279 %uint_8
       %5415 = OpShiftRightLogical %uint %5414 %int_3
       %5417 = OpBitwiseAnd %uint %5279 %uint_1
       %5418 = OpShiftLeftLogical %uint %5417 %int_1
       %5419 = OpBitwiseOr %uint %5415 %5418
       %5421 = OpBitwiseAnd %uint %5284 %uint_1
       %5422 = OpShiftLeftLogical %uint %5421 %int_2
       %5423 = OpBitwiseOr %uint %5419 %5422
       %5425 = OpBitwiseAnd %uint %5279 %uint_2
       %5426 = OpShiftLeftLogical %uint %5425 %int_2
       %5427 = OpBitwiseOr %uint %5423 %5426
       %5429 = OpBitwiseAnd %uint %5279 %uint_4
       %5430 = OpShiftLeftLogical %uint %5429 %int_2
       %5431 = OpBitwiseOr %uint %5427 %5430
       %5433 = OpIMul %uint %5250 %uint_8192
       %5435 = OpIMul %uint %5412 %uint_256
       %5436 = OpIAdd %uint %5433 %5435
       %5438 = OpIMul %uint %5274 %uint_64
       %5439 = OpIAdd %uint %5436 %5438
       %5441 = OpIMul %uint %5431 %uint_2
       %5442 = OpIAdd %uint %5439 %5441
       %5445 = OpBitwiseAnd %uint %5442 %VRAM_MASK
       %5446 = OpShiftRightLogical %uint %5445 %int_1
               OpBranch %5756
       %5338 = OpLabel
       %5340 = OpBitwiseAnd %uint %5258 %uint_1
       %5342 = OpBitwiseAnd %uint %5266 %uint_1
       %5343 = OpShiftLeftLogical %uint %5342 %int_1
       %5344 = OpBitwiseOr %uint %5340 %5343
       %5346 = OpBitwiseAnd %uint %5258 %uint_2
       %5347 = OpShiftLeftLogical %uint %5346 %int_1
       %5348 = OpBitwiseOr %uint %5344 %5347
       %5350 = OpBitwiseAnd %uint %5266 %uint_2
       %5351 = OpShiftLeftLogical %uint %5350 %int_2
       %5352 = OpBitwiseOr %uint %5348 %5351
       %5354 = OpBitwiseAnd %uint %5258 %uint_4
       %5355 = OpShiftLeftLogical %uint %5354 %int_2
       %5356 = OpBitwiseOr %uint %5352 %5355
       %5359 = OpIAdd %uint %5356 %5136
       %5361 = OpBitwiseXor %uint %5359 %uint_24
       %5363 = OpBitwiseAnd %uint %5279 %uint_1
       %5365 = OpBitwiseAnd %uint %5284 %uint_1
       %5366 = OpShiftLeftLogical %uint %5365 %int_1
       %5367 = OpBitwiseOr %uint %5363 %5366
       %5369 = OpBitwiseAnd %uint %5279 %uint_2
       %5370 = OpShiftLeftLogical %uint %5369 %int_1
       %5371 = OpBitwiseOr %uint %5367 %5370
       %5373 = OpBitwiseAnd %uint %5279 %uint_4
       %5374 = OpShiftLeftLogical %uint %5373 %int_1
       %5375 = OpBitwiseOr %uint %5371 %5374
       %5377 = OpIMul %uint %5250 %uint_8192
       %5379 = OpIMul %uint %5361 %uint_256
       %5380 = OpIAdd %uint %5377 %5379
       %5382 = OpIMul %uint %5274 %uint_64
       %5383 = OpIAdd %uint %5380 %5382
       %5385 = OpIMul %uint %5375 %uint_4
       %5386 = OpIAdd %uint %5383 %5385
       %5389 = OpBitwiseAnd %uint %5386 %VRAM_MASK
       %5390 = OpShiftRightLogical %uint %5389 %int_2
               OpBranch %5756
       %5287 = OpLabel
       %5289 = OpBitwiseAnd %uint %5258 %uint_1
       %5291 = OpBitwiseAnd %uint %5266 %uint_1
       %5292 = OpShiftLeftLogical %uint %5291 %int_1
       %5293 = OpBitwiseOr %uint %5289 %5292
       %5295 = OpBitwiseAnd %uint %5258 %uint_2
       %5296 = OpShiftLeftLogical %uint %5295 %int_1
       %5297 = OpBitwiseOr %uint %5293 %5296
       %5299 = OpBitwiseAnd %uint %5266 %uint_2
       %5300 = OpShiftLeftLogical %uint %5299 %int_2
       %5301 = OpBitwiseOr %uint %5297 %5300
       %5303 = OpBitwiseAnd %uint %5258 %uint_4
       %5304 = OpShiftLeftLogical %uint %5303 %int_2
       %5305 = OpBitwiseOr %uint %5301 %5304
       %5308 = OpIAdd %uint %5305 %5136
       %5310 = OpBitwiseAnd %uint %5279 %uint_1
       %5312 = OpBitwiseAnd %uint %5284 %uint_1
       %5313 = OpShiftLeftLogical %uint %5312 %int_1
       %5314 = OpBitwiseOr %uint %5310 %5313
       %5316 = OpBitwiseAnd %uint %5279 %uint_2
       %5317 = OpShiftLeftLogical %uint %5316 %int_1
       %5318 = OpBitwiseOr %uint %5314 %5317
       %5320 = OpBitwiseAnd %uint %5279 %uint_4
       %5321 = OpShiftLeftLogical %uint %5320 %int_1
       %5322 = OpBitwiseOr %uint %5318 %5321
       %5324 = OpIMul %uint %5250 %uint_8192
       %5326 = OpIMul %uint %5308 %uint_256
       %5327 = OpIAdd %uint %5324 %5326
       %5329 = OpIMul %uint %5274 %uint_64
       %5330 = OpIAdd %uint %5327 %5329
       %5332 = OpIMul %uint %5322 %uint_4
       %5333 = OpIAdd %uint %5330 %5332
       %5336 = OpBitwiseAnd %uint %5333 %VRAM_MASK
       %5337 = OpShiftRightLogical %uint %5336 %int_2
               OpBranch %5756
       %5756 = OpLabel
      %10650 = OpPhi %uint %5337 %5287 %5390 %5338 %5446 %5391 %5504 %5447 %5559 %5505 %5616 %5560 %5682 %5617 %5755 %5683
       %5141 = OpBitcast %int %10650
               OpSelectionMerge %5171 None
               OpBranchConditional %Z_SENSITIVE %5143 %5169
       %5169 = OpLabel
               OpBranch %5171
       %5143 = OpLabel
       %5152 = OpAccessChain %_ptr_Uniform_int %__0 %int_0 %int_5
       %5153 = OpLoad %int %5152
       %5154 = OpIMul %int %5153 %int_32
       %5155 = OpBitcast %uint %5154
               OpSelectionMerge %6417 None
               OpSwitch %ZB_FMT %6373 2 %6384 10 %6384 50 %6384 58 %6384 19 %6395 20 %6406
       %6406 = OpLabel
               OpBranch %6417
       %6395 = OpLabel
               OpBranch %6417
       %6384 = OpLabel
               OpBranch %6417
       %6373 = OpLabel
               OpBranch %6417
       %6417 = OpLabel
      %10660 = OpPhi %uint %uint_64 %6373 %uint_64 %6384 %uint_128 %6395 %uint_128 %6406
      %10659 = OpPhi %uint %uint_32 %6373 %uint_64 %6384 %uint_64 %6395 %uint_128 %6406
      %10658 = OpPhi %uint %uint_8 %6373 %uint_16 %6384 %uint_16 %6395 %uint_32 %6406
      %10657 = OpPhi %uint %uint_8 %6373 %uint_8 %6384 %uint_16 %6395 %uint_16 %6406
      %10656 = OpPhi %uint %uint_2 %6373 %uint_2 %6384 %uint_4 %6395 %uint_4 %6406
      %10655 = OpPhi %uint %uint_6 %6373 %uint_6 %6384 %uint_7 %6395 %uint_7 %6406
      %10654 = OpPhi %uint %uint_5 %6373 %uint_6 %6384 %uint_6 %6395 %uint_7 %6406
      %10653 = OpPhi %uint %uint_3 %6373 %uint_4 %6384 %uint_4 %6395 %uint_5 %6406
      %10652 = OpPhi %uint %uint_3 %6373 %uint_3 %6384 %uint_4 %6395 %uint_4 %6406
      %10651 = OpPhi %uint %uint_1 %6373 %uint_1 %6384 %uint_2 %6395 %uint_2 %6406
       %5843 = OpShiftRightLogical %uint %5128 %10655
       %5847 = OpShiftRightLogical %uint %5132 %10654
       %5849 = OpIEqual %bool %ZB_FMT %uint_20
       %5851 = OpIEqual %bool %ZB_FMT %uint_19
       %5852 = OpLogicalOr %bool %5849 %5851
               OpSelectionMerge %5856 None
               OpBranchConditional %5852 %5853 %5856
       %5853 = OpLabel
       %5855 = OpShiftRightLogical %uint %5139 %int_1
               OpBranch %5856
       %5856 = OpLabel
      %10663 = OpPhi %uint %5139 %6417 %5855 %5853
       %5859 = OpIMul %uint %5847 %10663
       %5861 = OpIAdd %uint %5859 %5843
       %5865 = OpISub %uint %10660 %uint_1
       %5866 = OpBitwiseAnd %uint %5128 %5865
       %5869 = OpShiftRightLogical %uint %5866 %10653
       %5873 = OpISub %uint %10659 %uint_1
       %5874 = OpBitwiseAnd %uint %5132 %5873
       %5877 = OpShiftRightLogical %uint %5874 %10652
       %5881 = OpISub %uint %10657 %uint_1
       %5882 = OpBitwiseAnd %uint %5132 %5881
       %5885 = OpShiftRightLogical %uint %5882 %10651
       %5889 = OpISub %uint %10658 %uint_1
       %5890 = OpBitwiseAnd %uint %5128 %5889
       %5894 = OpISub %uint %10656 %uint_1
       %5895 = OpBitwiseAnd %uint %5132 %5894
               OpSelectionMerge %6367 None
               OpSwitch %ZB_FMT %5898 0 %5898 1 %5898 44 %5898 36 %5898 27 %5898 48 %5949 49 %5949 2 %6002 50 %6058 10 %6116 58 %6171 19 %6228 20 %6294
       %6294 = OpLabel
       %6296 = OpBitwiseAnd %uint %5877 %uint_1
       %6298 = OpBitwiseAnd %uint %5869 %uint_1
       %6299 = OpShiftLeftLogical %uint %6298 %int_1
       %6300 = OpBitwiseOr %uint %6296 %6299
       %6302 = OpBitwiseAnd %uint %5877 %uint_2
       %6303 = OpShiftLeftLogical %uint %6302 %int_1
       %6304 = OpBitwiseOr %uint %6300 %6303
       %6306 = OpBitwiseAnd %uint %5869 %uint_2
       %6307 = OpShiftLeftLogical %uint %6306 %int_2
       %6308 = OpBitwiseOr %uint %6304 %6307
       %6310 = OpBitwiseAnd %uint %5877 %uint_4
       %6311 = OpShiftLeftLogical %uint %6310 %int_2
       %6312 = OpBitwiseOr %uint %6308 %6311
       %6315 = OpIAdd %uint %6312 %5155
       %6317 = OpBitwiseAnd %uint %5895 %uint_2
       %6318 = OpShiftRightLogical %uint %6317 %int_1
       %6320 = OpBitwiseAnd %uint %5890 %uint_8
       %6321 = OpShiftRightLogical %uint %6320 %int_2
       %6322 = OpBitwiseOr %uint %6318 %6321
       %6324 = OpBitwiseAnd %uint %5890 %uint_16
       %6325 = OpShiftRightLogical %uint %6324 %int_2
       %6326 = OpBitwiseOr %uint %6322 %6325
       %6328 = OpBitwiseAnd %uint %5890 %uint_1
       %6329 = OpShiftLeftLogical %uint %6328 %int_3
       %6330 = OpBitwiseOr %uint %6326 %6329
       %6332 = OpBitwiseAnd %uint %5895 %uint_1
       %6333 = OpShiftLeftLogical %uint %6332 %int_4
       %6334 = OpBitwiseOr %uint %6330 %6333
       %6336 = OpBitwiseAnd %uint %5890 %uint_2
       %6337 = OpShiftLeftLogical %uint %6336 %int_4
       %6338 = OpBitwiseOr %uint %6334 %6337
       %6340 = OpBitwiseAnd %uint %5890 %uint_4
       %6341 = OpShiftLeftLogical %uint %6340 %int_4
       %6344 = OpShiftLeftLogical %uint %6317 %int_5
       %6345 = OpBitwiseXor %uint %6341 %6344
       %6347 = OpBitwiseAnd %uint %5885 %uint_1
       %6348 = OpShiftLeftLogical %uint %6347 %int_6
       %6349 = OpBitwiseXor %uint %6345 %6348
       %6350 = OpBitwiseOr %uint %6338 %6349
       %6352 = OpIMul %uint %5861 %uint_8192
       %6354 = OpIMul %uint %6315 %uint_256
       %6355 = OpIAdd %uint %6352 %6354
       %6357 = OpIMul %uint %5885 %uint_64
       %6358 = OpIAdd %uint %6355 %6357
       %6359 = OpShiftLeftLogical %uint %6358 %int_1
       %6361 = OpIAdd %uint %6359 %6350
       %6364 = OpShiftLeftLogical %uint %VRAM_MASK %int_1
       %6365 = OpBitwiseOr %uint %6364 %uint_1
       %6366 = OpBitwiseAnd %uint %6361 %6365
               OpBranch %6367
       %6228 = OpLabel
       %6230 = OpBitwiseAnd %uint %5869 %uint_1
       %6232 = OpBitwiseAnd %uint %5877 %uint_1
       %6233 = OpShiftLeftLogical %uint %6232 %int_1
       %6234 = OpBitwiseOr %uint %6230 %6233
       %6236 = OpBitwiseAnd %uint %5869 %uint_2
       %6237 = OpShiftLeftLogical %uint %6236 %int_1
       %6238 = OpBitwiseOr %uint %6234 %6237
       %6240 = OpBitwiseAnd %uint %5877 %uint_2
       %6241 = OpShiftLeftLogical %uint %6240 %int_2
       %6242 = OpBitwiseOr %uint %6238 %6241
       %6244 = OpBitwiseAnd %uint %5869 %uint_4
       %6245 = OpShiftLeftLogical %uint %6244 %int_2
       %6246 = OpBitwiseOr %uint %6242 %6245
       %6249 = OpIAdd %uint %6246 %5155
       %6251 = OpBitwiseAnd %uint %5895 %uint_2
       %6252 = OpShiftRightLogical %uint %6251 %int_1
       %6254 = OpBitwiseAnd %uint %5890 %uint_8
       %6255 = OpShiftRightLogical %uint %6254 %int_2
       %6256 = OpBitwiseOr %uint %6252 %6255
       %6258 = OpBitwiseAnd %uint %5890 %uint_1
       %6259 = OpShiftLeftLogical %uint %6258 %int_2
       %6260 = OpBitwiseOr %uint %6256 %6259
       %6262 = OpBitwiseAnd %uint %5895 %uint_1
       %6263 = OpShiftLeftLogical %uint %6262 %int_3
       %6264 = OpBitwiseOr %uint %6260 %6263
       %6266 = OpBitwiseAnd %uint %5890 %uint_2
       %6267 = OpShiftLeftLogical %uint %6266 %int_3
       %6268 = OpBitwiseOr %uint %6264 %6267
       %6270 = OpBitwiseAnd %uint %5890 %uint_4
       %6271 = OpShiftLeftLogical %uint %6270 %int_3
       %6274 = OpShiftLeftLogical %uint %6251 %int_4
       %6275 = OpBitwiseXor %uint %6271 %6274
       %6277 = OpBitwiseAnd %uint %5885 %uint_1
       %6278 = OpShiftLeftLogical %uint %6277 %int_5
       %6279 = OpBitwiseXor %uint %6275 %6278
       %6280 = OpBitwiseOr %uint %6268 %6279
       %6282 = OpIMul %uint %5861 %uint_8192
       %6284 = OpIMul %uint %6249 %uint_256
       %6285 = OpIAdd %uint %6282 %6284
       %6287 = OpIMul %uint %5885 %uint_64
       %6288 = OpIAdd %uint %6285 %6287
       %6290 = OpIAdd %uint %6288 %6280
       %6293 = OpBitwiseAnd %uint %6290 %VRAM_MASK
               OpBranch %6367
       %6171 = OpLabel
       %6173 = OpBitwiseAnd %uint %5877 %uint_1
       %6175 = OpBitwiseAnd %uint %5869 %uint_1
       %6176 = OpShiftLeftLogical %uint %6175 %int_1
       %6177 = OpBitwiseOr %uint %6173 %6176
       %6179 = OpBitwiseAnd %uint %5877 %uint_4
       %6180 = OpBitwiseOr %uint %6177 %6179
       %6182 = OpBitwiseAnd %uint %5877 %uint_2
       %6183 = OpShiftLeftLogical %uint %6182 %int_2
       %6184 = OpBitwiseOr %uint %6180 %6183
       %6186 = OpBitwiseAnd %uint %5869 %uint_2
       %6187 = OpShiftLeftLogical %uint %6186 %int_3
       %6188 = OpBitwiseOr %uint %6184 %6187
       %6191 = OpIAdd %uint %6188 %5155
       %6193 = OpBitwiseXor %uint %6191 %uint_24
       %6195 = OpBitwiseAnd %uint %5890 %uint_8
       %6196 = OpShiftRightLogical %uint %6195 %int_3
       %6198 = OpBitwiseAnd %uint %5890 %uint_1
       %6199 = OpShiftLeftLogical %uint %6198 %int_1
       %6200 = OpBitwiseOr %uint %6196 %6199
       %6202 = OpBitwiseAnd %uint %5895 %uint_1
       %6203 = OpShiftLeftLogical %uint %6202 %int_2
       %6204 = OpBitwiseOr %uint %6200 %6203
       %6206 = OpBitwiseAnd %uint %5890 %uint_2
       %6207 = OpShiftLeftLogical %uint %6206 %int_2
       %6208 = OpBitwiseOr %uint %6204 %6207
       %6210 = OpBitwiseAnd %uint %5890 %uint_4
       %6211 = OpShiftLeftLogical %uint %6210 %int_2
       %6212 = OpBitwiseOr %uint %6208 %6211
       %6214 = OpIMul %uint %5861 %uint_8192
       %6216 = OpIMul %uint %6193 %uint_256
       %6217 = OpIAdd %uint %6214 %6216
       %6219 = OpIMul %uint %5885 %uint_64
       %6220 = OpIAdd %uint %6217 %6219
       %6222 = OpIMul %uint %6212 %uint_2
       %6223 = OpIAdd %uint %6220 %6222
       %6226 = OpBitwiseAnd %uint %6223 %VRAM_MASK
       %6227 = OpShiftRightLogical %uint %6226 %int_1
               OpBranch %6367
       %6116 = OpLabel
       %6118 = OpBitwiseAnd %uint %5877 %uint_1
       %6120 = OpBitwiseAnd %uint %5869 %uint_1
       %6121 = OpShiftLeftLogical %uint %6120 %int_1
       %6122 = OpBitwiseOr %uint %6118 %6121
       %6124 = OpBitwiseAnd %uint %5877 %uint_4
       %6125 = OpBitwiseOr %uint %6122 %6124
       %6127 = OpBitwiseAnd %uint %5877 %uint_2
       %6128 = OpShiftLeftLogical %uint %6127 %int_2
       %6129 = OpBitwiseOr %uint %6125 %6128
       %6131 = OpBitwiseAnd %uint %5869 %uint_2
       %6132 = OpShiftLeftLogical %uint %6131 %int_3
       %6133 = OpBitwiseOr %uint %6129 %6132
       %6136 = OpIAdd %uint %6133 %5155
       %6138 = OpBitwiseAnd %uint %5890 %uint_8
       %6139 = OpShiftRightLogical %uint %6138 %int_3
       %6141 = OpBitwiseAnd %uint %5890 %uint_1
       %6142 = OpShiftLeftLogical %uint %6141 %int_1
       %6143 = OpBitwiseOr %uint %6139 %6142
       %6145 = OpBitwiseAnd %uint %5895 %uint_1
       %6146 = OpShiftLeftLogical %uint %6145 %int_2
       %6147 = OpBitwiseOr %uint %6143 %6146
       %6149 = OpBitwiseAnd %uint %5890 %uint_2
       %6150 = OpShiftLeftLogical %uint %6149 %int_2
       %6151 = OpBitwiseOr %uint %6147 %6150
       %6153 = OpBitwiseAnd %uint %5890 %uint_4
       %6154 = OpShiftLeftLogical %uint %6153 %int_2
       %6155 = OpBitwiseOr %uint %6151 %6154
       %6157 = OpIMul %uint %5861 %uint_8192
       %6159 = OpIMul %uint %6136 %uint_256
       %6160 = OpIAdd %uint %6157 %6159
       %6162 = OpIMul %uint %5885 %uint_64
       %6163 = OpIAdd %uint %6160 %6162
       %6165 = OpIMul %uint %6155 %uint_2
       %6166 = OpIAdd %uint %6163 %6165
       %6169 = OpBitwiseAnd %uint %6166 %VRAM_MASK
       %6170 = OpShiftRightLogical %uint %6169 %int_1
               OpBranch %6367
       %6058 = OpLabel
       %6060 = OpBitwiseAnd %uint %5877 %uint_1
       %6062 = OpBitwiseAnd %uint %5869 %uint_1
       %6063 = OpShiftLeftLogical %uint %6062 %int_1
       %6064 = OpBitwiseOr %uint %6060 %6063
       %6066 = OpBitwiseAnd %uint %5877 %uint_2
       %6067 = OpShiftLeftLogical %uint %6066 %int_1
       %6068 = OpBitwiseOr %uint %6064 %6067
       %6070 = OpBitwiseAnd %uint %5869 %uint_2
       %6071 = OpShiftLeftLogical %uint %6070 %int_2
       %6072 = OpBitwiseOr %uint %6068 %6071
       %6074 = OpBitwiseAnd %uint %5877 %uint_4
       %6075 = OpShiftLeftLogical %uint %6074 %int_2
       %6076 = OpBitwiseOr %uint %6072 %6075
       %6079 = OpIAdd %uint %6076 %5155
       %6081 = OpBitwiseXor %uint %6079 %uint_24
       %6083 = OpBitwiseAnd %uint %5890 %uint_8
       %6084 = OpShiftRightLogical %uint %6083 %int_3
       %6086 = OpBitwiseAnd %uint %5890 %uint_1
       %6087 = OpShiftLeftLogical %uint %6086 %int_1
       %6088 = OpBitwiseOr %uint %6084 %6087
       %6090 = OpBitwiseAnd %uint %5895 %uint_1
       %6091 = OpShiftLeftLogical %uint %6090 %int_2
       %6092 = OpBitwiseOr %uint %6088 %6091
       %6094 = OpBitwiseAnd %uint %5890 %uint_2
       %6095 = OpShiftLeftLogical %uint %6094 %int_2
       %6096 = OpBitwiseOr %uint %6092 %6095
       %6098 = OpBitwiseAnd %uint %5890 %uint_4
       %6099 = OpShiftLeftLogical %uint %6098 %int_2
       %6100 = OpBitwiseOr %uint %6096 %6099
       %6102 = OpIMul %uint %5861 %uint_8192
       %6104 = OpIMul %uint %6081 %uint_256
       %6105 = OpIAdd %uint %6102 %6104
       %6107 = OpIMul %uint %5885 %uint_64
       %6108 = OpIAdd %uint %6105 %6107
       %6110 = OpIMul %uint %6100 %uint_2
       %6111 = OpIAdd %uint %6108 %6110
       %6114 = OpBitwiseAnd %uint %6111 %VRAM_MASK
       %6115 = OpShiftRightLogical %uint %6114 %int_1
               OpBranch %6367
       %6002 = OpLabel
       %6004 = OpBitwiseAnd %uint %5877 %uint_1
       %6006 = OpBitwiseAnd %uint %5869 %uint_1
       %6007 = OpShiftLeftLogical %uint %6006 %int_1
       %6008 = OpBitwiseOr %uint %6004 %6007
       %6010 = OpBitwiseAnd %uint %5877 %uint_2
       %6011 = OpShiftLeftLogical %uint %6010 %int_1
       %6012 = OpBitwiseOr %uint %6008 %6011
       %6014 = OpBitwiseAnd %uint %5869 %uint_2
       %6015 = OpShiftLeftLogical %uint %6014 %int_2
       %6016 = OpBitwiseOr %uint %6012 %6015
       %6018 = OpBitwiseAnd %uint %5877 %uint_4
       %6019 = OpShiftLeftLogical %uint %6018 %int_2
       %6020 = OpBitwiseOr %uint %6016 %6019
       %6023 = OpIAdd %uint %6020 %5155
       %6025 = OpBitwiseAnd %uint %5890 %uint_8
       %6026 = OpShiftRightLogical %uint %6025 %int_3
       %6028 = OpBitwiseAnd %uint %5890 %uint_1
       %6029 = OpShiftLeftLogical %uint %6028 %int_1
       %6030 = OpBitwiseOr %uint %6026 %6029
       %6032 = OpBitwiseAnd %uint %5895 %uint_1
       %6033 = OpShiftLeftLogical %uint %6032 %int_2
       %6034 = OpBitwiseOr %uint %6030 %6033
       %6036 = OpBitwiseAnd %uint %5890 %uint_2
       %6037 = OpShiftLeftLogical %uint %6036 %int_2
       %6038 = OpBitwiseOr %uint %6034 %6037
       %6040 = OpBitwiseAnd %uint %5890 %uint_4
       %6041 = OpShiftLeftLogical %uint %6040 %int_2
       %6042 = OpBitwiseOr %uint %6038 %6041
       %6044 = OpIMul %uint %5861 %uint_8192
       %6046 = OpIMul %uint %6023 %uint_256
       %6047 = OpIAdd %uint %6044 %6046
       %6049 = OpIMul %uint %5885 %uint_64
       %6050 = OpIAdd %uint %6047 %6049
       %6052 = OpIMul %uint %6042 %uint_2
       %6053 = OpIAdd %uint %6050 %6052
       %6056 = OpBitwiseAnd %uint %6053 %VRAM_MASK
       %6057 = OpShiftRightLogical %uint %6056 %int_1
               OpBranch %6367
       %5949 = OpLabel
       %5951 = OpBitwiseAnd %uint %5869 %uint_1
       %5953 = OpBitwiseAnd %uint %5877 %uint_1
       %5954 = OpShiftLeftLogical %uint %5953 %int_1
       %5955 = OpBitwiseOr %uint %5951 %5954
       %5957 = OpBitwiseAnd %uint %5869 %uint_2
       %5958 = OpShiftLeftLogical %uint %5957 %int_1
       %5959 = OpBitwiseOr %uint %5955 %5958
       %5961 = OpBitwiseAnd %uint %5877 %uint_2
       %5962 = OpShiftLeftLogical %uint %5961 %int_2
       %5963 = OpBitwiseOr %uint %5959 %5962
       %5965 = OpBitwiseAnd %uint %5869 %uint_4
       %5966 = OpShiftLeftLogical %uint %5965 %int_2
       %5967 = OpBitwiseOr %uint %5963 %5966
       %5970 = OpIAdd %uint %5967 %5155
       %5972 = OpBitwiseXor %uint %5970 %uint_24
       %5974 = OpBitwiseAnd %uint %5890 %uint_1
       %5976 = OpBitwiseAnd %uint %5895 %uint_1
       %5977 = OpShiftLeftLogical %uint %5976 %int_1
       %5978 = OpBitwiseOr %uint %5974 %5977
       %5980 = OpBitwiseAnd %uint %5890 %uint_2
       %5981 = OpShiftLeftLogical %uint %5980 %int_1
       %5982 = OpBitwiseOr %uint %5978 %5981
       %5984 = OpBitwiseAnd %uint %5890 %uint_4
       %5985 = OpShiftLeftLogical %uint %5984 %int_1
       %5986 = OpBitwiseOr %uint %5982 %5985
       %5988 = OpIMul %uint %5861 %uint_8192
       %5990 = OpIMul %uint %5972 %uint_256
       %5991 = OpIAdd %uint %5988 %5990
       %5993 = OpIMul %uint %5885 %uint_64
       %5994 = OpIAdd %uint %5991 %5993
       %5996 = OpIMul %uint %5986 %uint_4
       %5997 = OpIAdd %uint %5994 %5996
       %6000 = OpBitwiseAnd %uint %5997 %VRAM_MASK
       %6001 = OpShiftRightLogical %uint %6000 %int_2
               OpBranch %6367
       %5898 = OpLabel
       %5900 = OpBitwiseAnd %uint %5869 %uint_1
       %5902 = OpBitwiseAnd %uint %5877 %uint_1
       %5903 = OpShiftLeftLogical %uint %5902 %int_1
       %5904 = OpBitwiseOr %uint %5900 %5903
       %5906 = OpBitwiseAnd %uint %5869 %uint_2
       %5907 = OpShiftLeftLogical %uint %5906 %int_1
       %5908 = OpBitwiseOr %uint %5904 %5907
       %5910 = OpBitwiseAnd %uint %5877 %uint_2
       %5911 = OpShiftLeftLogical %uint %5910 %int_2
       %5912 = OpBitwiseOr %uint %5908 %5911
       %5914 = OpBitwiseAnd %uint %5869 %uint_4
       %5915 = OpShiftLeftLogical %uint %5914 %int_2
       %5916 = OpBitwiseOr %uint %5912 %5915
       %5919 = OpIAdd %uint %5916 %5155
       %5921 = OpBitwiseAnd %uint %5890 %uint_1
       %5923 = OpBitwiseAnd %uint %5895 %uint_1
       %5924 = OpShiftLeftLogical %uint %5923 %int_1
       %5925 = OpBitwiseOr %uint %5921 %5924
       %5927 = OpBitwiseAnd %uint %5890 %uint_2
       %5928 = OpShiftLeftLogical %uint %5927 %int_1
       %5929 = OpBitwiseOr %uint %5925 %5928
       %5931 = OpBitwiseAnd %uint %5890 %uint_4
       %5932 = OpShiftLeftLogical %uint %5931 %int_1
       %5933 = OpBitwiseOr %uint %5929 %5932
       %5935 = OpIMul %uint %5861 %uint_8192
       %5937 = OpIMul %uint %5919 %uint_256
       %5938 = OpIAdd %uint %5935 %5937
       %5940 = OpIMul %uint %5885 %uint_64
       %5941 = OpIAdd %uint %5938 %5940
       %5943 = OpIMul %uint %5933 %uint_4
       %5944 = OpIAdd %uint %5941 %5943
       %5947 = OpBitwiseAnd %uint %5944 %VRAM_MASK
       %5948 = OpShiftRightLogical %uint %5947 %int_2
               OpBranch %6367
       %6367 = OpLabel
      %10664 = OpPhi %uint %5948 %5898 %6001 %5949 %6057 %6002 %6115 %6058 %6170 %6116 %6227 %6171 %6293 %6228 %6366 %6294
       %5160 = OpBitcast %int %10664
       %5162 = OpAccessChain %_ptr_PushConstant_uint %__1 %int_0 %int_2
       %5163 = OpLoad %uint %5162
       %5164 = OpBitcast %int %5163
       %5167 = OpIAdd %int %5160 %5164
               OpBranch %5171
       %5171 = OpLabel
      %10704 = OpPhi %int %5167 %6367 %int_0 %5169
       %5182 = OpIAdd %v2int %5116 %10625
       %5184 = OpISub %v2int %5182 %16458
       %5188 = OpCompositeConstruct %v2int %NUM_SAMPLES_Y_LOG2 %NUM_SAMPLES_Y_LOG2
       %5189 = OpShiftRightArithmetic %v2int %5116 %5188
       %5194 = OpShiftRightArithmetic %v2int %5184 %5188
       %6436 = OpLoad %uint %gl_SubgroupInvocationID
       %6437 = OpBitwiseAnd %uint %6436 %2118
               OpSelectionMerge %6508 None
               OpBranchConditional %is_fb_16bit %6438 %6470
       %6470 = OpLabel
       %6473 = OpAccessChain %_ptr_StorageBuffer_uint %vram32 %int_0 %5141
       %6474 = OpLoad %uint %6473
               OpSelectionMerge %6507 None
               OpBranchConditional %SUPER_SAMPLE %6475 %6507
       %6475 = OpLabel
       %6478 = OpBitcast %uint %5141
       %6479 = OpIAdd %uint %6478 %VRAM_SIZE_32
       %6480 = OpAccessChain %_ptr_StorageBuffer_uint %vram32 %int_0 %6479
       %6481 = OpLoad %uint %6480
       %6483 = OpBitwiseAnd %uint %6481 %ref_mask
       %6484 = OpIEqual %bool %6483 %ref_mask
               OpSelectionMerge %6506 None
               OpBranchConditional %6484 %6485 %6506
       %6485 = OpLabel
       %6487 = OpIAdd %uint %6437 %uint_2
       %6488 = OpIMul %uint %6487 %VRAM_SIZE_32
       %6493 = OpIAdd %uint %6478 %6488
       %6494 = OpAccessChain %_ptr_StorageBuffer_uint %vram32 %int_0 %6493
       %6495 = OpLoad %uint %6494
       %6497 = OpINotEqual %bool %6481 %uint_4294967295
       %6498 = OpLogicalAnd %bool %is_fb_24bit %6497
               OpSelectionMerge %6505 None
               OpBranchConditional %6498 %6499 %6503
       %6503 = OpLabel
               OpBranch %6505
       %6499 = OpLabel
       %6502 = OpBitFieldInsert %uint %6474 %6495 %int_0 %int_24
               OpBranch %6505
       %6505 = OpLabel
      %10719 = OpPhi %uint %6502 %6499 %6495 %6503
               OpBranch %6506
       %6506 = OpLabel
      %10718 = OpPhi %uint %6474 %6475 %10719 %6505
               OpBranch %6507
       %6507 = OpLabel
      %10717 = OpPhi %uint %6474 %6470 %10718 %6506
               OpBranch %6508
       %6438 = OpLabel
       %6441 = OpAccessChain %_ptr_StorageBuffer_ushort %vram16 %int_0 %5141
       %6442 = OpLoad %ushort %6441
       %6443 = OpUConvert %uint %6442
               OpSelectionMerge %6467 None
               OpBranchConditional %SUPER_SAMPLE %6444 %6467
       %6444 = OpLabel
       %6447 = OpBitcast %uint %5141
       %6448 = OpIAdd %uint %6447 %VRAM_SIZE_16
       %6449 = OpAccessChain %_ptr_StorageBuffer_ushort %vram16 %int_0 %6448
       %6450 = OpLoad %ushort %6449
       %6451 = OpUConvert %uint %6450
       %6453 = OpIEqual %bool %6451 %uint_65535
               OpSelectionMerge %6466 None
               OpBranchConditional %6453 %6454 %6466
       %6454 = OpLabel
       %6456 = OpIAdd %uint %6437 %uint_2
       %6457 = OpIMul %uint %6456 %VRAM_SIZE_16
       %6462 = OpIAdd %uint %6447 %6457
       %6463 = OpAccessChain %_ptr_StorageBuffer_ushort %vram16 %int_0 %6462
       %6464 = OpLoad %ushort %6463
       %6465 = OpUConvert %uint %6464
               OpBranch %6466
       %6466 = OpLabel
      %10706 = OpPhi %uint %6443 %6444 %6465 %6454
               OpBranch %6467
       %6467 = OpLabel
      %10705 = OpPhi %uint %6443 %6438 %10706 %6466
       %6615 = OpBitcast %int %10705
       %6616 = OpCompositeConstruct %v4int %6615 %6615 %6615 %6615
       %6617 = OpShiftRightArithmetic %v4int %6616 %322
       %6618 = OpBitwiseAnd %v4int %6617 %325
       %6625 = OpShiftLeftLogical %v4int %6618 %335
       %6596 = OpCompositeExtract %int %6625 3
       %6597 = OpIEqual %bool %6596 %int_0
               OpNoLine
      %16494 = OpSelect %int %6597 %int_0 %int_128
      %10331 = OpCompositeInsert %v4int %16494 %6625 3
       %6634 = OpExtInst %v4int %2 SClamp %10331 %345 %311
       %6636 = OpShiftLeftLogical %v4int %6634 %308
       %6638 = OpCompositeExtract %int %6636 0
       %6640 = OpCompositeExtract %int %6636 1
       %6641 = OpBitwiseOr %int %6638 %6640
       %6643 = OpCompositeExtract %int %6636 2
       %6644 = OpBitwiseOr %int %6641 %6643
       %6646 = OpCompositeExtract %int %6636 3
       %6647 = OpBitwiseOr %int %6644 %6646
       %6648 = OpBitcast %uint %6647
               OpBranch %6508
       %6508 = OpLabel
      %10716 = OpPhi %uint %6648 %6467 %10717 %6507
               OpSelectionMerge %6574 None
               OpBranchConditional %Z_SENSITIVE %6509 %6573
       %6573 = OpLabel
               OpBranch %6574
       %6509 = OpLabel
               OpSelectionMerge %6572 None
               OpBranchConditional %is_zb_16bit %6510 %6540
       %6540 = OpLabel
       %6543 = OpAccessChain %_ptr_StorageBuffer_uint %vram32 %int_0 %10704
       %6544 = OpLoad %uint %6543
       %6546 = OpBitwiseAnd %uint %6544 %ref_mask_0
               OpSelectionMerge %6571 None
               OpBranchConditional %SUPER_SAMPLE %6547 %6571
       %6547 = OpLabel
       %6550 = OpBitcast %uint %10704
       %6551 = OpIAdd %uint %6550 %VRAM_SIZE_32
       %6552 = OpAccessChain %_ptr_StorageBuffer_uint %vram32 %int_0 %6551
       %6553 = OpLoad %uint %6552
       %6555 = OpBitwiseAnd %uint %6553 %ref_mask_0
       %6556 = OpIEqual %bool %6555 %ref_mask_0
               OpSelectionMerge %6570 None
               OpBranchConditional %6556 %6557 %6570
       %6557 = OpLabel
       %6559 = OpIAdd %uint %6437 %uint_2
       %6560 = OpIMul %uint %6559 %VRAM_SIZE_32
       %6565 = OpIAdd %uint %6550 %6560
       %6566 = OpAccessChain %_ptr_StorageBuffer_uint %vram32 %int_0 %6565
       %6567 = OpLoad %uint %6566
       %6569 = OpBitwiseAnd %uint %6567 %ref_mask_0
               OpBranch %6570
       %6570 = OpLabel
      %10735 = OpPhi %uint %6546 %6547 %6569 %6557
               OpBranch %6571
       %6571 = OpLabel
      %10734 = OpPhi %uint %6546 %6540 %10735 %6570
               OpBranch %6572
       %6510 = OpLabel
       %6513 = OpAccessChain %_ptr_StorageBuffer_ushort %vram16 %int_0 %10704
       %6514 = OpLoad %ushort %6513
       %6515 = OpUConvert %uint %6514
               OpSelectionMerge %6539 None
               OpBranchConditional %SUPER_SAMPLE %6516 %6539
       %6516 = OpLabel
       %6519 = OpBitcast %uint %10704
       %6520 = OpIAdd %uint %6519 %VRAM_SIZE_16
       %6521 = OpAccessChain %_ptr_StorageBuffer_ushort %vram16 %int_0 %6520
       %6522 = OpLoad %ushort %6521
       %6523 = OpUConvert %uint %6522
       %6525 = OpIEqual %bool %6523 %uint_65535
               OpSelectionMerge %6538 None
               OpBranchConditional %6525 %6526 %6538
       %6526 = OpLabel
       %6528 = OpIAdd %uint %6437 %uint_2
       %6529 = OpIMul %uint %6528 %VRAM_SIZE_16
       %6534 = OpIAdd %uint %6519 %6529
       %6535 = OpAccessChain %_ptr_StorageBuffer_ushort %vram16 %int_0 %6534
       %6536 = OpLoad %ushort %6535
       %6537 = OpUConvert %uint %6536
               OpBranch %6538
       %6538 = OpLabel
      %10733 = OpPhi %uint %6515 %6516 %6537 %6526
               OpBranch %6539
       %6539 = OpLabel
      %10732 = OpPhi %uint %6515 %6510 %10733 %6538
               OpBranch %6572
       %6572 = OpLabel
      %10731 = OpPhi %uint %10732 %6539 %10734 %6571
               OpBranch %6574
       %6574 = OpLabel
      %10730 = OpPhi %uint %10731 %6572 %uint_0 %6573
               OpBranch %4442
       %4442 = OpLabel
      %12226 = OpPhi %uint %10974 %6574 %12187 %4445
      %12140 = OpPhi %bool %11865 %6574 %12134 %4445
      %12088 = OpPhi %bool %11865 %6574 %12082 %4445
      %12036 = OpPhi %bool %11865 %6574 %12019 %4445
      %11973 = OpPhi %bool %11865 %6574 %11956 %4445
      %11910 = OpPhi %bool %11865 %6574 %11893 %4445
      %11846 = OpPhi %bool %11865 %6574 %11829 %4445
      %11783 = OpPhi %uint %10974 %6574 %11766 %4445
      %11720 = OpPhi %uint %10974 %6574 %11703 %4445
      %11657 = OpPhi %float %11051 %6574 %11640 %4445
      %11594 = OpPhi %float %11051 %6574 %11577 %4445
      %11530 = OpPhi %int %11549 %6574 %11524 %4445
      %11453 = OpPhi %uint %10974 %6574 %14625 %4445
      %11257 = OpPhi %bool %false %6574 %14622 %4445
      %11090 = OpPhi %float %11051 %6574 %14521 %4445
      %11032 = OpPhi %float %11051 %6574 %14419 %4445
      %10955 = OpPhi %uint %10974 %6574 %10954 %4445
      %10945 = OpPhi %int %int_0 %6574 %14302 %4445
      %10794 = OpPhi %bool %false %6574 %14065 %4445
      %10743 = OpPhi %bool %false %6574 %13945 %4445
      %10729 = OpPhi %uint %10730 %6574 %13942 %4445
      %10712 = OpPhi %uint %10716 %6574 %13216 %4445
      %10711 = OpPhi %int %int_0 %6574 %4460 %4445
      %13501 = OpPhi %bool %11865 %6574 %13539 %4445
      %13302 = OpPhi %v4float %13321 %6574 %13341 %4445
      %13079 = OpPhi %float %11051 %6574 %13117 %4445
      %12988 = OpPhi %float %11051 %6574 %13026 %4445
      %12897 = OpPhi %bool %11865 %6574 %12935 %4445
      %12806 = OpPhi %bool %11865 %6574 %12844 %4445
      %12697 = OpPhi %bool %11865 %6574 %12735 %4445
      %12608 = OpPhi %uint %10974 %6574 %12646 %4445
      %12519 = OpPhi %bool %11865 %6574 %12557 %4445
      %12428 = OpPhi %uint %10974 %6574 %12466 %4445
      %12339 = OpPhi %uint %10974 %6574 %12377 %4445
       %4450 = OpSLessThan %bool %10711 %4809
               OpLoopMerge %4444 %4445 None
               OpBranchConditional %4450 %4443 %4444
       %4443 = OpLabel
       %4454 = OpBitcast %int %6436
       %4455 = OpIAdd %int %10711 %4454
       %4459 = OpBitcast %int %4811
       %4460 = OpIAdd %int %10711 %4459
       %4463 = OpSGreaterThanEqual %bool %4460 %4809
       %4468 = OpSLessThan %bool %4455 %4809
               OpSelectionMerge %4470 None
               OpBranchConditional %4468 %4469 %4470
       %4469 = OpLabel
       %4479 = OpIAdd %int %4805 %4455
       %4480 = OpAccessChain %_ptr_StorageBuffer_ushort %coarse_primitive_list %int_0 %4479
       %4481 = OpLoad %ushort %4480
       %4482 = OpUConvert %uint %4481
               OpNoLine
               OpSelectionMerge %6717 None
               OpSwitch %uint_0 %6661
       %6661 = OpLabel
               OpSelectionMerge %6677 None
               OpBranchConditional %HAS_PRIMITIVE_RANGE %6662 %6677
       %6662 = OpLabel
       %6664 = OpAccessChain %_ptr_PushConstant_uint %__1 %int_0 %int_0
       %6665 = OpLoad %uint %6664
       %6666 = OpULessThan %bool %4482 %6665
       %6667 = OpLogicalNot %bool %6666
               OpSelectionMerge %6673 None
               OpBranchConditional %6667 %6668 %6673
       %6668 = OpLabel
       %6670 = OpAccessChain %_ptr_PushConstant_uint %__1 %int_0 %int_1
       %6671 = OpLoad %uint %6670
       %6672 = OpUGreaterThan %bool %4482 %6671
               OpBranch %6673
       %6673 = OpLabel
       %6674 = OpPhi %bool %6666 %6662 %6672 %6668
               OpSelectionMerge %6676 None
               OpBranchConditional %6674 %6675 %6676
       %6675 = OpLabel
               OpBranch %6717
       %6676 = OpLabel
               OpBranch %6677
       %6677 = OpLabel
       %6679 = OpAccessChain %_ptr_StorageBuffer_PrimitiveSetup %primitive_setup %int_0 %4482
       %6680 = OpLoad %PrimitiveSetup %6679
       %6681 = OpCompositeExtract %v3int %6680 0
       %6685 = OpCompositeExtract %v3int %6680 2
       %6689 = OpCompositeExtract %v3int %6680 4
       %6693 = OpCompositeExtract %v4int %6680 6
       %6701 = OpCompositeExtract %int %5189 0
       %6702 = OpCompositeExtract %int %5189 1
       %6703 = OpCompositeExtract %int %5194 0
       %6704 = OpCompositeExtract %int %5194 1
       %6705 = OpCompositeConstruct %v4int %6701 %6702 %6703 %6704
       %6724 = OpVectorShuffle %v2int %6693 %6693 0 1
       %6726 = OpVectorShuffle %v2int %6705 %6705 0 1
       %6727 = OpExtInst %v2int %2 SMax %6724 %6726
       %6729 = OpVectorShuffle %v2int %6693 %6693 2 3
       %6731 = OpVectorShuffle %v2int %6705 %6705 2 3
       %6732 = OpExtInst %v2int %2 SMin %6729 %6731
       %6735 = OpCompositeExtract %int %6727 0
       %6736 = OpCompositeExtract %int %6727 1
       %6737 = OpCompositeExtract %int %6732 0
       %6738 = OpCompositeExtract %int %6732 1
       %6739 = OpCompositeConstruct %v4int %6735 %6736 %6737 %6738
       %6770 = OpVectorShuffle %v2int %6739 %6739 0 1
       %6772 = OpVectorShuffle %v2int %6739 %6739 2 3
       %6775 = OpSGreaterThanEqual %v2bool %6772 %6770
       %6776 = OpAll %bool %6775
       %6778 = OpCompositeExtract %int %6681 0
       %6779 = OpBitwiseAnd %int %6778 %int_1
       %6780 = OpINotEqual %bool %6779 %int_0
       %6783 = OpBitcast %uint %6778
       %6784 = OpBitFieldUExtract %uint %6783 %int_2 %int_2
       %6785 = OpBitcast %int %6784
       %6786 = OpISub %int %6785 %int_1
       %6790 = OpBitFieldUExtract %uint %6783 %int_4 %int_2
       %6791 = OpBitcast %int %6790
       %6792 = OpISub %int %6791 %int_1
       %6795 = OpShiftRightArithmetic %int %6778 %int_6
      %10341 = OpCompositeInsert %v3int %6795 %6681 0
               OpSelectionMerge %6900 None
               OpBranchConditional %6776 %6798 %6900
       %6798 = OpLabel
       %6801 = OpShiftLeftLogical %v2int %6770 %16461
       %6804 = OpShiftLeftLogical %v2int %6772 %16461
       %6806 = OpBitwiseOr %v2int %6804 %16462
       %6810 = OpVectorShuffle %v2int %10341 %10341 0 1
       %6811 = OpSGreaterThanEqual %v2bool %6810 %514
       %6812 = OpSelect %v2int %6811 %6806 %6801
       %6816 = OpVectorShuffle %v2int %6685 %6685 0 1
       %6817 = OpSGreaterThanEqual %v2bool %6816 %514
       %6818 = OpSelect %v2int %6817 %6806 %6801
       %6822 = OpVectorShuffle %v2int %6689 %6689 0 1
       %6823 = OpSGreaterThanEqual %v2bool %6822 %514
       %6824 = OpSelect %v2int %6823 %6806 %6801
       %6907 = OpCompositeExtract %int %6812 0
       %6908 = OpIMul %int %6795 %6907
       %6910 = OpCompositeExtract %int %6681 1
       %6912 = OpCompositeExtract %int %6812 1
       %6913 = OpIMul %int %6910 %6912
       %6914 = OpIAdd %int %6908 %6913
       %6916 = OpCompositeExtract %int %6681 2
       %6917 = OpIAdd %int %6914 %6916
       %6921 = OpCompositeExtract %int %6685 0
       %6923 = OpCompositeExtract %int %6818 0
       %6924 = OpIMul %int %6921 %6923
       %6926 = OpCompositeExtract %int %6685 1
       %6928 = OpCompositeExtract %int %6818 1
       %6929 = OpIMul %int %6926 %6928
       %6930 = OpIAdd %int %6924 %6929
       %6932 = OpCompositeExtract %int %6685 2
       %6933 = OpIAdd %int %6930 %6932
       %6937 = OpCompositeExtract %int %6689 0
       %6939 = OpCompositeExtract %int %6824 0
       %6940 = OpIMul %int %6937 %6939
       %6942 = OpCompositeExtract %int %6689 1
       %6944 = OpCompositeExtract %int %6824 1
       %6945 = OpIMul %int %6942 %6944
       %6946 = OpIAdd %int %6940 %6945
       %6948 = OpCompositeExtract %int %6689 2
       %6949 = OpIAdd %int %6946 %6948
       %6837 = OpCompositeConstruct %v3int %6917 %6933 %6949
       %6838 = OpSGreaterThanEqual %v3bool %6837 %553
       %6839 = OpAll %bool %6838
       %6842 = OpLogicalNot %bool %6839
       %6843 = OpLogicalAnd %bool %6780 %6842
               OpSelectionMerge %6899 None
               OpBranchConditional %6843 %6844 %6899
       %6844 = OpLabel
       %6856 = OpSNegate %v2int %6822
       %6857 = OpSGreaterThanEqual %v2bool %6856 %514
       %6858 = OpSelect %v2int %6857 %6806 %6801
       %6863 = OpSNegate %v2int %6816
       %6864 = OpSGreaterThanEqual %v2bool %6863 %514
       %6865 = OpSelect %v2int %6864 %6806 %6801
       %6971 = OpCompositeExtract %int %6858 0
       %6972 = OpIMul %int %6921 %6971
       %6976 = OpCompositeExtract %int %6858 1
       %6977 = OpIMul %int %6926 %6976
       %6978 = OpIAdd %int %6972 %6977
       %6981 = OpIAdd %int %6978 %6932
       %6987 = OpCompositeExtract %int %6865 0
       %6988 = OpIMul %int %6937 %6987
       %6992 = OpCompositeExtract %int %6865 1
       %6993 = OpIMul %int %6942 %6992
       %6994 = OpIAdd %int %6988 %6993
       %6997 = OpIAdd %int %6994 %6948
       %6877 = OpIAdd %int %6917 %6786
       %6879 = OpIAdd %int %6981 %6877
       %6882 = OpIAdd %int %6917 %6792
       %6884 = OpIAdd %int %6997 %6882
       %6888 = OpSelect %v2int %6811 %6801 %6806
       %7003 = OpCompositeExtract %int %6888 0
       %7004 = OpIMul %int %6795 %7003
       %7008 = OpCompositeExtract %int %6888 1
       %7009 = OpIMul %int %6910 %7008
       %7010 = OpIAdd %int %7004 %7009
       %7013 = OpIAdd %int %7010 %6916
       %6894 = OpCompositeConstruct %v3int %int_n1 %6879 %6884
       %6896 = OpCompositeConstruct %v3int %7013 %int_0 %int_0
       %6897 = OpSGreaterThanEqual %v3bool %6894 %6896
       %6898 = OpAll %bool %6897
               OpBranch %6899
       %6899 = OpLabel
      %10939 = OpPhi %bool %6839 %6798 %6898 %6844
               OpBranch %6900
       %6900 = OpLabel
      %10938 = OpPhi %bool %6776 %6677 %10939 %6899
               OpBranch %6717
       %6717 = OpLabel
      %10940 = OpPhi %bool %false %6675 %10938 %6900
               OpBranch %4470
       %4470 = OpLabel
      %10954 = OpPhi %uint %10955 %4443 %4482 %6717
      %10941 = OpPhi %bool %false %4443 %10940 %6717
       %4488 = OpGroupNonUniformBallot %v4uint %uint_3 %10941
               OpBranch %4489
       %4489 = OpLabel
      %12224 = OpPhi %uint %12226 %4470 %12187 %4492
      %12138 = OpPhi %bool %12140 %4470 %12134 %4492
      %12086 = OpPhi %bool %12088 %4470 %12082 %4492
      %12034 = OpPhi %bool %12036 %4470 %12019 %4492
      %11971 = OpPhi %bool %11973 %4470 %11956 %4492
      %11908 = OpPhi %bool %11910 %4470 %11893 %4492
      %11844 = OpPhi %bool %11846 %4470 %11829 %4492
      %11781 = OpPhi %uint %11783 %4470 %11766 %4492
      %11718 = OpPhi %uint %11720 %4470 %11703 %4492
      %11655 = OpPhi %float %11657 %4470 %11640 %4492
      %11592 = OpPhi %float %11594 %4470 %11577 %4492
      %11528 = OpPhi %int %11530 %4470 %11524 %4492
      %11451 = OpPhi %uint %11453 %4470 %14625 %4492
      %11292 = OpPhi %uint %10729 %4470 %13942 %4492
      %11255 = OpPhi %bool %11257 %4470 %14622 %4492
      %11088 = OpPhi %float %11090 %4470 %14521 %4492
      %11030 = OpPhi %float %11032 %4470 %14419 %4492
      %10943 = OpPhi %int %10945 %4470 %14302 %4492
      %10942 = OpPhi %v4uint %4488 %4470 %14188 %4492
      %14081 = OpPhi %bool %10794 %4470 %14065 %4492
      %13961 = OpPhi %bool %10743 %4470 %13945 %4492
      %13499 = OpPhi %bool %13501 %4470 %13539 %4492
      %13300 = OpPhi %v4float %13302 %4470 %13341 %4492
      %13209 = OpPhi %uint %10712 %4470 %13216 %4492
      %13077 = OpPhi %float %13079 %4470 %13117 %4492
      %12986 = OpPhi %float %12988 %4470 %13026 %4492
      %12895 = OpPhi %bool %12897 %4470 %12935 %4492
      %12804 = OpPhi %bool %12806 %4470 %12844 %4492
      %12695 = OpPhi %bool %12697 %4470 %12735 %4492
      %12606 = OpPhi %uint %12608 %4470 %12646 %4492
      %12517 = OpPhi %bool %12519 %4470 %12557 %4492
      %12426 = OpPhi %uint %12428 %4470 %12466 %4492
      %12337 = OpPhi %uint %12339 %4470 %12377 %4492
               OpLoopMerge %4491 %4492 None
               OpBranch %4490
       %4490 = OpLabel
       %4496 = OpINotEqual %v4bool %10942 %4495
       %4497 = OpAny %bool %4496
               OpSelectionMerge %4501 None
               OpBranchConditional %4497 %4500 %4651
       %4651 = OpLabel
               OpSelectionMerge %4654 None
               OpBranchConditional %4463 %4653 %4654
       %4653 = OpLabel
       %4657 = OpSGreaterThan %bool %10943 %int_0
               OpBranch %4654
       %4654 = OpLabel
      %11430 = OpPhi %bool %false %4651 %4657 %4653
               OpBranch %4501
       %4500 = OpLabel
       %4504 = OpGroupNonUniformBallotFindLSB %uint %uint_3 %10942
       %4506 = OpIEqual %bool %4811 %uint_64
               OpSelectionMerge %4508 None
               OpBranchConditional %4506 %4507 %4528
       %4528 = OpLabel
       %4530 = OpCompositeExtract %uint %10942 0
       %4531 = OpISub %uint %4530 %uint_1
       %4534 = OpBitwiseAnd %uint %4530 %4531
      %10388 = OpCompositeInsert %v4uint %4534 %10942 0
               OpBranch %4508
       %4507 = OpLabel
       %4510 = OpUGreaterThanEqual %bool %4504 %uint_32
               OpSelectionMerge %4512 None
               OpBranchConditional %4510 %4511 %4520
       %4520 = OpLabel
       %4522 = OpCompositeExtract %uint %10942 0
       %4523 = OpISub %uint %4522 %uint_1
       %4526 = OpBitwiseAnd %uint %4522 %4523
      %10384 = OpCompositeInsert %v4uint %4526 %10942 0
               OpBranch %4512
       %4511 = OpLabel
       %4514 = OpCompositeExtract %uint %10942 1
       %4515 = OpISub %uint %4514 %uint_1
       %4518 = OpBitwiseAnd %uint %4514 %4515
      %10380 = OpCompositeInsert %v4uint %4518 %10942 1
               OpBranch %4512
       %4512 = OpLabel
      %14202 = OpPhi %v4uint %10380 %4511 %10384 %4520
               OpBranch %4508
       %4508 = OpLabel
      %14201 = OpPhi %v4uint %14202 %4512 %10388 %4528
       %4539 = OpGroupNonUniformShuffle %uint %uint_3 %10954 %4504
       %7051 = OpAccessChain %_ptr_StorageBuffer_PrimitiveSetup %primitive_setup %int_0 %4539
       %7052 = OpLoad %PrimitiveSetup %7051
       %7053 = OpCompositeExtract %v3int %7052 0
       %7055 = OpCompositeExtract %float %7052 1
       %7057 = OpCompositeExtract %v3int %7052 2
       %7059 = OpCompositeExtract %float %7052 3
       %7061 = OpCompositeExtract %v3int %7052 4
       %7063 = OpCompositeExtract %float %7052 5
       %7065 = OpCompositeExtract %v4int %7052 6
       %7067 = OpCompositeExtract %v4uint %7052 7
       %7070 = OpAccessChain %_ptr_StorageBuffer_uint %primitive_attr %int_0 %4539 %int_1
       %7071 = OpLoad %uint %7070
       %7228 = OpBitFieldUExtract %uint %7071 %int_14 %int_1
       %7229 = OpINotEqual %bool %7228 %uint_0
               OpSelectionMerge %7089 None
               OpBranchConditional %Z_SENSITIVE %7075 %7085
       %7085 = OpLabel
               OpBranch %7089
       %7075 = OpLabel
       %7233 = OpBitFieldUExtract %uint %7071 %int_12 %int_1
       %7234 = OpINotEqual %bool %7233 %uint_0
       %7238 = OpBitFieldUExtract %uint %7071 %int_13 %int_1
       %7239 = OpINotEqual %bool %7238 %uint_0
       %7243 = OpBitFieldUExtract %uint %7071 %int_17 %int_1
       %7244 = OpINotEqual %bool %7243 %uint_0
               OpBranch %7089
       %7089 = OpLabel
      %11223 = OpPhi %bool %7234 %7075 %false %7085
      %11201 = OpPhi %bool %7239 %7075 %false %7085
      %11179 = OpPhi %bool %7244 %7075 %false %7085
       %7248 = OpBitFieldUExtract %uint %7071 %int_0 %int_12
               OpSelectionMerge %7096 None
               OpBranchConditional %HAS_AA1 %7093 %7096
       %7093 = OpLabel
       %7252 = OpBitFieldUExtract %uint %7071 %int_16 %int_1
       %7253 = OpINotEqual %bool %7252 %uint_0
               OpBranch %7096
       %7096 = OpLabel
       %7097 = OpPhi %bool %HAS_AA1 %7089 %7253 %7093
       %7257 = OpBitFieldUExtract %uint %7071 %int_18 %int_1
       %7258 = OpINotEqual %bool %7257 %uint_0
               OpSelectionMerge %7108 None
               OpBranchConditional %SUPER_SAMPLE %7104 %7108
       %7104 = OpLabel
       %7106 = OpBitwiseAnd %uint %7071 %uint_33554432
       %7107 = OpINotEqual %bool %7106 %uint_0
               OpBranch %7108
       %7108 = OpLabel
       %7109 = OpPhi %bool %SUPER_SAMPLE %7096 %7107 %7104
      %16495 = OpCompositeConstruct %v2bool %7109 %7109
      %16496 = OpSelect %v2int %16495 %5123 %5118
               OpSelectionMerge %7396 None
               OpSwitch %uint_0 %7290
       %7290 = OpLabel
       %7295 = OpCompositeExtract %int %16496 0
       %7296 = OpCompositeExtract %int %16496 1
       %7297 = OpCompositeExtract %int %7065 2
       %7298 = OpCompositeExtract %int %7065 3
       %7299 = OpCompositeConstruct %v4int %7295 %7296 %7297 %7298
       %7306 = OpShiftRightArithmetic %v2int %16496 %5188
       %7307 = OpCompositeExtract %int %7065 0
       %7308 = OpCompositeExtract %int %7065 1
       %7309 = OpCompositeExtract %int %7306 0
       %7310 = OpCompositeExtract %int %7306 1
       %7311 = OpCompositeConstruct %v4int %7307 %7308 %7309 %7310
       %7312 = OpSGreaterThanEqual %v4bool %7299 %7311
       %7313 = OpAll %bool %7312
       %7315 = OpLogicalNot %bool %7313
               OpSelectionMerge %7317 None
               OpBranchConditional %7315 %7316 %7317
       %7316 = OpLabel
               OpBranch %7396
       %7317 = OpLabel
       %7319 = OpCompositeExtract %int %7053 0
       %7320 = OpBitwiseAnd %int %7319 %int_1
       %7321 = OpINotEqual %bool %7320 %int_0
       %7324 = OpBitcast %uint %7319
       %7325 = OpBitFieldUExtract %uint %7324 %int_2 %int_2
       %7326 = OpBitcast %int %7325
       %7327 = OpISub %int %7326 %int_1
       %7331 = OpBitFieldUExtract %uint %7324 %int_4 %int_2
       %7332 = OpBitcast %int %7331
       %7333 = OpISub %int %7332 %int_1
       %7336 = OpShiftRightArithmetic %int %7319 %int_6
       %7340 = OpISub %int %int_3 %NUM_SAMPLES_Y_LOG2
       %7341 = OpCompositeConstruct %v2int %7340 %7340
       %7342 = OpShiftLeftLogical %v2int %16496 %7341
       %7470 = OpCompositeExtract %int %7342 0
       %7471 = OpIMul %int %7336 %7470
       %7473 = OpCompositeExtract %int %7053 1
       %7475 = OpCompositeExtract %int %7342 1
       %7476 = OpIMul %int %7473 %7475
       %7477 = OpIAdd %int %7471 %7476
       %7479 = OpCompositeExtract %int %7053 2
       %7480 = OpIAdd %int %7477 %7479
       %7484 = OpCompositeExtract %int %7057 0
       %7487 = OpIMul %int %7484 %7470
       %7489 = OpCompositeExtract %int %7057 1
       %7492 = OpIMul %int %7489 %7475
       %7493 = OpIAdd %int %7487 %7492
       %7495 = OpCompositeExtract %int %7057 2
       %7496 = OpIAdd %int %7493 %7495
       %7500 = OpCompositeExtract %int %7061 0
       %7503 = OpIMul %int %7500 %7470
       %7505 = OpCompositeExtract %int %7061 1
       %7508 = OpIMul %int %7505 %7475
       %7509 = OpIAdd %int %7503 %7508
       %7511 = OpCompositeExtract %int %7061 2
       %7512 = OpIAdd %int %7509 %7511
       %7424 = OpConvertSToF %float %7496
       %7427 = OpFMul %float %7424 %7055
       %7430 = OpFAdd %float %7427 %7059
       %7432 = OpConvertSToF %float %7512
       %7435 = OpFMul %float %7432 %7055
       %7438 = OpFAdd %float %7435 %7063
       %7443 = OpSLessThan %bool %7480 %int_0
       %7444 = OpLogicalAnd %bool %7321 %7443
               OpSelectionMerge %7458 None
               OpBranchConditional %7444 %7445 %7458
       %7445 = OpLabel
       %7449 = OpIAdd %int %7480 %7327
       %7451 = OpIAdd %int %7496 %7449
       %7455 = OpIAdd %int %7480 %7333
       %7457 = OpIAdd %int %7512 %7455
               OpBranch %7458
       %7458 = OpLabel
      %11003 = OpPhi %int %7512 %7317 %7457 %7445
      %11002 = OpPhi %int %7496 %7317 %7451 %7445
      %16497 = OpSelect %int %7444 %int_0 %7480
       %7462 = OpCompositeConstruct %v3int %16497 %11002 %11003
       %7463 = OpSGreaterThanEqual %v3bool %7462 %553
       %7464 = OpAll %bool %7463
               OpSelectionMerge %7394 None
               OpBranchConditional %7464 %7356 %7357
       %7357 = OpLabel
       %7360 = OpIEqual %bool %NUM_SAMPLES_Y_LOG2 %int_0
       %7361 = OpLogicalAnd %bool %7097 %7360
               OpSelectionMerge %7393 None
               OpBranchConditional %7361 %7362 %7393
       %7362 = OpLabel
       %7364 = OpIAdd %v2int %7342 %874
       %7565 = OpCompositeExtract %int %7364 0
       %7566 = OpIMul %int %7336 %7565
       %7570 = OpCompositeExtract %int %7364 1
       %7571 = OpIMul %int %7473 %7570
       %7572 = OpIAdd %int %7566 %7571
       %7575 = OpIAdd %int %7572 %7479
       %7582 = OpIMul %int %7484 %7565
       %7587 = OpIMul %int %7489 %7570
       %7588 = OpIAdd %int %7582 %7587
       %7591 = OpIAdd %int %7588 %7495
       %7598 = OpIMul %int %7500 %7565
       %7603 = OpIMul %int %7505 %7570
       %7604 = OpIAdd %int %7598 %7603
       %7607 = OpIAdd %int %7604 %7511
       %7538 = OpSLessThan %bool %7575 %int_0
       %7539 = OpLogicalAnd %bool %7321 %7538
               OpSelectionMerge %7553 None
               OpBranchConditional %7539 %7540 %7553
       %7540 = OpLabel
       %7544 = OpIAdd %int %7575 %7327
       %7546 = OpIAdd %int %7591 %7544
       %7550 = OpIAdd %int %7575 %7333
       %7552 = OpIAdd %int %7607 %7550
               OpBranch %7553
       %7553 = OpLabel
      %11007 = OpPhi %int %7607 %7362 %7552 %7540
      %11006 = OpPhi %int %7591 %7362 %7546 %7540
      %16498 = OpSelect %int %7539 %int_0 %7575
       %7557 = OpCompositeConstruct %v3int %16498 %11006 %11007
       %7558 = OpSGreaterThanEqual %v3bool %7557 %553
       %7559 = OpAll %bool %7558
       %7370 = OpSelect %int %7559 %int_1 %int_0
       %7374 = OpIAdd %v2int %7342 %889
       %7660 = OpCompositeExtract %int %7374 0
       %7661 = OpIMul %int %7336 %7660
       %7665 = OpCompositeExtract %int %7374 1
       %7666 = OpIMul %int %7473 %7665
       %7667 = OpIAdd %int %7661 %7666
       %7670 = OpIAdd %int %7667 %7479
       %7677 = OpIMul %int %7484 %7660
       %7682 = OpIMul %int %7489 %7665
       %7683 = OpIAdd %int %7677 %7682
       %7686 = OpIAdd %int %7683 %7495
       %7693 = OpIMul %int %7500 %7660
       %7698 = OpIMul %int %7505 %7665
       %7699 = OpIAdd %int %7693 %7698
       %7702 = OpIAdd %int %7699 %7511
       %7633 = OpSLessThan %bool %7670 %int_0
       %7634 = OpLogicalAnd %bool %7321 %7633
               OpSelectionMerge %7648 None
               OpBranchConditional %7634 %7635 %7648
       %7635 = OpLabel
       %7639 = OpIAdd %int %7670 %7327
       %7641 = OpIAdd %int %7686 %7639
       %7645 = OpIAdd %int %7670 %7333
       %7647 = OpIAdd %int %7702 %7645
               OpBranch %7648
       %7648 = OpLabel
      %11013 = OpPhi %int %7702 %7553 %7647 %7635
      %11012 = OpPhi %int %7686 %7553 %7641 %7635
      %16499 = OpSelect %int %7634 %int_0 %7670
       %7652 = OpCompositeConstruct %v3int %16499 %11012 %11013
       %7653 = OpSGreaterThanEqual %v3bool %7652 %553
       %7654 = OpAll %bool %7653
       %7380 = OpSelect %int %7654 %int_1 %int_0
       %7382 = OpIAdd %int %7370 %7380
       %7384 = OpIAdd %v2int %7342 %904
       %7755 = OpCompositeExtract %int %7384 0
       %7756 = OpIMul %int %7336 %7755
       %7760 = OpCompositeExtract %int %7384 1
       %7761 = OpIMul %int %7473 %7760
       %7762 = OpIAdd %int %7756 %7761
       %7765 = OpIAdd %int %7762 %7479
       %7772 = OpIMul %int %7484 %7755
       %7777 = OpIMul %int %7489 %7760
       %7778 = OpIAdd %int %7772 %7777
       %7781 = OpIAdd %int %7778 %7495
       %7788 = OpIMul %int %7500 %7755
       %7793 = OpIMul %int %7505 %7760
       %7794 = OpIAdd %int %7788 %7793
       %7797 = OpIAdd %int %7794 %7511
       %7728 = OpSLessThan %bool %7765 %int_0
       %7729 = OpLogicalAnd %bool %7321 %7728
               OpSelectionMerge %7743 None
               OpBranchConditional %7729 %7730 %7743
       %7730 = OpLabel
       %7734 = OpIAdd %int %7765 %7327
       %7736 = OpIAdd %int %7781 %7734
       %7740 = OpIAdd %int %7765 %7333
       %7742 = OpIAdd %int %7797 %7740
               OpBranch %7743
       %7743 = OpLabel
      %11018 = OpPhi %int %7797 %7648 %7742 %7730
      %11017 = OpPhi %int %7781 %7648 %7736 %7730
      %16500 = OpSelect %int %7729 %int_0 %7765
       %7747 = OpCompositeConstruct %v3int %16500 %11017 %11018
       %7748 = OpSGreaterThanEqual %v3bool %7747 %553
       %7749 = OpAll %bool %7748
       %7390 = OpSelect %int %7749 %int_1 %int_0
       %7392 = OpIAdd %int %7382 %7390
               OpBranch %7393
       %7393 = OpLabel
      %11021 = OpPhi %int %int_0 %7357 %7392 %7743
               OpBranch %7394
       %7356 = OpLabel
               OpBranch %7394
       %7394 = OpLabel
      %11020 = OpPhi %int %int_4 %7356 %11021 %7393
               OpBranch %7396
       %7396 = OpLabel
      %11081 = OpPhi %float %11088 %7316 %7438 %7394
      %11023 = OpPhi %float %11030 %7316 %7430 %7394
      %11022 = OpPhi %int %int_0 %7316 %11020 %7394
               OpSelectionMerge %7140 None
               OpBranchConditional %HAS_SCANMSK %7122 %7140
       %7122 = OpLabel
       %7125 = OpBitwiseAnd %int %5130 %int_1
       %7126 = OpIEqual %bool %7125 %int_0
               OpSelectionMerge %7139 None
               OpBranchConditional %7126 %7127 %7133
       %7133 = OpLabel
       %7806 = OpBitFieldUExtract %uint %7071 %int_24 %int_1
       %7807 = OpINotEqual %bool %7806 %uint_0
               OpNoLine
      %16501 = OpSelect %int %7807 %int_0 %11022
               OpBranch %7139
       %7127 = OpLabel
       %7801 = OpBitFieldUExtract %uint %7071 %int_23 %int_1
       %7802 = OpINotEqual %bool %7801 %uint_0
               OpNoLine
      %16502 = OpSelect %int %7802 %int_0 %11022
               OpBranch %7139
       %7139 = OpLabel
      %11139 = OpPhi %int %16502 %7127 %16501 %7133
               OpBranch %7140
       %7140 = OpLabel
      %11138 = OpPhi %int %11022 %7396 %11139 %7139
               OpSelectionMerge %7153 None
               OpBranchConditional %Z_SENSITIVE %7141 %7153
       %7141 = OpLabel
               OpSelectionMerge %7148 None
               OpBranchConditional %7097 %7144 %7148
       %7144 = OpLabel
       %7147 = OpSLessThan %bool %11138 %int_4
               OpBranch %7148
       %7148 = OpLabel
       %7149 = OpPhi %bool %7097 %7141 %7147 %7144
      %16503 = OpSelect %bool %7149 %false %11201
               OpBranch %7153
       %7153 = OpLabel
      %11195 = OpPhi %bool %11201 %7140 %16503 %7148
       %7158 = OpCompositeExtract %uint %7067 0
       %7160 = OpCompositeExtract %uint %7067 1
       %7161 = OpBitcast %float %7160
       %7163 = OpCompositeExtract %uint %7067 2
       %7164 = OpBitcast %float %7163
       %7167 = OpFMul %float %7161 %11023
       %7170 = OpFMul %float %7164 %11081
       %7171 = OpFAdd %float %7167 %7170
       %7172 = OpExtInst %float %2 RoundEven %7171
       %7173 = OpExtInst %float %2 FClamp %7172 %float_0 %float_4_29496704e_09
       %7174 = OpConvertFToU %uint %7173
       %7177 = OpISub %uint %uint_4294967295 %7158
       %7178 = OpExtInst %uint %2 UMin %7174 %7177
       %7181 = OpIAdd %uint %7158 %7178
               OpSelectionMerge %7190 None
               OpBranchConditional %is_zb_16bit %7182 %7185
       %7185 = OpLabel
               OpSelectionMerge %7189 None
               OpBranchConditional %is_zb_24bit %7186 %7189
       %7186 = OpLabel
       %7188 = OpExtInst %uint %2 UClamp %7181 %uint_0 %uint_16777215
               OpBranch %7189
       %7189 = OpLabel
      %11159 = OpPhi %uint %7181 %7185 %7188 %7186
               OpBranch %7190
       %7182 = OpLabel
       %7184 = OpExtInst %uint %2 UClamp %7181 %uint_0 %uint_65535
               OpBranch %7190
       %7190 = OpLabel
      %11158 = OpPhi %uint %7184 %7182 %11159 %7189
               OpSelectionMerge %7196 None
               OpBranchConditional %SUPER_SAMPLE %7192 %7196
       %7192 = OpLabel
       %7194 = OpBitwiseAnd %uint %7071 %uint_100663296
       %7195 = OpIEqual %bool %7194 %uint_67108864
               OpBranch %7196
       %7196 = OpLabel
       %7197 = OpPhi %bool %SUPER_SAMPLE %7190 %7195 %7192
               OpSelectionMerge %7217 None
               OpBranchConditional %7197 %7198 %7217
       %7198 = OpLabel
       %7821 = OpISub %int %int_3 %NUM_SAMPLES_Y_LOG2
       %7822 = OpCompositeConstruct %v2int %7821 %7821
       %7823 = OpShiftLeftLogical %v2int %5123 %7822
       %7848 = OpCompositeExtract %int %7057 0
       %7850 = OpCompositeExtract %int %7823 0
       %7851 = OpIMul %int %7848 %7850
       %7853 = OpCompositeExtract %int %7057 1
       %7855 = OpCompositeExtract %int %7823 1
       %7856 = OpIMul %int %7853 %7855
       %7857 = OpIAdd %int %7851 %7856
       %7859 = OpCompositeExtract %int %7057 2
       %7860 = OpIAdd %int %7857 %7859
       %7864 = OpCompositeExtract %int %7061 0
       %7867 = OpIMul %int %7864 %7850
       %7869 = OpCompositeExtract %int %7061 1
       %7872 = OpIMul %int %7869 %7855
       %7873 = OpIAdd %int %7867 %7872
       %7875 = OpCompositeExtract %int %7061 2
       %7876 = OpIAdd %int %7873 %7875
       %7831 = OpConvertSToF %float %7860
       %7833 = OpFMul %float %7831 %7055
       %7835 = OpFAdd %float %7833 %7059
       %7837 = OpConvertSToF %float %7876
       %7839 = OpFMul %float %7837 %7055
       %7841 = OpFAdd %float %7839 %7063
               OpBranch %7217
       %7217 = OpLabel
      %11164 = OpPhi %float %11081 %7196 %7841 %7198
      %11160 = OpPhi %float %11023 %7196 %7835 %7198
      %16504 = OpSelect %bool %7197 %true %false
       %4550 = OpSGreaterThan %bool %11138 %int_0
               OpSelectionMerge %4552 None
               OpBranchConditional %4550 %4551 %4552
       %4551 = OpLabel
               OpSelectionMerge %4556 None
               OpBranchConditional %11223 %4555 %4556
       %4555 = OpLabel
       %4559 = OpLogicalNot %bool %11255
               OpBranch %4556
       %4556 = OpLabel
       %4560 = OpPhi %bool %11223 %4551 %4559 %4555
               OpSelectionMerge %4562 None
               OpBranchConditional %4560 %4561 %4588
       %4588 = OpLabel
               OpSelectionMerge %4592 None
               OpBranchConditional %11195 %4591 %4592
       %4591 = OpLabel
       %4595 = OpLogicalNot %bool %11223
               OpBranch %4592
       %4592 = OpLabel
       %4596 = OpPhi %bool %11195 %4588 %4595 %4591
       %4599 = OpLogicalAnd %bool %4596 %7229
               OpNoLine
      %16505 = OpSelect %bool %4599 %true %14081
      %16506 = OpSelect %uint %4599 %11158 %11292
      %16507 = OpSelect %bool %4599 %false %11255
      %16508 = OpSelect %bool %4599 %false %11195
               OpBranch %4562
       %4561 = OpLabel
               OpSelectionMerge %7890 None
               OpBranchConditional %11179 %7882 %7886
       %7886 = OpLabel
       %7889 = OpUGreaterThanEqual %bool %11158 %11292
               OpBranch %7890
       %7882 = OpLabel
       %7885 = OpUGreaterThan %bool %11158 %11292
               OpBranch %7890
       %7890 = OpLabel
      %11311 = OpPhi %bool %7885 %7882 %7889 %7886
               OpSelectionMerge %4572 None
               OpBranchConditional %11311 %4571 %4585
       %4585 = OpLabel
               OpBranch %4572
       %4571 = OpLabel
       %4577 = OpLogicalAnd %bool %11195 %7229
               OpNoLine
      %16509 = OpSelect %bool %4577 %true %14081
      %16510 = OpSelect %uint %4577 %11158 %11292
      %16511 = OpSelect %bool %4577 %false %11195
               OpBranch %4572
       %4572 = OpLabel
      %14103 = OpPhi %bool %16509 %4571 %14081 %4585
      %12775 = OpPhi %uint %16510 %4571 %11292 %4585
      %11321 = OpPhi %bool %16511 %4571 %false %4585
      %16512 = OpSelect %int %11311 %11138 %int_0
               OpBranch %4562
       %4562 = OpLabel
      %14102 = OpPhi %bool %14103 %4572 %16505 %4592
      %12774 = OpPhi %uint %12775 %4572 %16506 %4592
      %11336 = OpPhi %int %16512 %4572 %11138 %4592
      %11326 = OpPhi %bool %11255 %4572 %16507 %4592
      %11320 = OpPhi %bool %11321 %4572 %16508 %4592
      %16513 = OpSelect %bool %4560 %false %11223
       %4611 = OpLogicalNot %bool %16513
               OpSelectionMerge %4613 None
               OpBranchConditional %4611 %4612 %4613
       %4612 = OpLabel
       %4616 = OpLogicalNot %bool %11320
               OpBranch %4613
       %4613 = OpLabel
       %4617 = OpPhi %bool %16513 %4562 %4616 %4612
       %4620 = OpLogicalAnd %bool %4617 %11326
               OpNoLine
      %16514 = OpSelect %bool %4620 %false %7229
               OpBranch %4552
       %4552 = OpLabel
      %14068 = OpPhi %bool %14081 %7217 %14102 %4613
      %13833 = OpPhi %bool %11255 %7217 %11326 %4613
      %12771 = OpPhi %uint %11292 %7217 %12774 %4613
      %11389 = OpPhi %bool %11223 %7217 %16513 %4613
      %11385 = OpPhi %bool %11195 %7217 %11320 %4613
      %11343 = OpPhi %bool %7229 %7217 %16514 %4613
      %11333 = OpPhi %int %11138 %7217 %11336 %4613
       %4627 = OpSGreaterThan %bool %11333 %int_0
               OpSelectionMerge %4629 None
               OpBranchConditional %4627 %4628 %4629
       %4628 = OpLabel
       %4632 = OpLogicalNot %bool %11343
               OpSelectionMerge %4634 None
               OpBranchConditional %4632 %4633 %4634
       %4633 = OpLabel
       %4637 = OpSGreaterThan %bool %10943 %int_0
               OpBranch %4634
       %4634 = OpLabel
       %4638 = OpPhi %bool %4632 %4628 %4637 %4633
       %4640 = OpLogicalNot %bool %4638
               OpNoLine
      %16515 = OpSelect %bool %4640 %11385 %13833
      %16516 = OpSelect %bool %4640 %7097 %13499
      %16517 = OpSelect %float %4640 %11164 %13077
      %16518 = OpSelect %float %4640 %11160 %12986
      %16519 = OpSelect %bool %4640 %16504 %12895
      %16520 = OpSelect %bool %4640 %7258 %12804
      %16521 = OpSelect %bool %4640 %11179 %12695
      %16522 = OpSelect %uint %4640 %11158 %12606
      %16523 = OpSelect %bool %4640 %11389 %12517
      %16524 = OpSelect %uint %4640 %7248 %12337
      %16525 = OpSelect %bool %4640 %false %11385
      %16526 = OpSelect %int %4640 %int_0 %11333
      %16527 = OpSelect %uint %4640 %4539 %11451
      %16528 = OpSelect %int %4640 %11333 %10943
               OpBranch %4629
       %4629 = OpLabel
      %13832 = OpPhi %bool %13833 %4552 %16515 %4634
      %13485 = OpPhi %bool %13499 %4552 %16516 %4634
      %13063 = OpPhi %float %13077 %4552 %16517 %4634
      %12972 = OpPhi %float %12986 %4552 %16518 %4634
      %12881 = OpPhi %bool %12895 %4552 %16519 %4634
      %12790 = OpPhi %bool %12804 %4552 %16520 %4634
      %12681 = OpPhi %bool %12695 %4552 %16521 %4634
      %12592 = OpPhi %uint %12606 %4552 %16522 %4634
      %12503 = OpPhi %bool %12517 %4552 %16523 %4634
      %12323 = OpPhi %uint %12337 %4552 %16524 %4634
      %12083 = OpPhi %bool %11385 %4552 %16525 %4634
      %11525 = OpPhi %int %11333 %4552 %16526 %4634
      %11437 = OpPhi %uint %11451 %4552 %16527 %4634
      %11432 = OpPhi %int %10943 %4552 %16528 %4634
      %11394 = OpPhi %bool %false %4552 %4638 %4634
               OpBranch %4501
       %4501 = OpLabel
      %14521 = OpPhi %float %11081 %4629 %11088 %4654
      %14419 = OpPhi %float %11023 %4629 %11030 %4654
      %14188 = OpPhi %v4uint %14201 %4629 %10942 %4654
      %14066 = OpPhi %bool %14068 %4629 %14081 %4654
      %13831 = OpPhi %bool %13832 %4629 %11255 %4654
      %13484 = OpPhi %bool %13485 %4629 %13499 %4654
      %13062 = OpPhi %float %13063 %4629 %13077 %4654
      %12971 = OpPhi %float %12972 %4629 %12986 %4654
      %12880 = OpPhi %bool %12881 %4629 %12895 %4654
      %12789 = OpPhi %bool %12790 %4629 %12804 %4654
      %12769 = OpPhi %uint %12771 %4629 %11292 %4654
      %12680 = OpPhi %bool %12681 %4629 %12695 %4654
      %12591 = OpPhi %uint %12592 %4629 %12606 %4654
      %12502 = OpPhi %bool %12503 %4629 %12517 %4654
      %12322 = OpPhi %uint %12323 %4629 %12337 %4654
      %12187 = OpPhi %uint %4539 %4629 %12224 %4654
      %12134 = OpPhi %bool %11389 %4629 %12138 %4654
      %12082 = OpPhi %bool %12083 %4629 %12086 %4654
      %12019 = OpPhi %bool %7097 %4629 %12034 %4654
      %11956 = OpPhi %bool %7258 %4629 %11971 %4654
      %11893 = OpPhi %bool %11179 %4629 %11908 %4654
      %11829 = OpPhi %bool %16504 %4629 %11844 %4654
      %11766 = OpPhi %uint %11158 %4629 %11781 %4654
      %11703 = OpPhi %uint %7248 %4629 %11718 %4654
      %11640 = OpPhi %float %11160 %4629 %11655 %4654
      %11577 = OpPhi %float %11164 %4629 %11592 %4654
      %11524 = OpPhi %int %11525 %4629 %11528 %4654
      %11436 = OpPhi %uint %11437 %4629 %11451 %4654
      %11431 = OpPhi %int %11432 %4629 %10943 %4654
      %11393 = OpPhi %bool %11394 %4629 %11430 %4654
       %4659 = OpGroupNonUniformAny %bool %uint_3 %11393
               OpSelectionMerge %4661 None
               OpBranchConditional %4659 %4660 %4661
       %4660 = OpLabel
       %7910 = OpSGreaterThan %bool %11431 %int_0
               OpSelectionMerge %7916 None
               OpBranchConditional %7910 %7912 %7916
       %7912 = OpLabel
       %7914 = OpAccessChain %_ptr_StorageBuffer_uint %primitive_attr %int_0 %11436 %int_2
       %7915 = OpLoad %uint %7914
               OpBranch %7916
       %7916 = OpLabel
      %12410 = OpPhi %uint %12426 %4660 %7915 %7912
               OpBranch %7917
       %7917 = OpLabel
      %13283 = OpPhi %v4float %13300 %7916 %16355 %7944
      %13192 = OpPhi %uint %13209 %7916 %16348 %7944
      %12767 = OpPhi %uint %12769 %7916 %16006 %7944
      %11520 = OpPhi %bool %7910 %7916 %14628 %7944
      %14114 = OpPhi %bool %14066 %7916 %14116 %7944
      %13994 = OpPhi %bool %13961 %7916 %13996 %7944
       %7920 = OpGroupNonUniformAny %bool %uint_3 %11520
               OpLoopMerge %7945 %7944 None
               OpBranchConditional %7920 %7921 %7945
       %7921 = OpLabel
               OpSelectionMerge %7943 None
               OpBranchConditional %11520 %7923 %7943
       %7923 = OpLabel
       %7926 = OpGroupNonUniformBroadcastFirst %uint %uint_3 %12322
       %7928 = OpGroupNonUniformBroadcastFirst %uint %uint_3 %12410
       %7932 = OpIEqual %bool %7926 %12322
       %7935 = OpIEqual %bool %12410 %7928
       %7936 = OpLogicalAnd %bool %7932 %7935
               OpSelectionMerge %7942 None
               OpBranchConditional %7936 %7937 %7942
       %7937 = OpLabel
               OpSelectionMerge %8288 None
               OpSwitch %uint_0 %7996
       %7996 = OpLabel
       %7998 = OpAccessChain %_ptr_Uniform_StateVector %state_vectors %int_0 %7926
       %7999 = OpLoad %StateVector %7998
       %8000 = OpCompositeExtract %uint %7999 0
       %8002 = OpCompositeExtract %uint %7999 1
       %8004 = OpCompositeExtract %v2uint %7999 2
       %8008 = OpLogicalAnd %bool %Z_SENSITIVE %12502
               OpSelectionMerge %8016 None
               OpBranchConditional %8008 %8009 %8015
       %8015 = OpLabel
               OpBranch %8016
       %8009 = OpLabel
               OpSelectionMerge %8302 None
               OpBranchConditional %12680 %8294 %8298
       %8298 = OpLabel
       %8301 = OpUGreaterThanEqual %bool %12591 %12767
               OpBranch %8302
       %8294 = OpLabel
       %8297 = OpUGreaterThan %bool %12591 %12767
               OpBranch %8302
       %8302 = OpLabel
      %12783 = OpPhi %bool %8297 %8294 %8301 %8298
               OpBranch %8016
       %8016 = OpLabel
      %12784 = OpPhi %bool %12783 %8302 %true %8015
               OpSelectionMerge %8287 None
               OpBranchConditional %12784 %8018 %8287
       %8018 = OpLabel
       %8347 = OpAccessChain %_ptr_StorageBuffer_TransformedAttributes %transformed_attr %int_0 %11436
       %8348 = OpLoad %TransformedAttributes %8347
       %8349 = OpCompositeExtract %v4float %8348 0
       %8351 = OpCompositeExtract %v4float %8348 1
       %8353 = OpCompositeExtract %v4float %8348 2
       %8355 = OpCompositeExtract %uint %8348 3
       %8357 = OpCompositeExtract %uint %8348 4
       %8359 = OpCompositeExtract %uint %8348 5
       %8363 = OpCompositeExtract %v4float %8348 7
       %8373 = OpExtInst %v4float %2 UnpackUnorm4x8 %8355
       %8376 = OpExtInst %v4float %2 UnpackUnorm4x8 %8357
       %8379 = OpExtInst %v4float %2 UnpackUnorm4x8 %8359
       %8383 = OpFSub %v4float %8376 %8373
       %8385 = OpVectorTimesScalar %v4float %8383 %12971
       %8386 = OpFAdd %v4float %8373 %8385
       %8389 = OpFSub %v4float %8379 %8373
       %8391 = OpVectorTimesScalar %v4float %8389 %13062
       %8392 = OpFAdd %v4float %8386 %8391
       %8393 = OpVectorTimesScalar %v4float %8392 %float_255
       %8395 = OpFAdd %v4float %8393 %16465
       %8396 = OpExtInst %v4float %2 Floor %8395
       %8398 = OpBitwiseAnd %uint %8000 %uint_8
       %8399 = OpINotEqual %bool %8398 %uint_0
       %8401 = OpBitwiseAnd %uint %8000 %uint_16
       %8402 = OpINotEqual %bool %8401 %uint_0
       %8404 = OpBitwiseAnd %uint %8000 %uint_4
       %8405 = OpINotEqual %bool %8404 %uint_0
       %8407 = OpBitFieldUExtract %uint %8000 %int_0 %int_2
               OpSelectionMerge %8495 None
               OpBranchConditional %8405 %8409 %8493
       %8493 = OpLabel
               OpBranch %8495
       %8409 = OpLabel
       %8411 = OpVectorShuffle %v3float %8349 %8349 0 1 2
       %8413 = OpVectorShuffle %v3float %8351 %8351 0 1 2
       %8415 = OpVectorTimesScalar %v3float %8413 %12971
       %8416 = OpFAdd %v3float %8411 %8415
       %8418 = OpVectorShuffle %v3float %8353 %8353 0 1 2
       %8420 = OpVectorTimesScalar %v3float %8418 %13062
       %8421 = OpFAdd %v3float %8416 %8420
       %8423 = OpLogicalAnd %bool %3670 %12880
               OpSelectionMerge %8438 None
               OpBranchConditional %8423 %8424 %8438
       %8424 = OpLabel
       %8426 = OpVectorShuffle %v2float %8421 %8421 0 1
       %8429 = OpVectorShuffle %v2float %8363 %8363 0 1
       %8432 = OpVectorShuffle %v2float %8363 %8363 2 3
       %8433 = OpExtInst %v2float %2 FClamp %8426 %8429 %8432
       %8435 = OpCompositeExtract %float %8433 0
      %10480 = OpCompositeInsert %v3float %8435 %8421 0
       %8437 = OpCompositeExtract %float %8433 1
      %10482 = OpCompositeInsert %v3float %8437 %10480 1
               OpBranch %8438
       %8438 = OpLabel
      %13149 = OpPhi %v3float %8421 %8409 %10482 %8424
       %8440 = OpVectorShuffle %v2float %13149 %13149 0 1
               OpSelectionMerge %8446 None
               OpBranchConditional %12789 %8442 %8446
       %8442 = OpLabel
       %8444 = OpCompositeExtract %float %13149 2
       %8445 = OpFUnordNotEqual %bool %8444 %float_1
               OpBranch %8446
       %8446 = OpLabel
       %8447 = OpPhi %bool %12789 %8438 %8445 %8442
               OpSelectionMerge %8454 None
               OpBranchConditional %8447 %8448 %8454
       %8448 = OpLabel
       %8450 = OpCompositeExtract %float %13149 2
       %8452 = OpCompositeConstruct %v2float %8450 %8450
       %8453 = OpFDiv %v2float %8440 %8452
               OpBranch %8454
       %8454 = OpLabel
      %13152 = OpPhi %v2float %8440 %8446 %8453 %8448
       %8456 = OpExtInst %v2float %2 FClamp %13152 %3707 %3709
       %8458 = OpAccessChain %_ptr_StorageBuffer_uint %primitive_attr %int_0 %11436 %int_3
       %8459 = OpLoad %uint %8458
       %8464 = OpCompositeExtract %float %13149 2
               OpNoLine
               OpSelectionMerge %8861 None
               OpSwitch %uint_0 %8590
       %8590 = OpLabel
       %8592 = OpBitFieldUExtract %uint %7928 %int_0 %int_16
               OpSelectionMerge %8602 None
               OpBranchConditional %FEEDBACK %8593 %8602
       %8593 = OpLabel
       %8595 = OpBitwiseAnd %uint %8592 %uint_32768
       %8596 = OpINotEqual %bool %8595 %uint_0
               OpSelectionMerge %8601 None
               OpBranchConditional %8596 %8597 %8601
       %8597 = OpLabel
       %8893 = OpSelect %uint %FEEDBACK_READS_DEPTH %12767 %13192
               OpSelectionMerge %9047 None
               OpSwitch %FEEDBACK_PSM %9045 19 %9046 20 %9046 27 %9046 36 %9046 44 %9046
       %9046 = OpLabel
               OpBranch %9047
       %9045 = OpLabel
               OpBranch %9047
       %9047 = OpLabel
      %13243 = OpPhi %bool %false %9045 %true %9046
               OpSelectionMerge %9038 None
               OpBranchConditional %13243 %8895 %8985
       %8985 = OpLabel
       %9079 = OpBitcast %int %8893
       %9080 = OpCompositeConstruct %v4int %9079 %9079 %9079 %9079
       %9081 = OpShiftRightArithmetic %v4int %9080 %308
       %9082 = OpBitwiseAnd %v4int %9081 %311
       %8989 = OpBitFieldUExtract %uint %8459 %int_15 %int_1
       %8991 = OpBitFieldUExtract %uint %8459 %int_16 %int_8
       %8993 = OpBitFieldUExtract %uint %8459 %int_24 %int_8
       %8995 = OpINotEqual %bool %8989 %uint_0
               OpSelectionMerge %9006 None
               OpBranchConditional %8995 %8996 %9006
       %8996 = OpLabel
       %8998 = OpCompositeExtract %int %9082 0
       %9000 = OpCompositeExtract %int %9082 1
       %9001 = OpBitwiseOr %int %8998 %9000
       %9003 = OpCompositeExtract %int %9082 2
       %9004 = OpBitwiseOr %int %9001 %9003
       %9005 = OpIEqual %bool %9004 %int_0
               OpBranch %9006
       %9006 = OpLabel
       %9007 = OpPhi %bool %8995 %8985 %9005 %8996
               OpSelectionMerge %9037 None
               OpBranchConditional %3164 %9008 %9017
       %9017 = OpLabel
               OpSelectionMerge %9036 None
               OpBranchConditional %3183 %9018 %9036
       %9018 = OpLabel
               OpSelectionMerge %9033 None
               OpBranchConditional %9007 %9020 %9021
       %9021 = OpLabel
       %9023 = OpCompositeExtract %int %9082 3
       %9024 = OpIEqual %bool %9023 %int_0
               OpSelectionMerge %9031 None
               OpBranchConditional %9024 %9025 %9028
       %9028 = OpLabel
       %9030 = OpBitcast %int %8993
               OpBranch %9031
       %9025 = OpLabel
       %9027 = OpBitcast %int %8991
               OpBranch %9031
       %9031 = OpLabel
      %13245 = OpPhi %int %9027 %9025 %9030 %9028
               OpBranch %9033
       %9020 = OpLabel
               OpBranch %9033
       %9033 = OpLabel
      %13246 = OpPhi %int %int_0 %9020 %13245 %9031
      %10496 = OpCompositeInsert %v4int %13246 %9082 3
               OpBranch %9036
       %9036 = OpLabel
      %13262 = OpPhi %v4int %9082 %9017 %10496 %9033
               OpBranch %9037
       %9008 = OpLabel
               OpSelectionMerge %9014 None
               OpBranchConditional %9007 %9010 %9011
       %9011 = OpLabel
       %9013 = OpBitcast %int %8991
               OpBranch %9014
       %9010 = OpLabel
               OpBranch %9014
       %9014 = OpLabel
      %13249 = OpPhi %int %int_0 %9010 %9013 %9011
      %10493 = OpCompositeInsert %v4int %13249 %9082 3
               OpBranch %9037
       %9037 = OpLabel
      %13261 = OpPhi %v4int %10493 %9014 %13262 %9036
               OpBranch %9038
       %8895 = OpLabel
       %8897 = OpBitFieldUExtract %uint %8592 %int_0 %int_5
       %8899 = OpBitFieldUExtract %uint %8592 %int_5 %int_10
               OpSelectionMerge %8903 None
               OpBranchConditional %3014 %8900 %8903
       %8900 = OpLabel
       %8902 = OpBitwiseAnd %uint %8897 %uint_15
               OpBranch %8903
       %8903 = OpLabel
      %13252 = OpPhi %uint %8897 %8895 %8902 %8900
               OpSelectionMerge %8914 None
               OpSwitch %FEEDBACK_PSM %8904 27 %8905 36 %8908 44 %8911
       %8911 = OpLabel
       %8913 = OpBitFieldUExtract %uint %8893 %int_28 %int_4
               OpBranch %8914
       %8908 = OpLabel
       %8910 = OpBitFieldUExtract %uint %8893 %int_24 %int_4
               OpBranch %8914
       %8905 = OpLabel
       %8907 = OpBitFieldUExtract %uint %8893 %int_24 %int_8
               OpBranch %8914
       %8904 = OpLabel
               OpBranch %8914
       %8914 = OpLabel
      %13253 = OpPhi %uint %uint_0 %8904 %8907 %8905 %8910 %8908 %8913 %8911
       %8916 = OpIMul %uint %13252 %uint_16
       %8918 = OpIAdd %uint %13253 %8916
               OpSelectionMerge %8929 None
               OpBranchConditional %3045 %8919 %8929
       %8919 = OpLabel
       %8921 = OpShiftRightLogical %uint %8918 %uint_4
       %8923 = OpExtInst %uint %2 UMin %8921 %MAX_CSA
       %8925 = OpIMul %uint %8923 %uint_16
       %8927 = OpBitwiseAnd %uint %8918 %uint_15
       %8928 = OpIAdd %uint %8925 %8927
               OpBranch %8929
       %8929 = OpLabel
      %13254 = OpPhi %uint %8918 %8914 %8928 %8919
       %8931 = OpIMul %uint %8899 %uint_512
       %8933 = OpIAdd %uint %13254 %8931
               OpSelectionMerge %8984 None
               OpBranchConditional %3066 %8934 %8949
       %8949 = OpLabel
       %8951 = OpBitFieldUExtract %uint %8459 %int_15 %int_1
       %8953 = OpBitFieldUExtract %uint %8459 %int_16 %int_8
       %8955 = OpBitFieldUExtract %uint %8459 %int_24 %int_8
       %8957 = OpAccessChain %_ptr_StorageBuffer_ushort %clut16 %int_0 %8933
       %8958 = OpLoad %ushort %8957
       %8959 = OpUConvert %uint %8958
       %9060 = OpBitcast %int %8959
       %9061 = OpCompositeConstruct %v4int %9060 %9060 %9060 %9060
       %9062 = OpShiftRightArithmetic %v4int %9061 %322
       %9063 = OpBitwiseAnd %v4int %9062 %325
       %9070 = OpShiftLeftLogical %v4int %9063 %335
       %8963 = OpINotEqual %bool %8951 %uint_0
       %8965 = OpIEqual %bool %8959 %uint_0
       %8966 = OpLogicalAnd %bool %8963 %8965
               OpSelectionMerge %8981 None
               OpBranchConditional %8966 %8968 %8969
       %8969 = OpLabel
       %8971 = OpCompositeExtract %int %9070 3
       %8972 = OpIEqual %bool %8971 %int_0
               OpSelectionMerge %8979 None
               OpBranchConditional %8972 %8973 %8976
       %8976 = OpLabel
       %8978 = OpBitcast %int %8955
               OpBranch %8979
       %8973 = OpLabel
       %8975 = OpBitcast %int %8953
               OpBranch %8979
       %8979 = OpLabel
      %13255 = OpPhi %int %8975 %8973 %8978 %8976
               OpBranch %8981
       %8968 = OpLabel
               OpBranch %8981
       %8981 = OpLabel
      %13256 = OpPhi %int %int_0 %8968 %13255 %8979
      %10488 = OpCompositeInsert %v4int %13256 %9070 3
               OpBranch %8984
       %8934 = OpLabel
       %8936 = OpAccessChain %_ptr_StorageBuffer_ushort %clut16 %int_0 %8933
       %8937 = OpLoad %ushort %8936
       %8938 = OpUConvert %uint %8937
       %8940 = OpIAdd %uint %8933 %uint_256
       %8941 = OpAccessChain %_ptr_StorageBuffer_ushort %clut16 %int_0 %8940
       %8942 = OpLoad %ushort %8941
       %8943 = OpUConvert %uint %8942
       %8946 = OpShiftLeftLogical %uint %8943 %int_16
       %8947 = OpBitwiseOr %uint %8938 %8946
       %9052 = OpBitcast %int %8947
       %9053 = OpCompositeConstruct %v4int %9052 %9052 %9052 %9052
       %9054 = OpShiftRightArithmetic %v4int %9053 %308
       %9055 = OpBitwiseAnd %v4int %9054 %311
               OpBranch %8984
       %8984 = OpLabel
      %13260 = OpPhi %v4int %9055 %8934 %10488 %8981
               OpBranch %9038
       %9038 = OpLabel
      %13259 = OpPhi %v4int %13260 %8984 %13261 %9037
       %9040 = OpConvertSToF %v4float %13259
               OpBranch %8861
       %8601 = OpLabel
               OpBranch %8602
       %8602 = OpLabel
       %8604 = OpBitwiseAnd %uint %7928 %uint_524288
       %8605 = OpINotEqual %bool %8604 %uint_0
       %8607 = OpBitwiseAnd %uint %7928 %uint_1048576
       %8608 = OpINotEqual %bool %8607 %uint_0
       %8610 = OpBitwiseAnd %uint %7928 %uint_65536
       %8611 = OpINotEqual %bool %8610 %uint_0
       %8613 = OpBitwiseAnd %uint %7928 %uint_131072
       %8614 = OpINotEqual %bool %8613 %uint_0
       %8616 = OpBitwiseAnd %uint %7928 %uint_262144
       %8617 = OpINotEqual %bool %8616 %uint_0
       %8619 = OpAccessChain %_ptr_Uniform_TexInfo %texture_info %int_0 %8592
               OpNoLine
      %16551 = OpAccessChain %_ptr_Uniform_v4float %8619 %uint_0
      %16552 = OpLoad %v4float %16551
      %16553 = OpAccessChain %_ptr_Uniform_v4float %8619 %uint_1
      %16554 = OpLoad %v4float %16553
      %16556 = OpAccessChain %_ptr_Uniform_v2float %8619 %uint_2
      %16557 = OpLoad %v2float %16556
       %8636 = OpBitFieldUExtract %uint %7928 %int_21 %int_3
       %8637 = OpBitcast %int %8636
       %8640 = OpSGreaterThan %bool %8637 %int_0
               OpSelectionMerge %8683 None
               OpBranchConditional %8640 %8641 %8683
       %8641 = OpLabel
       %8643 = OpBitcast %int %8459
       %8644 = OpBitFieldSExtract %int %8643 %int_3 %int_12
       %8646 = OpBitFieldUExtract %uint %8459 %int_0 %int_1
       %8647 = OpINotEqual %bool %8646 %uint_0
       %8649 = OpLogicalNot %bool %8647
               OpSelectionMerge %8682 None
               OpBranchConditional %8649 %8650 %8673
       %8673 = OpLabel
       %8675 = OpBitFieldSExtract %int %8644 %int_4 %int_8
       %8676 = OpConvertSToF %float %8675
       %8678 = OpFOrdGreaterThanEqual %bool %8676 %float_0
       %8681 = OpSelect %bool %8678 %8614 %8611
               OpBranch %8682
       %8650 = OpLabel
       %8652 = OpBitFieldUExtract %uint %8459 %int_1 %int_2
       %8653 = OpBitcast %int %8652
       %8655 = OpExtInst %float %2 FAbs %8464
       %8656 = OpExtInst %float %2 Log2 %8655
       %8657 = OpFNegate %float %8656
       %8659 = OpExtInst %float %2 Ldexp %8657 %8653
       %8661 = OpConvertSToF %float %8644
       %8662 = OpFMul %float %8661 %float_0_0625
       %8663 = OpFAdd %float %8659 %8662
       %8665 = OpFMul %float %8663 %float_16
       %8666 = OpExtInst %float %2 Floor %8665
       %8667 = OpFMul %float %8666 %float_0_0625
       %8669 = OpFOrdGreaterThanEqual %bool %8663 %float_0
       %8672 = OpSelect %bool %8669 %8614 %8611
               OpBranch %8682
       %8682 = OpLabel
      %13157 = OpPhi %bool %8672 %8650 %8681 %8673
      %13155 = OpPhi %float %8667 %8650 %8676 %8673
               OpBranch %8683
       %8683 = OpLabel
      %13156 = OpPhi %bool %8611 %8602 %13157 %8682
      %13154 = OpPhi %float %float_0 %8602 %13155 %8682
       %8686 = OpConvertSToF %float %8637
       %8687 = OpExtInst %float %2 FClamp %13154 %float_0 %8686
       %8689 = OpExtInst %float %2 Floor %8687
       %8691 = OpExtInst %float %2 Ceil %8687
       %8694 = OpFSub %float %8687 %8689
       %8696 = OpSelect %uint %13156 %uint_1 %uint_0
       %8698 = OpLogicalNot %bool %8617
               OpSelectionMerge %8705 None
               OpBranchConditional %8698 %8699 %8705
       %8699 = OpLabel
       %8701 = OpFAdd %float %8687 %float_0_5
       %8702 = OpConvertFToS %int %8701
       %8703 = OpConvertSToF %float %8702
               OpBranch %8705
       %8705 = OpLabel
      %13172 = OpPhi %float %8691 %8683 %8703 %8699
      %13160 = OpPhi %float %8689 %8683 %8703 %8699
      %16529 = OpSelect %float %8698 %float_0 %8694
               OpSelectionMerge %8711 None
               OpBranchConditional %12789 %8707 %8710
       %8710 = OpLabel
               OpBranch %8711
       %8707 = OpLabel
       %8709 = OpVectorShuffle %v2float %16552 %16552 0 1
               OpBranch %8711
       %8711 = OpLabel
      %13158 = OpPhi %v2float %8709 %8707 %3377 %8710
       %8715 = OpFNegate %float %13160
       %8716 = OpConvertFToS %int %8715
       %8717 = OpCompositeConstruct %v2int %8716 %8716
       %8718 = OpExtInst %v2float %2 Ldexp %13158 %8717
       %8720 = OpVectorShuffle %v2float %16552 %16552 2 3
       %8722 = OpConvertFToS %int %13160
       %8723 = OpCompositeConstruct %v2int %8722 %8722
       %8724 = OpExtInst %v2float %2 Ldexp %8720 %8723
       %8727 = OpFMul %v2float %8456 %8718
               OpSelectionMerge %8737 None
               OpBranchConditional %8605 %8729 %8737
       %8729 = OpLabel
       %8731 = OpCompositeExtract %float %8727 0
       %8733 = OpVectorShuffle %v2float %16554 %16554 0 2
       %9092 = OpExtInst %v2float %2 Ldexp %8733 %8717
       %9093 = OpExtInst %v2float %2 Floor %9092
       %9096 = OpFAdd %v2float %9093 %16466
       %9099 = OpCompositeExtract %float %9096 0
       %9101 = OpCompositeExtract %float %9096 1
       %9102 = OpExtInst %float %2 FClamp %8731 %9099 %9101
      %10501 = OpCompositeInsert %v2float %9102 %8727 0
               OpBranch %8737
       %8737 = OpLabel
      %13161 = OpPhi %v2float %8727 %8711 %10501 %8729
               OpSelectionMerge %8747 None
               OpBranchConditional %8608 %8739 %8747
       %8739 = OpLabel
       %8741 = OpCompositeExtract %float %13161 1
       %8743 = OpVectorShuffle %v2float %16554 %16554 1 3
       %9112 = OpExtInst %v2float %2 Ldexp %8743 %8717
       %9113 = OpExtInst %v2float %2 Floor %9112
       %9116 = OpFAdd %v2float %9113 %16466
       %9119 = OpCompositeExtract %float %9116 0
       %9121 = OpCompositeExtract %float %9116 1
       %9122 = OpExtInst %float %2 FClamp %8741 %9119 %9121
      %10506 = OpCompositeInsert %v2float %9122 %13161 1
               OpBranch %8747
       %8747 = OpLabel
      %13163 = OpPhi %v2float %13161 %8737 %10506 %8739
       %8749 = OpVectorTimesScalar %v2float %13163 %float_16
       %8751 = OpFAdd %v2float %8749 %16467
       %8752 = OpExtInst %v2float %2 Floor %8751
       %8754 = OpFAdd %v2float %8752 %16467
       %8756 = OpFMul %v2float %8754 %8724
       %8757 = OpVectorTimesScalar %v2float %8756 %float_0_0625
       %8759 = OpFAdd %v2float %8757 %16557
       %8761 = OpAccessChain %_ptr_UniformConstant_3437 %bindless_textures %8592
       %8762 = OpLoad %3437 %8761
       %8764 = OpAccessChain %_ptr_UniformConstant_3445 %bindless_samplers %8696
       %8765 = OpLoad %3445 %8764
       %8766 = OpSampledImage %3453 %8762 %8765
       %8767 = OpCopyObject %3453 %8766
       %8770 = OpImageSampleExplicitLod %v4float %8767 %8759 Lod %13160
       %8777 = OpVectorTimesScalar %v4float %8770 %float_255
       %8778 = OpExtInst %v4float %2 RoundEven %8777
       %8780 = OpFUnordNotEqual %bool %16529 %float_0
               OpSelectionMerge %8859 None
               OpBranchConditional %8780 %8781 %8859
       %8781 = OpLabel
       %8784 = OpFNegate %float %13172
       %8785 = OpConvertFToS %int %8784
       %8786 = OpCompositeConstruct %v2int %8785 %8785
       %8787 = OpExtInst %v2float %2 Ldexp %13158 %8786
       %8791 = OpConvertFToS %int %13172
       %8792 = OpCompositeConstruct %v2int %8791 %8791
       %8793 = OpExtInst %v2float %2 Ldexp %8720 %8792
       %8796 = OpFMul %v2float %8456 %8787
               OpSelectionMerge %8806 None
               OpBranchConditional %8605 %8798 %8806
       %8798 = OpLabel
       %8800 = OpCompositeExtract %float %8796 0
       %8802 = OpVectorShuffle %v2float %16554 %16554 0 2
       %9132 = OpExtInst %v2float %2 Ldexp %8802 %8786
       %9133 = OpExtInst %v2float %2 Floor %9132
       %9136 = OpFAdd %v2float %9133 %16466
       %9139 = OpCompositeExtract %float %9136 0
       %9141 = OpCompositeExtract %float %9136 1
       %9142 = OpExtInst %float %2 FClamp %8800 %9139 %9141
      %10511 = OpCompositeInsert %v2float %9142 %8796 0
               OpBranch %8806
       %8806 = OpLabel
      %13173 = OpPhi %v2float %8796 %8781 %10511 %8798
               OpSelectionMerge %8816 None
               OpBranchConditional %8608 %8808 %8816
       %8808 = OpLabel
       %8810 = OpCompositeExtract %float %13173 1
       %8812 = OpVectorShuffle %v2float %16554 %16554 1 3
       %9152 = OpExtInst %v2float %2 Ldexp %8812 %8786
       %9153 = OpExtInst %v2float %2 Floor %9152
       %9156 = OpFAdd %v2float %9153 %16466
       %9159 = OpCompositeExtract %float %9156 0
       %9161 = OpCompositeExtract %float %9156 1
       %9162 = OpExtInst %float %2 FClamp %8810 %9159 %9161
      %10516 = OpCompositeInsert %v2float %9162 %13173 1
               OpBranch %8816
       %8816 = OpLabel
      %13175 = OpPhi %v2float %13173 %8806 %10516 %8808
       %8818 = OpVectorTimesScalar %v2float %13175 %float_16
       %8820 = OpFAdd %v2float %8818 %16467
       %8821 = OpExtInst %v2float %2 Floor %8820
       %8823 = OpFAdd %v2float %8821 %16467
       %8825 = OpFMul %v2float %8823 %8793
       %8826 = OpVectorTimesScalar %v2float %8825 %float_0_0625
       %8833 = OpSampledImage %3453 %8762 %8765
       %8834 = OpCopyObject %3453 %8833
       %8837 = OpImageSampleExplicitLod %v4float %8834 %8826 Lod %13172
       %8844 = OpVectorTimesScalar %v4float %8837 %float_255
       %8845 = OpExtInst %v4float %2 RoundEven %8844
       %8847 = OpFMul %float %16529 %float_16
       %8848 = OpExtInst %float %2 Floor %8847
       %8850 = OpFSub %float %float_16 %8848
       %8852 = OpVectorTimesScalar %v4float %8778 %8850
       %8855 = OpVectorTimesScalar %v4float %8845 %8848
       %8856 = OpFAdd %v4float %8852 %8855
       %8857 = OpVectorTimesScalar %v4float %8856 %float_0_0625
       %8858 = OpExtInst %v4float %2 RoundEven %8857
               OpBranch %8859
       %8859 = OpLabel
      %13181 = OpPhi %v4float %8778 %8747 %8858 %8816
               OpBranch %8861
       %8861 = OpLabel
      %13263 = OpPhi %v4float %9040 %9038 %13181 %8859
               OpSelectionMerge %8492 None
               OpSwitch %8407 %8492 1 %8468 0 %8477 2 %8482 3 %8487
       %8487 = OpLabel
       %9226 = OpFMul %v4float %8396 %13263
       %9227 = OpVectorTimesScalar %v4float %9226 %float_0_0078125
       %9228 = OpExtInst %v4float %2 Floor %9227
       %9230 = OpExtInst %v4float %2 FClamp %9228 %2886 %2888
       %9232 = OpCompositeExtract %float %8396 3
       %9234 = OpVectorShuffle %v3float %9230 %9230 0 1 2
       %9235 = OpCompositeConstruct %v3float %9232 %9232 %9232
       %9236 = OpFAdd %v3float %9234 %9235
       %9238 = OpCompositeExtract %float %9236 0
       %9240 = OpCompositeExtract %float %9236 1
       %9242 = OpCompositeExtract %float %9236 2
               OpSelectionMerge %9250 None
               OpBranchConditional %8402 %9244 %9247
       %9247 = OpLabel
               OpBranch %9250
       %9244 = OpLabel
       %9246 = OpCompositeExtract %float %13263 3
               OpBranch %9250
       %9250 = OpLabel
      %13264 = OpPhi %float %9246 %9244 %9232 %9247
      %16490 = OpCompositeConstruct %v4float %9238 %9240 %9242 %13264
       %9254 = OpExtInst %v4float %2 FClamp %16490 %2886 %2888
               OpBranch %8492
       %8482 = OpLabel
       %9187 = OpFMul %v4float %8396 %13263
       %9188 = OpVectorTimesScalar %v4float %9187 %float_0_0078125
       %9189 = OpExtInst %v4float %2 Floor %9188
       %9191 = OpExtInst %v4float %2 FClamp %9189 %2886 %2888
       %9193 = OpCompositeExtract %float %8396 3
       %9195 = OpVectorShuffle %v3float %9191 %9191 0 1 2
       %9196 = OpCompositeConstruct %v3float %9193 %9193 %9193
       %9197 = OpFAdd %v3float %9195 %9196
       %9199 = OpCompositeExtract %float %9197 0
       %9201 = OpCompositeExtract %float %9197 1
       %9203 = OpCompositeExtract %float %9197 2
               OpSelectionMerge %9214 None
               OpBranchConditional %8402 %9205 %9211
       %9211 = OpLabel
               OpBranch %9214
       %9205 = OpLabel
       %9207 = OpCompositeExtract %float %13263 3
       %9210 = OpFAdd %float %9207 %9193
               OpBranch %9214
       %9214 = OpLabel
      %13266 = OpPhi %float %9210 %9205 %9193 %9211
      %16491 = OpCompositeConstruct %v4float %9199 %9201 %9203 %13266
       %9218 = OpExtInst %v4float %2 FClamp %16491 %2886 %2888
               OpBranch %8492
       %8477 = OpLabel
       %9168 = OpFMul %v4float %8396 %13263
       %9169 = OpVectorTimesScalar %v4float %9168 %float_0_0078125
       %9170 = OpExtInst %v4float %2 Floor %9169
       %9172 = OpExtInst %v4float %2 FClamp %9170 %2886 %2888
       %9174 = OpLogicalNot %bool %8402
               OpSelectionMerge %9179 None
               OpBranchConditional %9174 %9175 %9179
       %9175 = OpLabel
       %9177 = OpCompositeExtract %float %8396 3
      %10522 = OpCompositeInsert %v4float %9177 %9172 3
               OpBranch %9179
       %9179 = OpLabel
      %13268 = OpPhi %v4float %9172 %8477 %10522 %9175
               OpBranch %8492
       %8468 = OpLabel
       %8471 = OpLogicalNot %bool %8402
               OpSelectionMerge %8476 None
               OpBranchConditional %8471 %8472 %8476
       %8472 = OpLabel
       %8474 = OpCompositeExtract %float %8396 3
      %10519 = OpCompositeInsert %v4float %8474 %13263 3
               OpBranch %8476
       %8476 = OpLabel
      %13392 = OpPhi %v4float %13263 %8468 %10519 %8472
               OpBranch %8492
       %8492 = OpLabel
      %13270 = OpPhi %v4float %13283 %8861 %13392 %8476 %13268 %9179 %9218 %9214 %9254 %9250
               OpBranch %8495
       %8495 = OpLabel
      %13269 = OpPhi %v4float %13270 %8492 %8396 %8493
               OpSelectionMerge %8537 None
               OpBranchConditional %8399 %8497 %8537
       %8497 = OpLabel
       %8499 = OpCompositeExtract %float %8349 3
       %8501 = OpCompositeExtract %float %8351 3
       %8503 = OpFMul %float %8501 %12971
       %8504 = OpFAdd %float %8499 %8503
       %8506 = OpCompositeExtract %float %8353 3
       %8508 = OpFMul %float %8506 %13062
       %8509 = OpFAdd %float %8504 %8508
       %8510 = OpExtInst %float %2 RoundEven %8509
       %8512 = OpAccessChain %_ptr_StorageBuffer_uint %primitive_attr %int_0 %11436 %int_6
       %8513 = OpLoad %uint %8512
       %8514 = OpExtInst %v4float %2 UnpackUnorm4x8 %8513
       %8515 = OpVectorShuffle %v3float %8514 %8514 0 1 2
       %8516 = OpVectorTimesScalar %v3float %8515 %float_255
       %8517 = OpExtInst %v3float %2 Round %8516
       %8519 = OpVectorShuffle %v3float %13269 %13269 0 1 2
       %8521 = OpVectorTimesScalar %v3float %8519 %8510
       %8522 = OpVectorTimesScalar %v3float %8521 %float_0_00390625
       %8523 = OpExtInst %v3float %2 Floor %8522
       %8525 = OpFSub %float %float_255 %8510
       %8527 = OpVectorTimesScalar %v3float %8517 %8525
       %8528 = OpVectorTimesScalar %v3float %8527 %float_0_00390625
       %8529 = OpExtInst %v3float %2 Floor %8528
       %8530 = OpFAdd %v3float %8523 %8529
       %8532 = OpCompositeExtract %float %8530 0
      %10550 = OpCompositeInsert %v4float %8532 %13269 0
       %8534 = OpCompositeExtract %float %8530 1
      %10552 = OpCompositeInsert %v4float %8534 %10550 1
       %8536 = OpCompositeExtract %float %8530 2
      %10554 = OpCompositeInsert %v4float %8536 %10552 2
               OpBranch %8537
       %8537 = OpLabel
      %13393 = OpPhi %v4float %13269 %8495 %10554 %8497
       %8029 = OpExtInst %v4float %2 UnpackUnorm4x8 %13192
       %8030 = OpVectorTimesScalar %v4float %8029 %float_255
       %8031 = OpExtInst %v4float %2 Round %8030
       %8033 = OpAccessChain %_ptr_StorageBuffer_uint %primitive_attr %int_0 %11436 %int_4
       %8034 = OpLoad %uint %8033
       %8037 = OpBitwiseAnd %uint %8002 %uint_2
       %8038 = OpINotEqual %bool %8037 %uint_0
       %8041 = OpBitFieldUExtract %uint %8002 %int_2 %int_3
       %8044 = OpBitFieldUExtract %uint %8002 %int_5 %int_2
       %8047 = OpBitwiseAnd %uint %8002 %uint_128
       %8048 = OpINotEqual %bool %8047 %uint_0
       %8051 = OpBitwiseAnd %uint %8002 %uint_256
       %8052 = OpINotEqual %bool %8051 %uint_0
       %8055 = OpBitwiseAnd %uint %8002 %uint_512
       %8056 = OpINotEqual %bool %8055 %uint_0
       %8059 = OpBitwiseAnd %uint %8002 %uint_1024
       %8060 = OpINotEqual %bool %8059 %uint_0
       %8063 = OpBitwiseAnd %uint %8002 %uint_524288
       %8064 = OpINotEqual %bool %8063 %uint_0
       %8067 = OpBitwiseAnd %uint %8002 %uint_1048576
       %8068 = OpINotEqual %bool %8067 %uint_0
       %8071 = OpBitwiseAnd %uint %8002 %uint_2097152
       %8072 = OpINotEqual %bool %8071 %uint_0
               OpSelectionMerge %8096 None
               OpBranchConditional %HAS_AA1 %8073 %8096
       %8073 = OpLabel
       %8076 = OpIMul %int %int_32 %11431
       %8078 = OpCompositeExtract %float %13393 3
       %8079 = OpFOrdEqual %bool %8078 %float_128
       %8081 = OpLogicalNot %bool %8056
       %8082 = OpLogicalOr %bool %8079 %8081
       %8085 = OpLogicalAnd %bool %8082 %13484
               OpSelectionMerge %8091 None
               OpBranchConditional %8085 %8087 %8091
       %8087 = OpLabel
       %8089 = OpConvertSToF %float %8076
      %10557 = OpCompositeInsert %v4float %8089 %13393 3
               OpBranch %8091
       %8091 = OpLabel
      %13597 = OpPhi %v4float %13393 %8073 %10557 %8087
      %16530 = OpSelect %bool %13484 %true %8056
               OpBranch %8096
       %8096 = OpLabel
      %13659 = OpPhi %bool %8056 %8537 %16530 %8091
      %13595 = OpPhi %v4float %13393 %8537 %13597 %8091
               OpSelectionMerge %8121 None
               OpBranchConditional %8038 %8098 %8121
       %8098 = OpLabel
       %8100 = OpBitFieldUExtract %uint %8034 %int_0 %int_8
       %8104 = OpCompositeExtract %float %13595 3
       %9263 = OpConvertUToF %float %8100
               OpSelectionMerge %9291 None
               OpSwitch %8041 %9265 0 %9266 2 %9267 3 %9271 4 %9275 5 %9279 6 %9283 7 %9287
       %9287 = OpLabel
       %9290 = OpFUnordNotEqual %bool %8104 %9263
               OpBranch %9291
       %9283 = OpLabel
       %9286 = OpFOrdGreaterThan %bool %8104 %9263
               OpBranch %9291
       %9279 = OpLabel
       %9282 = OpFOrdGreaterThanEqual %bool %8104 %9263
               OpBranch %9291
       %9275 = OpLabel
       %9278 = OpFOrdEqual %bool %8104 %9263
               OpBranch %9291
       %9271 = OpLabel
       %9274 = OpFOrdLessThanEqual %bool %8104 %9263
               OpBranch %9291
       %9267 = OpLabel
       %9270 = OpFOrdLessThan %bool %8104 %9263
               OpBranch %9291
       %9266 = OpLabel
               OpBranch %9291
       %9265 = OpLabel
               OpBranch %9291
       %9291 = OpLabel
      %13600 = OpPhi %bool %true %9265 %false %9266 %9270 %9267 %9274 %9271 %9278 %9275 %9282 %9279 %9286 %9283 %9290 %9287
       %8107 = OpLogicalNot %bool %13600
               OpSelectionMerge %8120 None
               OpBranchConditional %8107 %8108 %8120
       %8108 = OpLabel
               OpSelectionMerge %8117 None
               OpSwitch %8044 %8110 0 %8111 1 %8112 2 %8113 3 %8114
       %8114 = OpLabel
      %16531 = OpSelect %bool %is_fb_32bit %false %true
               OpBranch %8117
       %8113 = OpLabel
               OpBranch %8117
       %8112 = OpLabel
               OpBranch %8117
       %8111 = OpLabel
               OpBranch %8117
       %8110 = OpLabel
               OpBranch %8117
       %8117 = OpLabel
      %13792 = OpPhi %bool %true %8110 %true %8111 %false %8112 %true %8113 %false %8114
      %13732 = OpPhi %bool %true %8110 %true %8111 %true %8112 %false %8113 %true %8114
      %13708 = OpPhi %bool %true %8110 %true %8111 %true %8112 %false %8113 %16531 %8114
      %13601 = OpPhi %bool %false %8110 %true %8111 %false %8112 %false %8113 %false %8114
               OpSelectionMerge %8119 None
               OpBranchConditional %13601 %8288 %8119
       %8119 = OpLabel
               OpBranch %8120
       %8120 = OpLabel
      %13789 = OpPhi %bool %true %9291 %13792 %8119
      %13729 = OpPhi %bool %true %9291 %13732 %8119
      %13705 = OpPhi %bool %true %9291 %13708 %8119
               OpBranch %8121
       %8121 = OpLabel
      %13785 = OpPhi %bool %true %8096 %13789 %8120
      %13725 = OpPhi %bool %true %8096 %13729 %8120
      %13701 = OpPhi %bool %true %8096 %13705 %8120
       %8123 = OpLogicalAnd %bool %4136 %8048
               OpSelectionMerge %8135 None
               OpBranchConditional %8123 %8124 %8135
       %8124 = OpLabel
       %8126 = OpCompositeExtract %float %8031 3
       %8127 = OpFOrdGreaterThanEqual %bool %8126 %float_128
       %8128 = OpSelect %uint %8127 %uint_1 %uint_0
       %8130 = OpSelect %uint %8052 %uint_1 %uint_0
       %8132 = OpINotEqual %bool %8130 %8128
               OpSelectionMerge %8134 None
               OpBranchConditional %8132 %8133 %8134
       %8133 = OpLabel
               OpBranch %8288
       %8134 = OpLabel
               OpBranch %8135
       %8135 = OpLabel
               OpSelectionMerge %8141 None
               OpBranchConditional %8060 %8137 %8141
       %8137 = OpLabel
       %8139 = OpCompositeExtract %float %13595 3
       %8140 = OpFOrdLessThan %bool %8139 %float_128
               OpBranch %8141
       %8141 = OpLabel
       %8142 = OpPhi %bool %8060 %8135 %8140 %8137
      %16532 = OpSelect %bool %8142 %false %13659
               OpSelectionMerge %8160 None
               OpBranchConditional %16532 %8147 %8160
       %8147 = OpLabel
       %9309 = OpBitFieldUExtract %uint %8002 %int_11 %int_2
       %9311 = OpBitFieldUExtract %uint %8002 %int_13 %int_2
       %9313 = OpBitFieldUExtract %uint %8002 %int_15 %int_2
       %9315 = OpBitFieldUExtract %uint %8002 %int_17 %int_2
       %9317 = OpBitFieldUExtract %uint %8034 %int_8 %int_8
       %9318 = OpConvertUToF %float %9317
               OpSelectionMerge %9328 None
               OpSwitch %9309 %9320 0 %9321 1 %9324 2 %9327
       %9327 = OpLabel
               OpBranch %9328
       %9324 = OpLabel
       %9326 = OpVectorShuffle %v3float %8031 %8031 0 1 2
               OpBranch %9328
       %9321 = OpLabel
       %9323 = OpVectorShuffle %v3float %13595 %13595 0 1 2
               OpBranch %9328
       %9320 = OpLabel
               OpBranch %9328
       %9328 = OpLabel
      %13670 = OpPhi %v3float %3860 %9320 %9323 %9321 %9326 %9324 %3860 %9327
               OpSelectionMerge %9338 None
               OpSwitch %9311 %9330 0 %9331 1 %9334 2 %9337
       %9337 = OpLabel
               OpBranch %9338
       %9334 = OpLabel
       %9336 = OpVectorShuffle %v3float %8031 %8031 0 1 2
               OpBranch %9338
       %9331 = OpLabel
       %9333 = OpVectorShuffle %v3float %13595 %13595 0 1 2
               OpBranch %9338
       %9330 = OpLabel
               OpBranch %9338
       %9338 = OpLabel
      %13674 = OpPhi %v3float %3860 %9330 %9333 %9331 %9336 %9334 %3860 %9337
               OpSelectionMerge %9352 None
               OpSwitch %9313 %9340 0 %9341 1 %9344 2 %9350
       %9350 = OpLabel
               OpBranch %9352
       %9344 = OpLabel
               OpSelectionMerge %9349 None
               OpBranchConditional %is_fb_24bit %9345 %9346
       %9346 = OpLabel
       %9348 = OpCompositeExtract %float %8031 3
               OpBranch %9349
       %9345 = OpLabel
               OpBranch %9349
       %9349 = OpLabel
      %13681 = OpPhi %float %float_128 %9345 %9348 %9346
               OpBranch %9352
       %9341 = OpLabel
       %9343 = OpCompositeExtract %float %13595 3
               OpBranch %9352
       %9340 = OpLabel
               OpBranch %9352
       %9352 = OpLabel
      %13678 = OpPhi %float %float_0 %9340 %9343 %9341 %13681 %9349 %9318 %9350
               OpSelectionMerge %9362 None
               OpSwitch %9315 %9354 0 %9355 1 %9358 2 %9361
       %9361 = OpLabel
               OpBranch %9362
       %9358 = OpLabel
       %9360 = OpVectorShuffle %v3float %8031 %8031 0 1 2
               OpBranch %9362
       %9355 = OpLabel
       %9357 = OpVectorShuffle %v3float %13595 %13595 0 1 2
               OpBranch %9362
       %9354 = OpLabel
               OpBranch %9362
       %9362 = OpLabel
      %13682 = OpPhi %v3float %3860 %9354 %9357 %9355 %9360 %9358 %3860 %9361
       %9365 = OpFSub %v3float %13670 %13674
       %9367 = OpVectorTimesScalar %v3float %9365 %13678
       %9368 = OpVectorTimesScalar %v3float %9367 %float_0_0078125
       %9369 = OpExtInst %v3float %2 Floor %9368
       %9371 = OpFAdd %v3float %9369 %13682
       %8155 = OpCompositeExtract %float %9371 0
      %10564 = OpCompositeInsert %v4float %8155 %13595 0
       %8157 = OpCompositeExtract %float %9371 1
      %10566 = OpCompositeInsert %v4float %8157 %10564 1
       %8159 = OpCompositeExtract %float %9371 2
      %10568 = OpCompositeInsert %v4float %8159 %10566 2
               OpBranch %8160
       %8160 = OpLabel
      %13694 = OpPhi %v4float %13595 %8141 %10568 %9362
               OpSelectionMerge %8203 None
               OpBranchConditional %8072 %8162 %8203
       %8162 = OpLabel
       %8166 = OpBitwiseAnd %int %5127 %int_3
       %8170 = OpBitwiseAnd %int %5131 %int_3
       %8172 = OpIMul %int %8170 %int_4
       %8174 = OpIAdd %int %8172 %8166
       %8175 = OpIMul %int %8174 %int_4
       %8176 = OpBitwiseAnd %int %8175 %int_31
       %8178 = OpSLessThan %bool %8170 %int_2
               OpSelectionMerge %8187 None
               OpBranchConditional %8178 %8179 %8183
       %8183 = OpLabel
       %8185 = OpCompositeExtract %uint %8004 1
       %8186 = OpBitcast %int %8185
               OpBranch %8187
       %8179 = OpLabel
       %8181 = OpCompositeExtract %uint %8004 0
       %8182 = OpBitcast %int %8181
               OpBranch %8187
       %8187 = OpLabel
      %13692 = OpPhi %int %8182 %8179 %8186 %8183
       %8191 = OpBitFieldSExtract %int %13692 %8176 %int_3
       %8192 = OpConvertSToF %float %8191
       %8194 = OpVectorShuffle %v3float %13694 %13694 0 1 2
       %8195 = OpCompositeConstruct %v3float %8192 %8192 %8192
       %8196 = OpFAdd %v3float %8194 %8195
       %8198 = OpCompositeExtract %float %8196 0
      %10574 = OpCompositeInsert %v4float %8198 %13694 0
       %8200 = OpCompositeExtract %float %8196 1
      %10576 = OpCompositeInsert %v4float %8200 %10574 1
       %8202 = OpCompositeExtract %float %8196 2
      %10578 = OpCompositeInsert %v4float %8202 %10576 2
               OpBranch %8203
       %8203 = OpLabel
      %13717 = OpPhi %v4float %13694 %8160 %10578 %8187
      %16533 = OpSelect %bool %is_fb_24bit %false %13701
       %8207 = OpLogicalNot %bool %16533
               OpSelectionMerge %8212 None
               OpBranchConditional %8207 %8208 %8212
       %8208 = OpLabel
       %8210 = OpCompositeExtract %float %8031 3
      %10581 = OpCompositeInsert %v4float %8210 %13717 3
               OpBranch %8212
       %8212 = OpLabel
      %13740 = OpPhi %v4float %13717 %8203 %10581 %8208
       %8214 = OpLogicalNot %bool %13725
               OpSelectionMerge %8224 None
               OpBranchConditional %8214 %8215 %8224
       %8215 = OpLabel
       %8219 = OpCompositeExtract %float %8031 0
      %10583 = OpCompositeInsert %v4float %8219 %13740 0
       %8221 = OpCompositeExtract %float %8031 1
      %10585 = OpCompositeInsert %v4float %8221 %10583 1
       %8223 = OpCompositeExtract %float %8031 2
      %10587 = OpCompositeInsert %v4float %8223 %10585 2
               OpBranch %8224
       %8224 = OpLabel
      %13741 = OpPhi %v4float %13740 %8212 %10587 %8215
       %8226 = OpLogicalNot %bool %8064
               OpSelectionMerge %8236 None
               OpBranchConditional %8226 %8227 %8233
       %8233 = OpLabel
       %8235 = OpVectorTimesScalar %v4float %13741 %float_0_00392156886
               OpBranch %8236
       %8227 = OpLabel
       %8230 = OpFMul %v4float %13741 %16465
       %8231 = OpExtInst %v4float %2 Fract %8230
       %8232 = OpVectorTimesScalar %v4float %8231 %float_1_00392163
               OpBranch %8236
       %8236 = OpLabel
      %13742 = OpPhi %v4float %8232 %8227 %8235 %8233
       %8238 = OpExtInst %uint %2 PackUnorm4x8 %13742
       %8241 = OpLogicalAnd %bool %8068 %16533
       %8242 = OpSelect %uint %8241 %uint_1 %uint_0
       %8243 = OpShiftLeftLogical %uint %8242 %uint_31
       %8245 = OpBitwiseOr %uint %8238 %8243
       %8247 = OpAccessChain %_ptr_StorageBuffer_uint %primitive_attr %int_0 %11436 %int_5
       %8248 = OpLoad %uint %8247
       %8250 = OpINotEqual %bool %8248 %uint_4294967295
               OpSelectionMerge %8255 None
               OpBranchConditional %8250 %8251 %8255
       %8251 = OpLabel
       %8254 = OpLogicalOr %bool %13725 %16533
               OpBranch %8255
       %8255 = OpLabel
       %8256 = OpPhi %bool %8250 %8236 %8254 %8251
               OpSelectionMerge %8276 None
               OpBranchConditional %8256 %8257 %8276
       %8257 = OpLabel
       %8259 = OpINotEqual %bool %8248 %uint_0
               OpSelectionMerge %8271 None
               OpBranchConditional %8259 %8260 %8269
       %8269 = OpLabel
               OpBranch %8271
       %8260 = OpLabel
       %8263 = OpNot %uint %8248
       %8264 = OpBitwiseAnd %uint %8245 %8263
       %8267 = OpBitwiseAnd %uint %13192 %8248
       %8268 = OpBitwiseOr %uint %8264 %8267
               OpBranch %8271
       %8271 = OpLabel
      %13773 = OpPhi %uint %8268 %8260 %8245 %8269
               OpSelectionMerge %8275 None
               OpBranchConditional %is_fb_16bit %8272 %8275
       %8272 = OpLabel
       %8274 = OpBitwiseAnd %uint %13773 %uint_2163800312
               OpBranch %8275
       %8275 = OpLabel
      %16354 = OpPhi %uint %13773 %8271 %8274 %8272
               OpBranch %8276
       %8276 = OpLabel
      %16353 = OpPhi %uint %13192 %8255 %16354 %8275
      %16534 = OpSelect %bool %8256 %true %13994
       %8278 = OpLogicalAnd %bool %Z_SENSITIVE %13785
       %8281 = OpLogicalAnd %bool %8278 %13831
               OpNoLine
      %16535 = OpSelect %uint %8281 %12591 %12767
      %16536 = OpSelect %bool %8281 %true %14114
               OpBranch %8287
       %8287 = OpLabel
      %16367 = OpPhi %v4float %13283 %8016 %13393 %8276
      %16351 = OpPhi %uint %13192 %8016 %16353 %8276
      %16051 = OpPhi %uint %12767 %8016 %16535 %8276
      %14166 = OpPhi %bool %14114 %8016 %16536 %8276
      %14046 = OpPhi %bool %13994 %8016 %16534 %8276
               OpBranch %8288
       %8288 = OpLabel
      %16357 = OpPhi %v4float %13393 %8117 %13393 %8133 %16367 %8287
      %16350 = OpPhi %uint %13192 %8117 %13192 %8133 %16351 %8287
      %16008 = OpPhi %uint %12767 %8117 %12767 %8133 %16051 %8287
      %14118 = OpPhi %bool %14114 %8117 %14114 %8133 %14166 %8287
      %13998 = OpPhi %bool %13994 %8117 %13994 %8133 %14046 %8287
               OpBranch %7942
       %7942 = OpLabel
      %16356 = OpPhi %v4float %13283 %7923 %16357 %8288
      %16349 = OpPhi %uint %13192 %7923 %16350 %8288
      %16007 = OpPhi %uint %12767 %7923 %16008 %8288
      %14117 = OpPhi %bool %14114 %7923 %14118 %8288
      %13997 = OpPhi %bool %13994 %7923 %13998 %8288
      %16537 = OpSelect %bool %7936 %false %11520
               OpBranch %7943
       %7943 = OpLabel
      %16355 = OpPhi %v4float %13283 %7921 %16356 %7942
      %16348 = OpPhi %uint %13192 %7921 %16349 %7942
      %16006 = OpPhi %uint %12767 %7921 %16007 %7942
      %14628 = OpPhi %bool %11520 %7921 %16537 %7942
      %14116 = OpPhi %bool %14114 %7921 %14117 %7942
      %13996 = OpPhi %bool %13994 %7921 %13997 %7942
               OpBranch %7944
       %7944 = OpLabel
               OpBranch %7917
       %7945 = OpLabel
               OpSelectionMerge %4665 None
               OpBranchConditional %4497 %4664 %4665
       %4664 = OpLabel
       %4668 = OpSGreaterThan %bool %11524 %int_0
               OpBranch %4665
       %4665 = OpLabel
       %4669 = OpPhi %bool %4497 %7945 %4668 %4664
      %16538 = OpSelect %uint %4669 %12187 %11436
      %16539 = OpSelect %bool %4669 %12082 %false
      %16540 = OpSelect %int %4669 %11524 %int_0
      %16541 = OpSelect %bool %4669 %12019 %13484
      %16542 = OpSelect %float %4669 %11577 %13062
      %16543 = OpSelect %float %4669 %11640 %12971
      %16544 = OpSelect %bool %4669 %11829 %12880
      %16545 = OpSelect %bool %4669 %11956 %12789
      %16546 = OpSelect %bool %4669 %11893 %12680
      %16547 = OpSelect %uint %4669 %11766 %12591
      %16548 = OpSelect %bool %4669 %12134 %12502
      %16549 = OpSelect %uint %4669 %11703 %12322
               OpBranch %4661
       %4661 = OpLabel
      %14625 = OpPhi %uint %11436 %4501 %16538 %4665
      %14622 = OpPhi %bool %13831 %4501 %16539 %4665
      %14302 = OpPhi %int %11431 %4501 %16540 %4665
      %14065 = OpPhi %bool %14066 %4501 %14114 %4665
      %13945 = OpPhi %bool %13961 %4501 %13994 %4665
      %13942 = OpPhi %uint %12769 %4501 %12767 %4665
      %13539 = OpPhi %bool %13484 %4501 %16541 %4665
      %13341 = OpPhi %v4float %13300 %4501 %13283 %4665
      %13216 = OpPhi %uint %13209 %4501 %13192 %4665
      %13117 = OpPhi %float %13062 %4501 %16542 %4665
      %13026 = OpPhi %float %12971 %4501 %16543 %4665
      %12935 = OpPhi %bool %12880 %4501 %16544 %4665
      %12844 = OpPhi %bool %12789 %4501 %16545 %4665
      %12735 = OpPhi %bool %12680 %4501 %16546 %4665
      %12646 = OpPhi %uint %12591 %4501 %16547 %4665
      %12557 = OpPhi %bool %12502 %4501 %16548 %4665
      %12466 = OpPhi %uint %12426 %4501 %12410 %4665
      %12377 = OpPhi %uint %12322 %4501 %16549 %4665
               OpBranch %4492
       %4492 = OpLabel
               OpBranchConditional %4497 %4489 %4491
       %4491 = OpLabel
               OpBranch %4445
       %4445 = OpLabel
               OpBranch %4442
       %4444 = OpLabel
       %9395 = OpBitwiseAnd %uint %6436 %2372
               OpSelectionMerge %9535 None
               OpBranchConditional %SUPER_SAMPLE %9396 %9535
       %9396 = OpLabel
       %9399 = OpBitwiseAnd %uint %6436 %2382
       %9400 = OpGroupNonUniformShuffle %uint %uint_3 %10712 %9399
       %9402 = OpINotEqual %bool %9400 %10712
       %9626 = OpGroupNonUniformBallot %v4uint %uint_3 %9402
               OpSelectionMerge %9633 None
               OpBranchConditional %2331 %9627 %9633
       %9627 = OpLabel
       %9630 = OpShiftRightLogical %v4uint %9626 %16459
       %9632 = OpBitwiseOr %v4uint %9626 %9630
               OpBranch %9633
       %9633 = OpLabel
      %10723 = OpPhi %v4uint %9626 %9396 %9632 %9627
               OpSelectionMerge %9640 None
               OpBranchConditional %2339 %9634 %9640
       %9634 = OpLabel
       %9637 = OpShiftRightLogical %v4uint %10723 %16460
       %9639 = OpBitwiseOr %v4uint %10723 %9637
               OpBranch %9640
       %9640 = OpLabel
      %10724 = OpPhi %v4uint %10723 %9633 %9639 %9634
               OpSelectionMerge %9647 None
               OpBranchConditional %2347 %9641 %9647
       %9641 = OpLabel
       %9644 = OpShiftRightLogical %v4uint %10724 %16463
       %9646 = OpBitwiseOr %v4uint %10724 %9644
               OpBranch %9647
       %9647 = OpLabel
      %10725 = OpPhi %v4uint %10724 %9640 %9646 %9641
       %9650 = OpShiftRightLogical %v4uint %10725 %16464
       %9652 = OpBitwiseOr %v4uint %10725 %9650
       %9655 = OpBitwiseAnd %uint %6436 %2364
       %9656 = OpGroupNonUniformBallotBitExtract %bool %uint_3 %9652 %9655
               OpSelectionMerge %9414 None
               OpBranchConditional %Z_SENSITIVE %9405 %9414
       %9405 = OpLabel
       %9408 = OpBitwiseAnd %uint %6436 %2396
       %9409 = OpGroupNonUniformShuffle %uint %uint_3 %10729 %9408
       %9411 = OpINotEqual %bool %9409 %10729
       %9661 = OpGroupNonUniformBallot %v4uint %uint_3 %9411
               OpSelectionMerge %9668 None
               OpBranchConditional %2331 %9662 %9668
       %9662 = OpLabel
       %9665 = OpShiftRightLogical %v4uint %9661 %16459
       %9667 = OpBitwiseOr %v4uint %9661 %9665
               OpBranch %9668
       %9668 = OpLabel
      %10736 = OpPhi %v4uint %9661 %9405 %9667 %9662
               OpSelectionMerge %9675 None
               OpBranchConditional %2339 %9669 %9675
       %9669 = OpLabel
       %9672 = OpShiftRightLogical %v4uint %10736 %16460
       %9674 = OpBitwiseOr %v4uint %10736 %9672
               OpBranch %9675
       %9675 = OpLabel
      %10737 = OpPhi %v4uint %10736 %9668 %9674 %9669
               OpSelectionMerge %9682 None
               OpBranchConditional %2347 %9676 %9682
       %9676 = OpLabel
       %9679 = OpShiftRightLogical %v4uint %10737 %16463
       %9681 = OpBitwiseOr %v4uint %10737 %9679
               OpBranch %9682
       %9682 = OpLabel
      %10738 = OpPhi %v4uint %10737 %9675 %9681 %9676
       %9685 = OpShiftRightLogical %v4uint %10738 %16464
       %9687 = OpBitwiseOr %v4uint %10738 %9685
       %9691 = OpGroupNonUniformBallotBitExtract %bool %uint_3 %9687 %9655
               OpBranch %9414
       %9414 = OpLabel
      %10825 = OpPhi %bool %false %9647 %9691 %9682
       %9696 = OpGroupNonUniformBallot %v4uint %uint_3 %10743
               OpSelectionMerge %9703 None
               OpBranchConditional %2331 %9697 %9703
       %9697 = OpLabel
       %9700 = OpShiftRightLogical %v4uint %9696 %16459
       %9702 = OpBitwiseOr %v4uint %9696 %9700
               OpBranch %9703
       %9703 = OpLabel
      %10761 = OpPhi %v4uint %9696 %9414 %9702 %9697
               OpSelectionMerge %9710 None
               OpBranchConditional %2339 %9704 %9710
       %9704 = OpLabel
       %9707 = OpShiftRightLogical %v4uint %10761 %16460
       %9709 = OpBitwiseOr %v4uint %10761 %9707
               OpBranch %9710
       %9710 = OpLabel
      %10762 = OpPhi %v4uint %10761 %9703 %9709 %9704
               OpSelectionMerge %9717 None
               OpBranchConditional %2347 %9711 %9717
       %9711 = OpLabel
       %9714 = OpShiftRightLogical %v4uint %10762 %16463
       %9716 = OpBitwiseOr %v4uint %10762 %9714
               OpBranch %9717
       %9717 = OpLabel
      %10763 = OpPhi %v4uint %10762 %9710 %9716 %9711
       %9720 = OpShiftRightLogical %v4uint %10763 %16464
       %9722 = OpBitwiseOr %v4uint %10763 %9720
       %9726 = OpGroupNonUniformBallotBitExtract %bool %uint_3 %9722 %9655
               OpSelectionMerge %9477 None
               OpBranchConditional %9656 %9418 %9477
       %9418 = OpLabel
               OpSelectionMerge %9446 None
               OpBranchConditional %9726 %9420 %9446
       %9420 = OpLabel
               OpSelectionMerge %9445 None
               OpBranchConditional %is_fb_16bit %9421 %9434
       %9434 = OpLabel
       %9436 = OpIAdd %uint %9395 %uint_2
       %9437 = OpIMul %uint %9436 %VRAM_SIZE_32
       %9440 = OpBitcast %uint %5141
       %9442 = OpIAdd %uint %9440 %9437
       %9444 = OpAccessChain %_ptr_StorageBuffer_uint %vram32 %int_0 %9442
               OpStore %9444 %10712
               OpBranch %9445
       %9421 = OpLabel
       %9423 = OpIAdd %uint %9395 %uint_2
       %9424 = OpIMul %uint %9423 %VRAM_SIZE_16
       %9427 = OpBitcast %uint %5141
       %9429 = OpIAdd %uint %9427 %9424
       %9752 = OpBitcast %int %10712
       %9753 = OpCompositeConstruct %v4int %9752 %9752 %9752 %9752
       %9754 = OpShiftRightArithmetic %v4int %9753 %308
       %9755 = OpBitwiseAnd %v4int %9754 %311
       %9734 = OpShiftRightArithmetic %v4int %9755 %335
       %9736 = OpShiftLeftLogical %v4int %9734 %322
       %9738 = OpCompositeExtract %int %9736 0
       %9740 = OpCompositeExtract %int %9736 1
       %9741 = OpBitwiseOr %int %9738 %9740
       %9743 = OpCompositeExtract %int %9736 2
       %9744 = OpBitwiseOr %int %9741 %9743
       %9746 = OpCompositeExtract %int %9736 3
       %9747 = OpBitwiseOr %int %9744 %9746
       %9748 = OpBitcast %uint %9747
       %9432 = OpUConvert %ushort %9748
       %9433 = OpAccessChain %_ptr_StorageBuffer_ushort %vram16 %int_0 %9429
               OpStore %9433 %9432
               OpBranch %9445
       %9445 = OpLabel
               OpBranch %9446
       %9446 = OpLabel
       %9448 = OpExtInst %v4float %2 UnpackUnorm4x8 %10712
               OpSelectionMerge %9454 None
               OpBranchConditional %2444 %9449 %9454
       %9449 = OpLabel
       %9452 = OpGroupNonUniformShuffleXor %v4float %uint_3 %9448 %uint_8
       %9453 = OpFAdd %v4float %9448 %9452
               OpBranch %9454
       %9454 = OpLabel
      %10783 = OpPhi %v4float %9448 %9446 %9453 %9449
               OpSelectionMerge %9460 None
               OpBranchConditional %2451 %9455 %9460
       %9455 = OpLabel
       %9458 = OpGroupNonUniformShuffleXor %v4float %uint_3 %10783 %uint_4
       %9459 = OpFAdd %v4float %10783 %9458
               OpBranch %9460
       %9460 = OpLabel
      %10784 = OpPhi %v4float %10783 %9454 %9459 %9455
               OpSelectionMerge %9466 None
               OpBranchConditional %2458 %9461 %9466
       %9461 = OpLabel
       %9464 = OpGroupNonUniformShuffleXor %v4float %uint_3 %10784 %uint_2
       %9465 = OpFAdd %v4float %10784 %9464
               OpBranch %9466
       %9466 = OpLabel
      %10785 = OpPhi %v4float %10784 %9460 %9465 %9461
       %9469 = OpGroupNonUniformShuffleXor %v4float %uint_3 %10785 %uint_1
       %9470 = OpFAdd %v4float %10785 %9469
       %9471 = OpConvertSToF %float %NUM_SAMPLES
       %9473 = OpCompositeConstruct %v4float %9471 %9471 %9471 %9471
       %9474 = OpFDiv %v4float %9470 %9473
       %9476 = OpExtInst %uint %2 PackUnorm4x8 %9474
               OpBranch %9477
       %9477 = OpLabel
      %10898 = OpPhi %uint %10712 %9717 %9476 %9466
               OpSelectionMerge %9481 None
               OpBranchConditional %Z_SENSITIVE %9478 %9481
       %9478 = OpLabel
       %9760 = OpGroupNonUniformBallot %v4uint %uint_3 %10794
               OpSelectionMerge %9767 None
               OpBranchConditional %2331 %9761 %9767
       %9761 = OpLabel
       %9764 = OpShiftRightLogical %v4uint %9760 %16459
       %9766 = OpBitwiseOr %v4uint %9760 %9764
               OpBranch %9767
       %9767 = OpLabel
      %10817 = OpPhi %v4uint %9760 %9478 %9766 %9761
               OpSelectionMerge %9774 None
               OpBranchConditional %2339 %9768 %9774
       %9768 = OpLabel
       %9771 = OpShiftRightLogical %v4uint %10817 %16460
       %9773 = OpBitwiseOr %v4uint %10817 %9771
               OpBranch %9774
       %9774 = OpLabel
      %10818 = OpPhi %v4uint %10817 %9767 %9773 %9768
               OpSelectionMerge %9781 None
               OpBranchConditional %2347 %9775 %9781
       %9775 = OpLabel
       %9778 = OpShiftRightLogical %v4uint %10818 %16463
       %9780 = OpBitwiseOr %v4uint %10818 %9778
               OpBranch %9781
       %9781 = OpLabel
      %10819 = OpPhi %v4uint %10818 %9774 %9780 %9775
       %9784 = OpShiftRightLogical %v4uint %10819 %16464
       %9786 = OpBitwiseOr %v4uint %10819 %9784
       %9790 = OpGroupNonUniformBallotBitExtract %bool %uint_3 %9786 %9655
               OpBranch %9481
       %9481 = OpLabel
      %10837 = OpPhi %bool %10794 %9477 %9790 %9781
       %9483 = OpLogicalAnd %bool %Z_SENSITIVE %10825
               OpSelectionMerge %9534 None
               OpBranchConditional %9483 %9484 %9534
       %9484 = OpLabel
               OpSelectionMerge %9511 None
               OpBranchConditional %10837 %9486 %9511
       %9486 = OpLabel
               OpSelectionMerge %9510 None
               OpBranchConditional %is_zb_16bit %9487 %9499
       %9499 = OpLabel
       %9501 = OpIAdd %uint %9395 %uint_2
       %9502 = OpIMul %uint %9501 %VRAM_SIZE_32
       %9505 = OpBitcast %uint %10704
       %9507 = OpIAdd %uint %9505 %9502
       %9509 = OpAccessChain %_ptr_StorageBuffer_uint %vram32 %int_0 %9507
               OpStore %9509 %10729
               OpBranch %9510
       %9487 = OpLabel
       %9489 = OpIAdd %uint %9395 %uint_2
       %9490 = OpIMul %uint %9489 %VRAM_SIZE_16
       %9493 = OpBitcast %uint %10704
       %9495 = OpIAdd %uint %9493 %9490
       %9497 = OpUConvert %ushort %10729
       %9498 = OpAccessChain %_ptr_StorageBuffer_ushort %vram16 %int_0 %9495
               OpStore %9498 %9497
               OpBranch %9510
       %9510 = OpLabel
               OpBranch %9511
       %9511 = OpLabel
               OpSelectionMerge %9517 None
               OpBranchConditional %2513 %9512 %9517
       %9512 = OpLabel
       %9515 = OpGroupNonUniformShuffleXor %uint %uint_3 %10729 %uint_8
       %9516 = OpExtInst %uint %2 UMin %10729 %9515
               OpBranch %9517
       %9517 = OpLabel
      %10857 = OpPhi %uint %10729 %9511 %9516 %9512
               OpSelectionMerge %9523 None
               OpBranchConditional %2520 %9518 %9523
       %9518 = OpLabel
       %9521 = OpGroupNonUniformShuffleXor %uint %uint_3 %10857 %uint_4
       %9522 = OpExtInst %uint %2 UMin %10857 %9521
               OpBranch %9523
       %9523 = OpLabel
      %10858 = OpPhi %uint %10857 %9517 %9522 %9518
               OpSelectionMerge %9529 None
               OpBranchConditional %2527 %9524 %9529
       %9524 = OpLabel
       %9527 = OpGroupNonUniformShuffleXor %uint %uint_3 %10858 %uint_2
       %9528 = OpExtInst %uint %2 UMin %10858 %9527
               OpBranch %9529
       %9529 = OpLabel
      %10859 = OpPhi %uint %10858 %9523 %9528 %9524
       %9532 = OpGroupNonUniformShuffleXor %uint %uint_3 %10859 %uint_1
       %9533 = OpExtInst %uint %2 UMin %10859 %9532
               OpBranch %9534
       %9534 = OpLabel
      %10933 = OpPhi %uint %10729 %9481 %9533 %9529
               OpBranch %9535
       %9535 = OpLabel
      %10932 = OpPhi %uint %10729 %4444 %10933 %9534
      %10920 = OpPhi %bool %false %4444 %10825 %9534
      %10909 = OpPhi %bool %10794 %4444 %10837 %9534
      %10895 = OpPhi %uint %10712 %4444 %10898 %9534
      %10877 = OpPhi %bool %false %4444 %9656 %9534
      %10860 = OpPhi %bool %10743 %4444 %9726 %9534
       %9537 = OpIEqual %bool %9395 %uint_0
       %9538 = OpLogicalOr %bool %2539 %9537
       %9541 = OpLogicalAnd %bool %10860 %9538
               OpSelectionMerge %9574 None
               OpBranchConditional %9541 %9542 %9574
       %9542 = OpLabel
               OpSelectionMerge %9573 None
               OpBranchConditional %is_fb_16bit %9543 %9559
       %9559 = OpLabel
               OpSelectionMerge %9568 None
               OpBranchConditional %HAS_SUPER_SAMPLE_REFERENCE %9560 %9568
       %9560 = OpLabel
       %9563 = OpBitcast %uint %5141
       %9564 = OpIAdd %uint %9563 %VRAM_SIZE_32
       %9566 = OpSelect %uint %10877 %uint_4294967295 %uint_0
       %9567 = OpAccessChain %_ptr_StorageBuffer_uint %vram32 %int_0 %9564
               OpStore %9567 %9566
               OpBranch %9568
       %9568 = OpLabel
       %9572 = OpAccessChain %_ptr_StorageBuffer_uint %vram32 %int_0 %5141
               OpStore %9572 %10895
               OpBranch %9573
       %9543 = OpLabel
               OpSelectionMerge %9552 None
               OpBranchConditional %HAS_SUPER_SAMPLE_REFERENCE %9544 %9552
       %9544 = OpLabel
       %9547 = OpBitcast %uint %5141
       %9548 = OpIAdd %uint %9547 %VRAM_SIZE_16
       %9550 = OpSelect %ushort %10877 %ushort_65535 %ushort_0
       %9551 = OpAccessChain %_ptr_StorageBuffer_ushort %vram16 %int_0 %9548
               OpStore %9551 %9550
               OpBranch %9552
       %9552 = OpLabel
       %9816 = OpBitcast %int %10895
       %9817 = OpCompositeConstruct %v4int %9816 %9816 %9816 %9816
       %9818 = OpShiftRightArithmetic %v4int %9817 %308
       %9819 = OpBitwiseAnd %v4int %9818 %311
       %9798 = OpShiftRightArithmetic %v4int %9819 %335
       %9800 = OpShiftLeftLogical %v4int %9798 %322
       %9802 = OpCompositeExtract %int %9800 0
       %9804 = OpCompositeExtract %int %9800 1
       %9805 = OpBitwiseOr %int %9802 %9804
       %9807 = OpCompositeExtract %int %9800 2
       %9808 = OpBitwiseOr %int %9805 %9807
       %9810 = OpCompositeExtract %int %9800 3
       %9811 = OpBitwiseOr %int %9808 %9810
       %9812 = OpBitcast %uint %9811
       %9557 = OpUConvert %ushort %9812
       %9558 = OpAccessChain %_ptr_StorageBuffer_ushort %vram16 %int_0 %5141
               OpStore %9558 %9557
               OpBranch %9573
       %9573 = OpLabel
               OpBranch %9574
       %9574 = OpLabel
       %9576 = OpLogicalAnd %bool %Z_SENSITIVE %9538
               OpSelectionMerge %9621 None
               OpBranchConditional %9576 %9577 %9621
       %9577 = OpLabel
               OpSelectionMerge %9620 None
               OpBranchConditional %10909 %9579 %9620
       %9579 = OpLabel
               OpSelectionMerge %9619 None
               OpBranchConditional %is_zb_16bit %9580 %9595
       %9595 = OpLabel
               OpSelectionMerge %9604 None
               OpBranchConditional %HAS_SUPER_SAMPLE_REFERENCE %9596 %9604
       %9596 = OpLabel
       %9599 = OpBitcast %uint %10704
       %9600 = OpIAdd %uint %9599 %VRAM_SIZE_32
       %9602 = OpSelect %uint %10920 %ref %uint_0
       %9603 = OpAccessChain %_ptr_StorageBuffer_uint %vram32 %int_0 %9600
               OpStore %9603 %9602
               OpBranch %9604
       %9604 = OpLabel
               OpSelectionMerge %9618 None
               OpBranchConditional %is_zb_24bit %9605 %9613
       %9613 = OpLabel
       %9617 = OpAccessChain %_ptr_StorageBuffer_uint %vram32 %int_0 %10704
               OpStore %9617 %10932
               OpBranch %9618
       %9605 = OpLabel
       %9609 = OpCompositeConstruct %v3uint %10932 %10932 %10932
       %9610 = OpShiftRightLogical %v3uint %9609 %2631
       %9611 = OpUConvert %v3uchar %9610
       %9612 = OpAccessChain %_ptr_StorageBuffer_v3uchar %vram24 %int_0 %10704
               OpStore %9612 %9611
               OpBranch %9618
       %9618 = OpLabel
               OpBranch %9619
       %9580 = OpLabel
               OpSelectionMerge %9589 None
               OpBranchConditional %HAS_SUPER_SAMPLE_REFERENCE %9581 %9589
       %9581 = OpLabel
       %9584 = OpBitcast %uint %10704
       %9585 = OpIAdd %uint %9584 %VRAM_SIZE_16
       %9587 = OpSelect %ushort %10920 %ushort_65535 %ushort_0
       %9588 = OpAccessChain %_ptr_StorageBuffer_ushort %vram16 %int_0 %9585
               OpStore %9588 %9587
               OpBranch %9589
       %9589 = OpLabel
       %9593 = OpUConvert %ushort %10932
       %9594 = OpAccessChain %_ptr_StorageBuffer_ushort %vram16 %int_0 %10704
               OpStore %9594 %9593
               OpBranch %9619
       %9619 = OpLabel
               OpBranch %9620
       %9620 = OpLabel
               OpBranch %9621
       %9621 = OpLabel
               OpReturn
               OpFunctionEnd
