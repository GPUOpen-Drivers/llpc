;;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;
 ;  Copyright (c) 2024-2025 Advanced Micro Devices, Inc. All Rights Reserved.
 ;
 ;  Permission is hereby granted, free of charge, to any person obtaining a copy
 ;  of this software and associated documentation files (the "Software"), to
 ;  deal in the Software without restriction, including without limitation the
 ;  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 ;  sell copies of the Software, and to permit persons to whom the Software is
 ;  furnished to do so, subject to the following conditions:
 ;
 ;  The above copyright notice and this permission notice shall be included in all
 ;  copies or substantial portions of the Software.
 ;
 ;  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ;  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ;  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 ;  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 ;  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 ;  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 ;  IN THE SOFTWARE.
 ;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



; BEGIN_SHADERTEST
; RUN: amdllpc -v %gfxip %s | FileCheck -check-prefix=SHADERTEST %s
; SHADERTEST-LABEL: {{^// LLPC}} SPIRV-to-LLVM translation results
; SHADERTEST: AMDLLPC SUCCESS
; END_SHADERTEST

; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 1
; Bound: 42
; Schema: 0
               OpCapability Shader
               OpCapability Float64
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %4 "main" %22
               OpExecutionMode %4 OriginUpperLeft
               OpSource GLSL 450
               OpName %4 "main"
               OpName %9 "b1_1"
               OpName %13 "i1_1"
               OpName %17 "d1_1"
               OpName %22 "fragColor"
               OpDecorate %22 Location 0
          %2 = OpTypeVoid
          %3 = OpTypeFunction %2
          %7 = OpTypeBool
          %8 = OpTypePointer Function %7
         %10 = OpConstantNull %7
         %11 = OpTypeInt 32 1
         %12 = OpTypePointer Function %11
         %14 = OpConstantNull %11
         %15 = OpTypeFloat 64
         %16 = OpTypePointer Function %15
         %18 = OpConstantNull %15
         %19 = OpTypeFloat 32
         %20 = OpTypeVector %19 4
         %21 = OpTypePointer Output %20
         %22 = OpVariable %21 Output
         %23 = OpTypePointer Function %20
         %27 = OpConstant %11 1
         %31 = OpConstant %15 1
         %36 = OpConstant %19 1
         %37 = OpConstantComposite %20 %36 %36 %36 %36
         %39 = OpConstant %19 0
         %40 = OpConstantComposite %20 %39 %39 %39 %39
          %4 = OpFunction %2 None %3
          %5 = OpLabel
          %9 = OpVariable %8 Function
         %13 = OpVariable %12 Function
         %17 = OpVariable %16 Function
         %24 = OpVariable %23 Function
               OpStore %9 %10
               OpStore %13 %14
               OpStore %17 %18
         %25 = OpLoad %7 %9
         %26 = OpLoad %11 %13
         %28 = OpINotEqual %7 %26 %27
         %29 = OpLogicalAnd %7 %25 %28
         %30 = OpLoad %15 %17
         %32 = OpFOrdEqual %7 %30 %31
         %33 = OpLogicalAnd %7 %29 %32
               OpSelectionMerge %35 None
               OpBranchConditional %33 %34 %38
         %34 = OpLabel
               OpStore %24 %37
               OpBranch %35
         %38 = OpLabel
               OpStore %24 %40
               OpBranch %35
         %35 = OpLabel
         %41 = OpLoad %20 %24
               OpStore %22 %41
               OpBranch %6
          %6 = OpLabel
               OpReturn
               OpFunctionEnd
