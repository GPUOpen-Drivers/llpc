// NOTE: Assertions have been autogenerated by tool/update_llpc_test_checks.py
// RUN: amdllpc -o - -gfxip 11.0 -emit-lgc %s | FileCheck -check-prefixes=CHECK %s

#version 450 core

layout(location = 0) in vec4 colorIn1;
layout(location = 1) in vec4 colorIn2;
layout(location = 0) out vec4 color;
void main()
{
    bvec4 x = lessThan (ivec4(colorIn1), ivec4(colorIn2));
    color = vec4(x);
}

// CHECK-LABEL: @lgc.shader.FS.main(
// CHECK-NEXT:  .entry:
// CHECK-NEXT:    [[TMP0:%.*]] = call <4 x float> (...) @lgc.create.read.generic.input.v4f32(i32 1, i32 0, i32 0, i32 0, i32 16, i32 poison)
// CHECK-NEXT:    [[TMP1:%.*]] = call <4 x float> (...) @lgc.create.read.generic.input.v4f32(i32 0, i32 0, i32 0, i32 0, i32 16, i32 poison)
// CHECK-NEXT:    [[TMP2:%.*]] = fptosi <4 x float> [[TMP1]] to <4 x i32>
// CHECK-NEXT:    [[TMP3:%.*]] = fptosi <4 x float> [[TMP0]] to <4 x i32>
// CHECK-NEXT:    [[TMP4:%.*]] = extractelement <4 x i32> [[TMP2]], i64 0
// CHECK-NEXT:    [[TMP5:%.*]] = extractelement <4 x i32> [[TMP3]], i64 0
// CHECK-NEXT:    [[TMP6:%.*]] = icmp slt i32 [[TMP4]], [[TMP5]]
// CHECK-NEXT:    [[TMP7:%.*]] = extractelement <4 x i32> [[TMP2]], i64 1
// CHECK-NEXT:    [[TMP8:%.*]] = extractelement <4 x i32> [[TMP3]], i64 1
// CHECK-NEXT:    [[TMP9:%.*]] = icmp slt i32 [[TMP7]], [[TMP8]]
// CHECK-NEXT:    [[TMP10:%.*]] = extractelement <4 x i32> [[TMP2]], i64 2
// CHECK-NEXT:    [[TMP11:%.*]] = extractelement <4 x i32> [[TMP3]], i64 2
// CHECK-NEXT:    [[TMP12:%.*]] = icmp slt i32 [[TMP10]], [[TMP11]]
// CHECK-NEXT:    [[TMP13:%.*]] = extractelement <4 x i32> [[TMP2]], i64 3
// CHECK-NEXT:    [[TMP14:%.*]] = extractelement <4 x i32> [[TMP3]], i64 3
// CHECK-NEXT:    [[TMP15:%.*]] = icmp slt i32 [[TMP13]], [[TMP14]]
// CHECK-NEXT:    [[TMP16:%.*]] = select reassoc nnan nsz arcp contract afn i1 [[TMP6]], float 1.000000e+00, float 0.000000e+00
// CHECK-NEXT:    [[TMP17:%.*]] = insertelement <4 x float> poison, float [[TMP16]], i64 0
// CHECK-NEXT:    [[TMP18:%.*]] = select reassoc nnan nsz arcp contract afn i1 [[TMP9]], float 1.000000e+00, float 0.000000e+00
// CHECK-NEXT:    [[TMP19:%.*]] = insertelement <4 x float> [[TMP17]], float [[TMP18]], i64 1
// CHECK-NEXT:    [[TMP20:%.*]] = select reassoc nnan nsz arcp contract afn i1 [[TMP12]], float 1.000000e+00, float 0.000000e+00
// CHECK-NEXT:    [[TMP21:%.*]] = insertelement <4 x float> [[TMP19]], float [[TMP20]], i64 2
// CHECK-NEXT:    [[TMP22:%.*]] = select reassoc nnan nsz arcp contract afn i1 [[TMP15]], float 1.000000e+00, float 0.000000e+00
// CHECK-NEXT:    [[TMP23:%.*]] = insertelement <4 x float> [[TMP21]], float [[TMP22]], i64 3
// CHECK-NEXT:    call void (...) @lgc.create.write.generic.output(<4 x float> [[TMP23]], i32 0, i32 0, i32 0, i32 0, i32 0, i32 poison)
// CHECK-NEXT:    ret void
//
