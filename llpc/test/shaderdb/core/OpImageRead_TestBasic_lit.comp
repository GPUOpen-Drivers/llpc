#version 450 core

layout(set = 0, binding = 0, rgba8) uniform image2D img2D;
layout(set = 0, binding = 1, rgba8) uniform image1D img1D;
layout(set = 0, binding = 2, rgba8) uniform image3D img3D;
layout(set = 0, binding = 3, rgba8) uniform image1DArray img1DArray;
layout(set = 0, binding = 4, rgba8) uniform image2DArray img2DArray;
layout(set = 0, binding = 5, rgba8) uniform image2DRect img2DRect;

layout(set = 1, binding = 0) buffer BO
{
    vec4 mOut;
};

void main()
{
    mOut  = imageLoad(img2D,        ivec2(0, 0));
    mOut += imageLoad(img1D,        0);
    mOut += imageLoad(img3D,        ivec3(0, 0, 0));
    mOut += imageLoad(img1DArray,   ivec2(0, 0));
    mOut += imageLoad(img2DArray,   ivec3(0, 0, 0));
    mOut += imageLoad(img2DRect,    ivec2(0, 0));
}

// BEGIN_SHADERTEST
/*
; RUN: amdllpc -v %gfxip %s | FileCheck -check-prefix=SHADERTEST %s
; SHADERTEST-LABEL: {{^// LLPC}} SPIRV-to-LLVM translation results
; SHADERTEST-LABEL: {{^// LLPC}}  SPIR-V lowering results
; SHADERTEST: call {{.*}} @lgc.create.get.desc.ptr.p4(i32 1, i32 1, i64 0, i32 5)
; SHADERTEST: call {{.*}} @lgc.create.get.desc.ptr.p4(i32 1, i32 1, i64 0, i32 4)
; SHADERTEST: call {{.*}} @lgc.create.get.desc.ptr.p4(i32 1, i32 1, i64 0, i32 3)
; SHADERTEST: call {{.*}} @lgc.create.get.desc.ptr.p4(i32 1, i32 1, i64 0, i32 2)
; SHADERTEST: call {{.*}} @lgc.create.get.desc.ptr.p4(i32 1, i32 1, i64 0, i32 1)
; SHADERTEST: call {{.*}} @lgc.create.get.desc.ptr.p4(i32 1, i32 1, i64 0, i32 0)
; SHADERTEST: call {{.*}} @lgc.create.image.load.v4f32(i32 1, i32 512, {{.*}}, <2 x i32> zeroinitializer)
; SHADERTEST: call {{.*}} @lgc.create.image.load.v4f32(i32 0, i32 512, {{.*}}, i32 0)
; SHADERTEST: call {{.*}} @lgc.create.image.load.v4f32(i32 2, i32 512, {{.*}}, <3 x i32> zeroinitializer)
; SHADERTEST: call {{.*}} @lgc.create.image.load.v4f32(i32 4, i32 512, {{.*}}, <2 x i32> zeroinitializer)
; SHADERTEST: call {{.*}} @lgc.create.image.load.v4f32(i32 5, i32 512, {{.*}}, <3 x i32> zeroinitializer)
; SHADERTEST: call {{.*}} @lgc.create.image.load.v4f32(i32 9, i32 512, {{.*}}, <2 x i32> zeroinitializer)

; SHADERTEST-LABEL: {{^// LLPC}}  pipeline patching results
; SHADERTEST: call {{.*}} <4 x float> @llvm.amdgcn.image.load.2d.v4f32.i16(i32 15, i16 0, i16 0, <8 x i32> %{{.*}}, i32 0, i32 0)
; SHADERTEST: call {{.*}} <4 x float> @llvm.amdgcn.image.load.1d.v4f32.i16(i32 15, i16 0, <8 x i32> %{{.*}}, i32 0, i32 0)
; SHADERTEST: call {{.*}} <4 x float> @llvm.amdgcn.image.load.3d.v4f32.i16(i32 15, i16 0, i16 0, i16 0, <8 x i32> %{{.*}}, i32 0, i32 0)
; SHADERTEST: call {{.*}} <4 x float> @llvm.amdgcn.image.load.1darray.v4f32.i16(i32 15, i16 0, i16 0, <8 x i32> %{{.*}}, i32 0, i32 0)
; SHADERTEST: call {{.*}} <4 x float> @llvm.amdgcn.image.load.2darray.v4f32.i16(i32 15, i16 0, i16 0, i16 0, <8 x i32> %{{.*}}, i32 0, i32 0)
; SHADERTEST: call {{.*}} <4 x float> @llvm.amdgcn.image.load.2d.v4f32.i16(i32 15, i16 0, i16 0, <8 x i32> %{{.*}}, i32 0, i32 0)
; SHADERTEST: AMDLLPC SUCCESS
*/
// END_SHADERTEST
