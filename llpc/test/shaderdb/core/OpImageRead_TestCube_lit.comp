#version 450 core

layout(set = 0, binding = 0, rgba8) uniform imageCube imgCube;
layout(set = 0, binding = 1, rgba8) uniform imageCubeArray imgCubeArray;

layout(set = 1, binding = 0) buffer BO
{
    vec4 mOut;
};

void main()
{
    vec4 temp1 = imageLoad(imgCube, ivec3(0, 0, 6));
    vec4 temp2 = imageLoad(imgCubeArray, ivec3(0, 0, 6));
    mOut = temp1 + temp2;
}

// BEGIN_SHADERTEST
/*
; RUN: amdllpc -v %gfxip %s | FileCheck -check-prefix=SHADERTEST %s
; SHADERTEST-LABEL: {{^// LLPC}} SPIRV-to-LLVM translation results
; SHADERTEST-LABEL: {{^// LLPC}}  SPIR-V lowering results
; SHADERTEST: call {{.*}} @lgc.create.get.desc.ptr.p4(i32 1, i32 1, i64 0, i32 1)
; SHADERTEST: call {{.*}} @lgc.create.get.desc.ptr.p4(i32 1, i32 1, i64 0, i32 0)
; SHADERTEST: call {{.*}} @lgc.create.image.load.v4f32(i32 3, i32 512, {{.*}}, <3 x i32> <i32 0, i32 0, i32 6>)
; SHADERTEST: call {{.*}} @lgc.create.image.load.v4f32(i32 8, i32 512, {{.*}}, <4 x i32> <i32 0, i32 0, i32 0, i32 1>)

; SHADERTEST-LABEL: {{^// LLPC}}  pipeline patching results
; SHADERTEST: call {{.*}} <4 x float> @llvm.amdgcn.image.load.cube.v4f32.i16(i32 15, i16 0, i16 0, i16 6, <8 x i32> %{{.*}}, i32 0, i32 0)
; SHADERTEST: AMDLLPC SUCCESS
*/
// END_SHADERTEST
