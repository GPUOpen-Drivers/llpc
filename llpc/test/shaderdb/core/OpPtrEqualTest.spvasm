; NOTE: Assertions have been autogenerated by tool/update_llpc_test_checks.py
; RUN: amdllpc -emit-lgc -gfxip 10.3 -o - %s | FileCheck -check-prefix=SHADERTEST %s

; SPIR-V
; Version: 1.4
; Generator: Khronos SPIR-V Tools Assembler; 0
; Bound: 59
; Schema: 0
               OpCapability Shader
               OpCapability VariablePointersStorageBuffer
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %1 "main" %2 %4
               OpExecutionMode %1 LocalSize 1 1 1
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpDecorate %_struct_5 Block
               OpDecorate %_struct_6 Block
               OpMemberDecorate %_struct_5 0 ColMajor
               OpMemberDecorate %_struct_5 0 Offset 0
               OpMemberDecorate %_struct_5 0 MatrixStride 16
               OpMemberDecorate %_struct_5 1 RowMajor
               OpMemberDecorate %_struct_5 1 Offset 64
               OpMemberDecorate %_struct_5 1 MatrixStride 16
               OpMemberDecorate %_struct_5 2 RowMajor
               OpMemberDecorate %_struct_5 2 Offset 128
               OpMemberDecorate %_struct_5 2 MatrixStride 16
               OpMemberDecorate %_struct_5 3 Offset 192
               OpMemberDecorate %_struct_5 4 Offset 196
               OpMemberDecorate %_struct_6 0 Offset 0
               OpDecorate %2 DescriptorSet 0
               OpDecorate %2 Binding 0
               OpDecorate %4 DescriptorSet 0
               OpDecorate %4 Binding 2
       %void = OpTypeVoid
       %bool = OpTypeBool
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
     %uint_2 = OpConstant %uint 2
     %uint_3 = OpConstant %uint 3
     %uint_4 = OpConstant %uint 4
      %float = OpTypeFloat 32
%_runtimearr_uint = OpTypeRuntimeArray %uint
    %v4float = OpTypeVector %float 4
%mat4v4float = OpTypeMatrix %v4float 4
  %_struct_5 = OpTypeStruct %mat4v4float %mat4v4float %mat4v4float %float %float
  %_struct_6 = OpTypeStruct %_runtimearr_uint
%_ptr_StorageBuffer__struct_5 = OpTypePointer StorageBuffer %_struct_5
%_ptr_StorageBuffer__struct_6 = OpTypePointer StorageBuffer %_struct_6
%_ptr_StorageBuffer_mat4v4float = OpTypePointer StorageBuffer %mat4v4float
%_ptr_StorageBuffer_uint = OpTypePointer StorageBuffer %uint
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
%_ptr_StorageBuffer_v4float = OpTypePointer StorageBuffer %v4float
          %2 = OpVariable %_ptr_StorageBuffer__struct_5 StorageBuffer
          %4 = OpVariable %_ptr_StorageBuffer__struct_6 StorageBuffer
         %24 = OpTypeFunction %void
          %1 = OpFunction %void None %24
         %25 = OpLabel
         %26 = OpCopyObject %uint %uint_0
         %27 = OpAccessChain %_ptr_StorageBuffer_float %2 %uint_3
         %28 = OpAccessChain %_ptr_StorageBuffer_float %2 %uint_4
         %31 = OpAccessChain %_ptr_StorageBuffer_mat4v4float %2 %uint_0
         %32 = OpAccessChain %_ptr_StorageBuffer_mat4v4float %2 %uint_1
         %34 = OpAccessChain %_ptr_StorageBuffer_mat4v4float %2 %uint_1
         %35 = OpAccessChain %_ptr_StorageBuffer_mat4v4float %2 %uint_2
         %36 = OpPtrEqual %bool %27 %28
         %37 = OpSelect %uint %36 %uint_0 %uint_1
         %38 = OpAccessChain %_ptr_StorageBuffer_uint %4 %uint_0 %26
         %39 = OpIAdd %uint %26 %uint_1
               OpStore %38 %37
         %55 = OpPtrEqual %bool %31 %32
         %56 = OpSelect %uint %55 %uint_0 %uint_1
         %57 = OpAccessChain %_ptr_StorageBuffer_uint %4 %uint_0 %39
         %58 = OpIAdd %uint %39 %uint_1
               OpStore %57 %56
         %60 = OpPtrEqual %bool %34 %35
         %61 = OpSelect %uint %60 %uint_0 %uint_1
         %62 = OpAccessChain %_ptr_StorageBuffer_uint %4 %uint_0 %58
         %63 = OpIAdd %uint %58 %uint_1
               OpStore %62 %61
         %70 = OpPtrEqual %bool %32 %32
         %71 = OpSelect %uint %70 %uint_0 %uint_1
         %72 = OpAccessChain %_ptr_StorageBuffer_uint %4 %uint_0 %63
         %73 = OpIAdd %uint %63 %uint_1
               OpStore %72 %71
               OpReturn
               OpFunctionEnd

; SHADERTEST-LABEL: @lgc.shader.CS.main(
; SHADERTEST-NEXT:  .entry:
; SHADERTEST-NEXT:    [[TMP0:%.*]] = call ptr addrspace(7) @lgc.load.buffer.desc(i64 0, i32 2, i32 0, i32 2)
; SHADERTEST-NEXT:    store i32 1, ptr addrspace(7) [[TMP0]], align 4
; SHADERTEST-NEXT:    [[TMP1:%.*]] = getelementptr {{i8|<{ [[]4294967295 x i32] }>}}, ptr addrspace(7) [[TMP0]], i32 {{4|0, i32 0, i32 1}}
; SHADERTEST-NEXT:    store i32 1, ptr addrspace(7) [[TMP1]], align 4
; SHADERTEST-NEXT:    [[TMP2:%.*]] = getelementptr {{i8|<{ [[]4294967295 x i32] }>}}, ptr addrspace(7) [[TMP0]], i32 {{8|0, i32 0, i32 2}}
; SHADERTEST-NEXT:    store i32 1, ptr addrspace(7) [[TMP2]], align 4
; SHADERTEST-NEXT:    [[TMP3:%.*]] = getelementptr {{i8|<{ [[]4294967295 x i32] }>}}, ptr addrspace(7) [[TMP0]], i32 {{12|0, i32 0, i32 3}}
; SHADERTEST-NEXT:    store i32 0, ptr addrspace(7) [[TMP3]], align 4
; SHADERTEST-NEXT:    ret void
;
