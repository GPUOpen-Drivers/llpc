;;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;
 ;  Copyright (c) 2024-2025 Advanced Micro Devices, Inc. All Rights Reserved.
 ;
 ;  Permission is hereby granted, free of charge, to any person obtaining a copy
 ;  of this software and associated documentation files (the "Software"), to
 ;  deal in the Software without restriction, including without limitation the
 ;  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 ;  sell copies of the Software, and to permit persons to whom the Software is
 ;  furnished to do so, subject to the following conditions:
 ;
 ;  The above copyright notice and this permission notice shall be included in all
 ;  copies or substantial portions of the Software.
 ;
 ;  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ;  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ;  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 ;  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 ;  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 ;  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 ;  IN THE SOFTWARE.
 ;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; BEGIN_SHADERTEST
; RUN: amdllpc -v %gfxip %s | FileCheck -check-prefix=SHADERTEST %s
; SHADERTEST-LABEL: {{^// LLPC}} SPIRV-to-LLVM translation results
; SHADERTEST: %{{[0-9]+}} = call i32 (...) @lgc.create.integer.dot.product.i32(<4 x i16> %{{[0-9]+}}, <4 x i16> %{{[0-9]+}}, i32 {{[0-9]+}}, i32 0)
; SHADERTEST-LABEL: {{^// LLPC}} LGC before-lowering results
; SHADERTEST: %{{[0-9]+}} = call i32 @llvm.uadd.sat.i32(i32 %{{[0-9]+}}, i32 {{[0-9]+}})
; SHADERTEST: AMDLLPC SUCCESS
; END_SHADERTEST

; SPIR-V
; Version: 1.0
; Generator: Khronos SPIR-V Tools Assembler; 0
; Bound: 58
; Schema: 0
               OpCapability Shader
               OpCapability Int16
               OpCapability DotProductKHR
               OpExtension "SPV_KHR_integer_dot_product"
          %2 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %a0 %b0 %color
               OpExecutionMode %main OriginUpperLeft
               OpName %main "main"
               OpName %c "c"
               OpName %a0 "a0"
               OpName %b0 "b0"
               OpName %color "color"
               OpDecorate %a0 Location 0
               OpDecorate %b0 Location 10
               OpDecorate %color Location 0
       %void = OpTypeVoid
          %4 = OpTypeFunction %void
        %int = OpTypeInt 32 0
      %v4int = OpTypeVector %int 4
        %int16 = OpTypeInt 16 0
      %v4int16 = OpTypeVector %int16 4
%_ptr_Function_v4int = OpTypePointer Function %v4int
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Input_v4float = OpTypePointer Input %v4float
         %a0 = OpVariable %_ptr_Input_v4float Input
         %b0 = OpVariable %_ptr_Input_v4float Input
%_ptr_Output_v4float = OpTypePointer Output %v4float
      %color = OpVariable %_ptr_Output_v4float Output
      %5 = OpConstant %int 88
       %main = OpFunction %void None %4
          %6 = OpLabel
          %c = OpVariable %_ptr_Function_v4int Function
         %15 = OpLoad %v4float %a0
         %16 = OpConvertFToU %v4int %15
         %17 = OpUConvert %v4int16 %16
         %18 = OpLoad %v4float %b0
         %19 = OpConvertFToU %v4int %18
         %20 = OpSConvert %v4int16 %19
         %21 = OpUDotAccSatKHR %int %17 %20 %5
         %23 = OpCompositeConstruct %v4int %21 %21 %21 %21
               OpStore %c %23
         %24 = OpLoad %v4int %c
         %25 = OpConvertSToF %v4float %24
               OpStore %color %25
               OpReturn
               OpFunctionEnd
