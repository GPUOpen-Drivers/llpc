
;;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;
 ;  Copyright (c) 2024-2025 Advanced Micro Devices, Inc. All Rights Reserved.
 ;
 ;  Permission is hereby granted, free of charge, to any person obtaining a copy
 ;  of this software and associated documentation files (the "Software"), to
 ;  deal in the Software without restriction, including without limitation the
 ;  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 ;  sell copies of the Software, and to permit persons to whom the Software is
 ;  furnished to do so, subject to the following conditions:
 ;
 ;  The above copyright notice and this permission notice shall be included in all
 ;  copies or substantial portions of the Software.
 ;
 ;  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ;  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ;  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 ;  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 ;  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 ;  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 ;  IN THE SOFTWARE.
 ;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; BEGIN_SHADERTEST
; RUN: amdllpc -v %gfxip %s | FileCheck -check-prefix=SHADERTEST %s
; SHADERTEST-LABEL: {{^// LLPC}} SPIRV-to-LLVM translation results
; SHADERTEST: AMDLLPC SUCCESS
; END_SHADERTEST

; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 1
; Bound: 35
; Schema: 0
               OpCapability Shader
               OpCapability Float64
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %4 "main" %22
               OpExecutionMode %4 OriginLowerLeft
               OpSource GLSL 450
               OpName %4 "main"
               OpName %10 "d4_1"
               OpName %11 "Uniforms"
               OpMemberName %11 0 "d4_0"
               OpName %22 "fragColor"
               OpMemberDecorate %11 0 Offset 0
               OpDecorate %11 Block
               OpDecorate %26 DescriptorSet 0
               OpDecorate %26 Binding 0
               OpDecorate %22 Location 0
          %2 = OpTypeVoid
          %3 = OpTypeFunction %2
          %7 = OpTypeFloat 64
          %8 = OpTypeVector %7 4
          %9 = OpTypePointer Uniform %8
          %34 = OpTypePointer Function %8
         %11 = OpTypeStruct %8
         %12 = OpTypePointer Uniform %11
         %26 = OpVariable %12 Uniform
         %27 = OpTypeInt 32 1
         %28 = OpConstant %27 0
         %31 = OpConstant %27 0
         %15 = OpTypeVector %7 2
         %19 = OpTypeFloat 32
         %20 = OpTypeVector %19 4
         %21 = OpTypePointer Output %20
         %22 = OpVariable %21 Output
          %4 = OpFunction %2 None %3
          %5 = OpLabel
         %10 = OpVariable %34 Function
         %13 = OpAccessChain %9 %26 %31
         %32 = OpLoad %8 %13
               OpStore %10 %32
         %14 = OpLoad %8 %10
         %16 = OpVectorShuffle %15 %14 %14 3 4294967295
         %17 = OpLoad %8 %10
         %18 = OpVectorShuffle %8 %17 %16 4 5 2 3
               OpStore %10 %18
         %23 = OpLoad %8 %10
         %24 = OpFConvert %20 %23
               OpStore %22 %24
               OpBranch %6
          %6 = OpLabel
               OpReturn
               OpFunctionEnd
