; BEGIN_SHADERTEST
; RUN: amdllpc -v %gfxip %s \ 
; RUN:   --override-threadGroupSizeX=16 --override-threadGroupSizeY=16 --override-threadGroupSizeZ=1 \
; RUN: | FileCheck -check-prefix=SHADERTEST %s
; SHADERTEST-LABEL: {{^// LLPC}} pipeline before-patching results
; SHADERTEST: !llpc.compute.mode = !{!0}
; SHADERTEST: !0 = !{i32 16, i32 16, i32 1}
; SHADERTEST: AMDLLPC SUCCESS
; END_SHADERTESTTEST

; SPIR-V
; Version: 1.5
; Generator: Khronos SPIR-V Tools Assembler; 0
; Bound: 58
; Schema: 0
                OpCapability Shader
                OpCapability VariablePointers
                OpExtension "SPV_KHR_variable_pointers"
                OpMemoryModel Logical GLSL450
                OpEntryPoint GLCompute %main "main" %wg_var %diff_var %lid_var %gid_var
                OpExecutionMode %main LocalSize 16 4 1

                OpDecorate %struct_17 Block
                OpMemberDecorate %struct_17 0 Offset 0
                OpDecorate %runtime_17 ArrayStride 68
                OpDecorate %array_17 ArrayStride 4

                OpDecorate %diff_var DescriptorSet 0
                OpDecorate %diff_var Binding 0

                OpDecorate %lid_var BuiltIn LocalInvocationId
                OpDecorate %gid_var BuiltIn GlobalInvocationId

        %void = OpTypeVoid
        %bool = OpTypeBool
         %int = OpTypeInt 32 1
       %int_0 = OpConstant %int 0
       %int_1 = OpConstant %int 1
       %int_4 = OpConstant %int 4
      %int_16 = OpConstant %int 16
      %int_17 = OpConstant %int 17
      %int_64 = OpConstant %int 64
        %int3 = OpTypeVector %int 3

%ptr_input_int3 = OpTypePointer Input %int3

     %array_4 = OpTypeArray %int %int_4
%array_array_4 = OpTypeArray %array_4 %int_16
%ptr_array_array_4 = OpTypePointer Workgroup %array_array_4
%ptr_array_4 = OpTypePointer Workgroup %array_4
 %ptr_wg_int = OpTypePointer Workgroup %int

    %array_17 = OpTypeArray %int %int_17
  %runtime_17 = OpTypeRuntimeArray %array_17
   %struct_17 = OpTypeStruct %runtime_17
%ptr_struct_17 = OpTypePointer StorageBuffer %struct_17
%ptr_array_17 = OpTypePointer StorageBuffer %array_17
     %ptr_int = OpTypePointer StorageBuffer %int

      %wg_var = OpVariable %ptr_array_array_4 Workgroup
    %diff_var = OpVariable %ptr_struct_17 StorageBuffer
     %lid_var = OpVariable %ptr_input_int3 Input
     %gid_var = OpVariable %ptr_input_int3 Input

     %void_fn = OpTypeFunction %void
        %main = OpFunction %void None %void_fn
       %entry = OpLabel
         %gid = OpLoad %int3 %gid_var
       %gid_x = OpCompositeExtract %int %gid 0
       %gid_y = OpCompositeExtract %int %gid 1
         %lid = OpLoad %int3 %lid_var
       %lid_x = OpCompositeExtract %int %lid 0
       %lid_y = OpCompositeExtract %int %lid 1
 %array_gep_0 = OpAccessChain %ptr_array_4 %wg_var %int_0
   %array_gep = OpAccessChain %ptr_array_4 %wg_var %lid_x
  %lid_y_is_1 = OpIEqual %bool %lid_y %int_1
                OpSelectionMerge %loop None
                OpBranchConditional %lid_y_is_1 %then %loop

        %then = OpLabel
                ; Compute results for outer array
  %large_diff = OpPtrDiff %int %array_gep %array_gep_0
%large_diff_gep = OpAccessChain %ptr_int %diff_var %int_0 %gid_x %int_16
                OpStore %large_diff_gep %large_diff
                ;
                OpBranch %loop

        %loop = OpLabel
           %i = OpPhi %int %int_0 %entry %int_0 %then %inc_i %loop
       %inc_i = OpIAdd %int %i %int_1
       %i_cmp = OpIEqual %bool %inc_i %int_4
  %lid_offset = OpIMul %int %lid_y %int_4
%out_gep_index = OpIAdd %int %i %lid_offset
                ; Compute results for inner array
     %ref_gep = OpAccessChain %ptr_wg_int %array_gep %lid_y
     %cmp_gep = OpAccessChain %ptr_wg_int %array_gep %i
        %diff = OpPtrDiff %int %ref_gep %cmp_gep
    %diff_gep = OpAccessChain %ptr_int %diff_var %int_0 %gid_x %out_gep_index
                OpStore %diff_gep %diff
                ;
                OpLoopMerge %exit %loop None
                OpBranchConditional %i_cmp %exit %loop
        %exit = OpLabel
                OpReturn
                OpFunctionEnd
