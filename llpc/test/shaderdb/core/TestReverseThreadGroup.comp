#version 450

layout(local_size_x = 16, local_size_y = 16) in;

layout(binding = 0) buffer Buffers
{
    uvec3 test;
};

void main()
{
    test = gl_WorkGroupID;
}

// BEGIN_REVERSETEST
// RUN: amdllpc -v %gfxip %s --reverse-thread-group=1 | FileCheck -check-prefix=REVERSETEST %s
// REVERSETEST-LABEL: {{^// LLPC}} pipeline before-patching results
// There should be a call to get the gl_NumWorkGroups
// REVERSETEST: %{{[0-9]+}} = call <3 x i32> addrspace(4)* @lgc.special.user.data.Workgroup(i32 268435462)
// There should be a call to get the internal buffer descriptor
// REVERSETEST: %{{[0-9]+}} = call i8 addrspace(4)* @lgc.descriptor.table.addr(i32 10, i32 -1, i32 7, i32 -1)
// There should be a select between the reversed thread group ID and original thread group ID
// REVERSETEST: %{{[0-9]+}} = select i1 %{{[0-9]+}}, <3 x i32> %{{[0-9]+}}, <3 x i32> %{{[0-9]+}}
// REVERSETEST: AMDLLPC SUCCESS
// END_REVERSETEST
// BEGIN_NOTREVERSETEST
// RUN: amdllpc -v %gfxip %s --reverse-thread-group=0 | FileCheck -check-prefix=NOTREVERSETEST %s
// NOTREVERSETEST-LABEL: {{^// LLPC}} pipeline before-patching results
// There should not be a call to get the gl_NumWorkGroups
// NOTREVERSETEST-NOT: %{{[0-9]+}} = call <3 x i32> addrspace(4)* @lgc.special.user.data.Workgroup(i32 268435462)
// There should not be a call to get the internal buffer descriptor
// NOTREVERSETEST-NOT: %{{[0-9]+}} = call i8 addrspace(4)* @lgc.descriptor.table.addr(i32 10, i32 -1, i32 7, i32 -1)
// There should not be a select between the reversed thread group ID and original thread group ID
// NOTREVERSETEST-NOT: %{{[0-9]+}} = select i1 %{{[0-9]+}}, <3 x i32> %{{[0-9]+}}, <3 x i32> %{{[0-9]+}}
// NOTREVERSETEST: AMDLLPC SUCCESS
// END_NOTREVERSETEST
