; BEGIN_SHADERTEST
; RUN: amdllpc -trim-debug-info=false -v %gfxip %s | FileCheck -check-prefix=SHADERTEST %s
; SHADERTEST-LABEL: {{^// LLPC}} SPIRV-to-LLVM translation results
; SHADERTEST: [[D3:![0-9]*]] = distinct !DICompileUnit(language: DW_LANG_Cobol74, file: [[D4:![0-9]*]], producer: "spirv", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug)
; SHADERTEST: [[D4]] = !DIFile(filename: "simple.hlsl", directory: ".")
; SHADERTEST: [[D8:![0-9]*]] = distinct !DISubprogram(name: "main", linkageName: "main", scope: null, file: [[D4]], line: 1, type: [[D9:![0-9]*]], scopeLine: 1, flags: DIFlagPublic, spFlags: DISPFlagDefinition | DISPFlagMainSubprogram, unit: [[D3]], templateParams: [[D5:![0-9]*]], retainedNodes: [[D11:![0-9]*]])
; SHADERTEST: [[D9]] = !DISubroutineType(types: [[D10:![0-9]*]])
; SHADERTEST: [[D10]] = !{null}
; SHADERTEST: [[D11]] = !{[[D7:![0-9]*]]}
; SHADERTEST: [[D7]] = !DILocalVariable(name: "foo", scope: [[D8]], file: [[D4]], line: 1, type: [[D12:![0-9]*]])
; SHADERTEST: [[D12]] = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
; SHADERTEST: [[D5]] = !{}
; SHADERTEST: [[D6:![0-9]*]] = !{i32 0}
; SHADERTEST: [[D13:![0-9]*]] = !DILocation(line: 1, scope: [[D8]])
; SHADERTEST: {{^// LLPC}} SPIR-V lowering results
; SHADERTEST: AMDLLPC SUCCESS
; END_SHADERTEST

OpCapability Shader
OpCapability Float16
OpCapability Float64
OpCapability Int16
OpCapability Int64

%DbgExt = OpExtInstImport "OpenCL.DebugInfo.100"
%extinst = OpExtInstImport "GLSL.std.450"
OpMemoryModel Logical GLSL450
OpEntryPoint Vertex %main "main"

%src = OpString "simple.hlsl"
%code = OpString "void main() { float foo; }"
%float_name = OpString "float"
%foo_name = OpString "foo"
%main_name = OpString "main"

%void = OpTypeVoid
%func = OpTypeFunction %void
%u32 = OpTypeInt 32 0
%f32 = OpTypeFloat 32
%int_32 = OpConstant %u32 32
%f32_ptr_function = OpTypePointer Function %f32

%dbg_src = OpExtInst %void %DbgExt DebugSource %src %code
%comp_unit = OpExtInst %void %DbgExt DebugCompilationUnit 2 4 %dbg_src HLSL
%null_expr = OpExtInst %void %DbgExt DebugExpression
%float_info = OpExtInst %void %DbgExt DebugTypeBasic %float_name %int_32 Float
%func_info = OpExtInst %void %DbgExt DebugTypeFunction FlagIsProtected|FlagIsPrivate %void
%main_info = OpExtInst %void %DbgExt DebugFunction %main_name %func_info %dbg_src 1 1 %comp_unit %main_name FlagIsProtected|FlagIsPrivate 1 %main
%foo_info = OpExtInst %void %DbgExt DebugLocalVariable %foo_name %float_info %dbg_src 1 10 %main_info FlagIsLocal

%main = OpFunction %void None %func
%main_entry = OpLabel

%foo = OpVariable %f32_ptr_function Function
%decl = OpExtInst %void %DbgExt DebugDeclare %foo_info %foo %null_expr

OpReturn
OpFunctionEnd
