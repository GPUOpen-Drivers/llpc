;;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;
 ;  Copyright (c) 2024-2025 Advanced Micro Devices, Inc. All Rights Reserved.
 ;
 ;  Permission is hereby granted, free of charge, to any person obtaining a copy
 ;  of this software and associated documentation files (the "Software"), to
 ;  deal in the Software without restriction, including without limitation the
 ;  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 ;  sell copies of the Software, and to permit persons to whom the Software is
 ;  furnished to do so, subject to the following conditions:
 ;
 ;  The above copyright notice and this permission notice shall be included in all
 ;  copies or substantial portions of the Software.
 ;
 ;  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ;  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ;  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 ;  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 ;  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 ;  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 ;  IN THE SOFTWARE.
 ;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; BEGIN_SHADERTEST
; RUN: amdllpc -trim-debug-info=false -v %gfxip %s | FileCheck -check-prefix=SHADERTEST %s
; SHADERTEST-LABEL: {{^// LLPC}} SPIRV-to-LLVM translation results
; SHADERTEST: [[D1:![0-9]*]] = !DICompositeType(tag: DW_TAG_structure_type, name: "struct VS_OUTPUT", scope: [[D2:![0-9]*]], file: !{{[0-9]*}}, line: 1, size: 32, elements: !{{[0-9]*}}, identifier: "struct VS_OUTPUT")
; SHADERTEST: [[D2]] = !DINamespace(name: "namespace_name", scope: null)
; SHADERTEST-LABEL: {{^// LLPC}} FE lowering results
; SHADERTEST: AMDLLPC SUCCESS
; END_SHADERTEST

OpCapability Shader
OpCapability Float16
OpCapability Float64
OpCapability Int16
OpCapability Int64

%DbgExt = OpExtInstImport "OpenCL.DebugInfo.100"
%extinst = OpExtInstImport "GLSL.std.450"
OpMemoryModel Logical GLSL450
OpEntryPoint Vertex %main "main"

%src = OpString "simple.hlsl"
%code = OpString "main() {}"
%main_name = OpString "main"
%foo_name = OpString "foo"
%ty_name = OpString "struct VS_OUTPUT"
%namespace_name = OpString "namespace_name"

%void = OpTypeVoid
%func = OpTypeFunction %void
%u32 = OpTypeInt 32 0
%f32 = OpTypeFloat 32
%int_32 = OpConstant %u32 32
%f32_ptr_function = OpTypePointer Function %f32

%dbg_src = OpExtInst %void %DbgExt DebugSource %src %code
%comp_unit = OpExtInst %void %DbgExt DebugCompilationUnit 2 4 %dbg_src HLSL
%null_expr = OpExtInst %void %DbgExt DebugExpression
%main_block = OpExtInst %void %DbgExt DebugLexicalBlock %dbg_src 1 1 %comp_unit %namespace_name
%func_info = OpExtInst %void %DbgExt DebugTypeFunction FlagIsProtected|FlagIsPrivate %void
%main_info = OpExtInst %void %DbgExt DebugFunction %main_name %func_info %dbg_src 1 1 %comp_unit %main_name FlagIsProtected|FlagIsPrivate 1 %main
%opaque = OpExtInst %void %DbgExt DebugTypeComposite %ty_name Class %dbg_src 1 1 %main_block %ty_name %int_32 FlagIsPublic
%foo_info = OpExtInst %void %DbgExt DebugLocalVariable %foo_name %opaque %dbg_src 1 10 %main_info FlagIsLocal

%main = OpFunction %void None %func
%main_entry = OpLabel

%foo = OpVariable %f32_ptr_function Function
%decl = OpExtInst %void %DbgExt DebugDeclare %foo_info %foo %null_expr

OpReturn
OpFunctionEnd
