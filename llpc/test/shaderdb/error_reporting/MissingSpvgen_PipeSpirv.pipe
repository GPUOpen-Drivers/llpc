// Check that an error/warning is reported when no SPVGEN dir is provided or a wrong dir is passed.

; BEGIN_SHADERTEST_1
; RUN: not amdllpc -spvgen-dir=/spvgen/is/definitely/not/here -v %gfxip %s \
; RUN:   | FileCheck -check-prefix=SHADERTEST_1 %s
; SHADERTEST_1-LABEL: {{^}}ERROR: Failed to load SPVGEN from specified directory
; SHADERTEST_1-LABEL: {{^}}===== AMDLLPC FAILED =====
; END_SHADERTEST_1

; BEGIN_SHADERTEST_2
; RUN: not amdllpc -v %gfxip %s | FileCheck -check-prefix=SHADERTEST_2 %s
; SHADERTEST_2-LABEL: {{^}}ERROR: Result::ErrorInvalidShader: Failed to parse input file:
; SHADERTEST_2-LABEL: {{^}}Parse error at line {{[0-9]+}}: Failed to load SPVGEN: cannot assemble SPIR-V assembler source
; SHADERTEST_2-LABEL: {{^}}===== AMDLLPC FAILED =====
; END_SHADERTEST_2

[VsSpirv]
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Vertex %4 "main"
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
          %4 = OpFunction %void None %3
          %5 = OpLabel
               OpReturn
               OpFunctionEnd

[VsInfo]
entryPoint = main

[FsSpirv]
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %4 "main" %9
               OpExecutionMode %4 OriginUpperLeft
               OpDecorate %9 Location 0
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %9 = OpVariable %_ptr_Output_v4float Output
         %23 = OpUndef %v4float
          %4 = OpFunction %void None %3
          %5 = OpLabel
               OpStore %9 %23
               OpReturn
               OpFunctionEnd

[FsInfo]
entryPoint = main
