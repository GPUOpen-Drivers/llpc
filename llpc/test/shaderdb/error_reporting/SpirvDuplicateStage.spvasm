; Check that an error is produced when the same shader stage is provided twice.

; BEGIN_SHADERTEST_ST
; RUN: not amdllpc -spvgen-dir=%spvgendir% -v %gfxip %s %s \
; RUN:   | FileCheck --check-prefix=SHADERTEST_ST %s
;
; SHADERTEST_ST-LABEL: {{^}}ERROR: Result::ErrorInvalidShader: Duplicate shader stage (vertex)
; SHADERTEST_ST-LABEL: {{^}}===== AMDLLPC FAILED =====
; END_SHADERTEST_ST

; BEGIN_SHADERTEST_MT
; Copy the input shader so that we do not attempt to produce two temporary .spv files under the same location.
; RUN: cp %s %t.copy.spvasm
; RUN: not amdllpc -spvgen-dir=%spvgendir% %gfxip --num-threads=2 %s %t.copy.spvasm \
; RUN:   | FileCheck --check-prefix=SHADERTEST_MT %s
;
; SHADERTEST_MT-LABEL: {{^}}ERROR: Result::ErrorInvalidShader: Duplicate shader stage (vertex)
; SHADERTEST_MT-LABEL: {{^}}===== AMDLLPC FAILED =====
; END_SHADERTEST_MT

               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Vertex %1  "main"
         %2 = OpTypeVoid
         %3 = OpTypeFunction %2
         %1 = OpFunction %2 None %3
         %4 = OpLabel
              OpReturn
              OpFunctionEnd
