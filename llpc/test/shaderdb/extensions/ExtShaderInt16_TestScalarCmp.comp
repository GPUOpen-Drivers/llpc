/*
 ***********************************************************************************************************************
 *
 *  Copyright (c) 2024-2025 Advanced Micro Devices, Inc. All Rights Reserved.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to
 *  deal in the Software without restriction, including without limitation the
 *  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 *  sell copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 *  IN THE SOFTWARE.
 *
 **********************************************************************************************************************/

#version 450 core
#extension GL_AMD_gpu_shader_int16 : enable

layout(set = 0, binding = 0) uniform UBO {
    int16_t m1;
    uint16_t m2;
    int16_t m3;
};

layout(set = 1, binding = 0) buffer SSBO {
    uint16_t mOut1;
};

void main()
{
    uint16_t a;

    if (m1 != m2)
        a = 0us;

    if (m1 == m2)
        a = 1us;

    if (m1 > m2)
        a = 2us;

    if (m1 >= m2)
        a = 3us;

    if (m1 < m2)
        a = 4us;

    if (m1 <= m2)
        a = 5us;

    if (m1 > m3)
        a = 6us;

    if (m1 >= m3)
        a = 7us;

    if (m1 < m3)
        a = 8us;

    if (m1 <= m3)
        a = 9us;
}

// BEGIN_SHADERTEST
/*
; RUN: amdllpc -v %gfxip %s | FileCheck -check-prefix=SHADERTEST %s
; SHADERTEST-LABEL: {{^// LLPC}} SPIRV-to-LLVM translation results
; SHADERTEST: AMDLLPC SUCCESS
*/
// END_SHADERTEST
