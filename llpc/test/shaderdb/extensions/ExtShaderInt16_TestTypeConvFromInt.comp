/*
 ***********************************************************************************************************************
 *
 *  Copyright (c) 2024-2025 Advanced Micro Devices, Inc. All Rights Reserved.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to
 *  deal in the Software without restriction, including without limitation the
 *  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 *  sell copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 *  IN THE SOFTWARE.
 *
 **********************************************************************************************************************/

#version 450 core
#extension GL_AMD_gpu_shader_int16 : enable
#extension GL_ARB_gpu_shader_int64 : enable

layout(set = 0, binding = 0) uniform UBO {
    i16vec4 m1;
    u16vec4 m2;
    ivec4   m3;
    uvec4   m4;
    i64vec4 m5;
    u64vec4 m6;
};

layout(set = 1, binding = 0) buffer SSBO {
    i16vec4 mOut1;
    i16vec4 mOut2;
    i16vec4 mOut3;
    i16vec4 mOut4;
    i16vec4 mOut5;

    u16vec4 mOut6;
    u16vec4 mOut7;
    u16vec4 mOut8;
    u16vec4 mOut9;
    u16vec4 mOut10;
};

void main()
{
    mOut1  = i16vec4(m2);   // i16 <- u16
    mOut2  = i16vec4(m3);   // i16 <- i32
    mOut3  = i16vec4(m4);   // i16 <- u32
    mOut4  = i16vec4(m5);   // i16 <- i64
    mOut5  = i16vec4(m6);   // i16 <- u64

    mOut6  = u16vec4(m1);   // u16 <- i16
    mOut7  = u16vec4(m3);   // u16 <- i32
    mOut8  = u16vec4(m4);   // u16 <- u32
    mOut9  = u16vec4(m5);   // u16 <- i64
    mOut10 = u16vec4(m6);   // u16 <- u64
}

// BEGIN_SHADERTEST
/*
; RUN: amdllpc -v %gfxip %s | FileCheck -check-prefix=SHADERTEST %s
; SHADERTEST-LABEL: {{^// LLPC}} SPIRV-to-LLVM translation results
; SHADERTEST: AMDLLPC SUCCESS
*/
// END_SHADERTEST
