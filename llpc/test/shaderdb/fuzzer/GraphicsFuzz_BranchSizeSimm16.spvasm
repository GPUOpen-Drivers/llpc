
; BEGIN_SHADERTEST
; RUN: amdllpc --verify-ir -spvgen-dir=%spvgendir% -v %gfxip %s | FileCheck -check-prefix=SHADERTEST %s
; XFAIL: *
; SHADERTEST-LABEL: {{^// LLPC.*}} SPIRV-to-LLVM translation results
; SHADERTEST: AMDLLPC SUCCESS
; END_SHADERTEST
;
; Based on https://github.com/GPUOpen-Drivers/llpc/issues/934.

; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 7
; Bound: 1565
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %4 "main" %165
               OpExecutionMode %4 OriginUpperLeft
               OpDecorate %165 BuiltIn FragCoord
          %2 = OpTypeVoid
          %3 = OpTypeFunction %2
          %6 = OpTypeFloat 32
          %7 = OpTypeVector %6 2
          %8 = OpTypePointer Function %7
          %9 = OpTypeVector %6 4
         %10 = OpTypePointer Function %9
         %11 = OpTypeBool
         %12 = OpTypeFunction %11 %8 %10
         %17 = OpTypeFunction %9 %8
         %21 = OpTypeInt 32 0
         %22 = OpConstant %21 0
         %23 = OpTypePointer Function %6
         %31 = OpConstantFalse %11
         %33 = OpConstant %21 1
         %66 = OpConstantTrue %11
         %73 = OpTypeInt 32 1
         %87 = OpConstant %6 4
         %88 = OpConstant %6 20
         %90 = OpConstantComposite %9 %87 %87 %87 %88
        %115 = OpConstant %21 16
        %117 = OpConstant %6 0
        %149 = OpConstant %73 11
        %164 = OpTypePointer Input %9
        %165 = OpVariable %164 Input
        %307 = OpConstantComposite %7 %117 %117
        %433 = OpTypePointer Function %7
        %435 = OpTypeFunction %73 %433 %433 %433 %433
        %441 = OpConstant %73 1
        %478 = OpTypePointer Function %21
        %741 = OpTypePointer Function %6
        %750 = OpConstant %73 0
        %752 = OpConstant %73 10
        %753 = OpConstant %21 10
        %754 = OpTypeArray %6 %753
        %755 = OpTypePointer Function %754
        %760 = OpConstant %73 1
        %761 = OpConstant %73 9
        %768 = OpConstant %6 0.100000001
        %771 = OpConstantComposite %754 %117 %117 %117 %117 %117 %117 %117 %117 %117 %117
          %4 = OpFunction %2 None %3
          %5 = OpLabel
        %163 = OpVariable %8 Function
        %166 = OpLoad %9 %165
        %167 = OpVectorShuffle %7 %166 %90 0 1
               OpStore %163 %167
        %183 = OpFunctionCall %9 %19 %163
               OpReturn
               OpFunctionEnd
         %15 = OpFunction %11 None %12
         %13 = OpFunctionParameter %8
         %14 = OpFunctionParameter %10
         %16 = OpLabel
       %1141 = OpVariable %433 Function %307
         %24 = OpAccessChain %23 %13 %22
        %680 = OpFunctionCall %73 %489 %1141 %1141 %1141 %1141
         %37 = OpLoad %6 %24
        %682 = OpFunctionCall %73 %489 %1141 %1141 %1141 %1141
       %1142 = OpFunctionCall %73 %489 %1141 %1141 %1141 %1141
         %50 = OpFOrdGreaterThan %11 %37 %88
               OpSelectionMerge %52 None
               OpBranchConditional %50 %51 %52
         %51 = OpLabel
        %683 = OpFunctionCall %2 %656
               OpReturnValue %31
         %52 = OpLabel
        %685 = OpFunctionCall %73 %489 %1141 %1141 %1141 %1141
               OpReturnValue %66
               OpFunctionEnd
         %19 = OpFunction %9 None %17
         %18 = OpFunctionParameter %8
         %20 = OpLabel
        %105 = OpVariable %8 Function
        %107 = OpVariable %10 Function
               OpBranch %77
         %77 = OpLabel
        %106 = OpLoad %7 %18
               OpStore %105 %106
        %112 = OpFunctionCall %11 %15 %105 %107
       %1143 = OpFunctionCall %2 %656
        %688 = OpFunctionCall %2 %656
               OpLoopMerge %79 %77 None
               OpBranch %77
         %79 = OpLabel
               OpReturnValue %90
               OpFunctionEnd
        %489 = OpFunction %73 None %435
        %490 = OpFunctionParameter %433
        %491 = OpFunctionParameter %433
        %492 = OpFunctionParameter %433
        %493 = OpFunctionParameter %433
        %494 = OpLabel
       %1173 = OpFunctionCall %2 %769
       %1174 = OpFunctionCall %2 %769
       %1175 = OpFunctionCall %2 %769
       %1180 = OpFunctionCall %2 %769
       %1181 = OpFunctionCall %2 %769
       %1182 = OpFunctionCall %2 %769
       %1186 = OpFunctionCall %2 %769
       %1191 = OpFunctionCall %2 %769
       %1192 = OpFunctionCall %2 %769
       %1195 = OpFunctionCall %2 %769
               OpReturnValue %441
               OpFunctionEnd
        %656 = OpFunction %2 None %3
        %657 = OpLabel
       %1197 = OpVariable %433 Function %307
        %736 = OpFunctionCall %73 %489 %1197 %1197 %1197 %1197
       %1196 = OpFunctionCall %2 %769
        %669 = OpFunctionCall %73 %489 %1197 %1197 %1197 %1197
       %1198 = OpFunctionCall %73 %489 %1197 %1197 %1197 %1197
               OpReturn
               OpFunctionEnd
        %769 = OpFunction %2 None %3
        %770 = OpLabel
        %852 = OpVariable %478 Function %22
        %772 = OpVariable %755 Function %771
               OpBranch %773
        %773 = OpLabel
        %776 = OpPhi %73 %750 %770 %774 %775
        %777 = OpSLessThan %11 %776 %752
               OpLoopMerge %778 %775 DontUnroll
               OpBranchConditional %777 %775 %778
        %775 = OpLabel
        %784 = OpAccessChain %741 %772 %776
               OpStore %784 %88
        %774 = OpIAdd %73 %776 %760
               OpBranch %773
        %778 = OpLabel
               OpBranch %785
        %785 = OpLabel
        %788 = OpPhi %73 %750 %778 %149 %787
        %789 = OpSLessThan %11 %788 %761
               OpLoopMerge %790 %787 None
               OpBranchConditional %789 %791 %790
        %791 = OpLabel
               OpBranch %792
        %792 = OpLabel
        %795 = OpPhi %73 %750 %791 %793 %794
        %796 = OpSLessThan %11 %795 %752
               OpLoopMerge %797 %794 None
               OpBranchConditional %796 %798 %797
        %798 = OpLabel
        %800 = OpSLessThan %11 %788 %776
               OpSelectionMerge %801 None
               OpBranchConditional %800 %802 %801
        %802 = OpLabel
               OpBranch %794
        %801 = OpLabel
        %803 = OpAccessChain %741 %772 %788
        %804 = OpLoad %6 %803
        %805 = OpAccessChain %741 %772 %795
        %806 = OpLoad %6 %805
        %816 = OpFOrdGreaterThan %11 %804 %806
               OpSelectionMerge %819 None
               OpBranchConditional %816 %820 %819
        %820 = OpLabel
               OpStore %803 %768
               OpBranch %819
        %819 = OpLabel
               OpBranch %794
        %794 = OpLabel
        %793 = OpIAdd %73 %795 %760
        %861 = OpLoad %21 %852
        %862 = OpIAdd %21 %861 %33
               OpStore %852 %862
        %863 = OpUGreaterThanEqual %11 %861 %115
               OpBranchConditional %863 %797 %792
        %797 = OpLabel
               OpBranch %787
        %787 = OpLabel
               OpBranchConditional %796 %790 %785
        %790 = OpLabel
               OpReturn
               OpFunctionEnd
