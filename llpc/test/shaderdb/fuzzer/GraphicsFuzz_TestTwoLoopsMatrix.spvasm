; BEGIN_SHADERTEST
; RUN: amdllpc -verify-ir -v %gfxip %s | FileCheck -check-prefix=SHADERTEST %s
; SHADERTEST-LABEL: {{^// LLPC.*}} SPIRV-to-LLVM translation results
; SHADERTEST: AMDLLPC SUCCESS
; END_SHADERTEST
;
; Based on https://github.com/GPUOpen-Drivers/llpc/issues/215.

; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 7
; Bound: 69
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %4 "main" %66
               OpExecutionMode %4 OriginUpperLeft
               OpSource ESSL 310
               OpName %4 "main"
               OpName %8 "x"
               OpName %22 "matrix_u"
               OpName %29 "b"
               OpName %36 "buf0"
               OpMemberName %36 0 "matrix_a_uni"
               OpName %38 ""
               OpName %47 "matrix_b"
               OpName %66 "_GLF_color"
               OpDecorate %8 RelaxedPrecision
               OpDecorate %15 RelaxedPrecision
               OpDecorate %23 RelaxedPrecision
               OpDecorate %27 RelaxedPrecision
               OpDecorate %28 RelaxedPrecision
               OpDecorate %29 RelaxedPrecision
               OpMemberDecorate %36 0 ColMajor
               OpMemberDecorate %36 0 Offset 0
               OpMemberDecorate %36 0 MatrixStride 16
               OpDecorate %36 Block
               OpDecorate %38 DescriptorSet 0
               OpDecorate %38 Binding 0
               OpDecorate %48 RelaxedPrecision
               OpDecorate %49 RelaxedPrecision
               OpDecorate %63 RelaxedPrecision
               OpDecorate %64 RelaxedPrecision
               OpDecorate %66 Location 0
          %2 = OpTypeVoid
          %3 = OpTypeFunction %2
          %6 = OpTypeInt 32 1
          %7 = OpTypePointer Function %6
          %9 = OpConstant %6 4
         %16 = OpConstant %6 1
         %17 = OpTypeBool
         %19 = OpTypeFloat 32
         %20 = OpTypeVector %19 4
         %21 = OpTypePointer Function %20
         %24 = OpConstant %19 1
         %25 = OpTypePointer Function %19
         %35 = OpTypeMatrix %20 4
         %36 = OpTypeStruct %35
         %37 = OpTypePointer Uniform %36
         %38 = OpVariable %37 Uniform
         %39 = OpConstant %6 0
         %40 = OpTypeInt 32 0
         %41 = OpConstant %40 0
         %42 = OpTypePointer Uniform %19
         %45 = OpConstant %19 -1
         %59 = OpConstant %40 1
         %65 = OpTypePointer Output %20
         %66 = OpVariable %65 Output
         %67 = OpConstant %19 0
         %68 = OpConstantComposite %20 %24 %67 %67 %24
          %4 = OpFunction %2 None %3
          %5 = OpLabel
          %8 = OpVariable %7 Function
         %22 = OpVariable %21 Function
         %29 = OpVariable %7 Function
         %47 = OpVariable %21 Function
         %51 = OpVariable %21 Function
               OpStore %8 %9
               OpBranch %10
         %10 = OpLabel
               OpLoopMerge %12 %13 None
               OpBranch %14
         %14 = OpLabel
         %15 = OpLoad %6 %8
         %18 = OpSGreaterThanEqual %17 %15 %16
               OpBranchConditional %18 %11 %12
         %11 = OpLabel
         %23 = OpLoad %6 %8
         %26 = OpAccessChain %25 %22 %23
               OpStore %26 %24
               OpBranch %13
         %13 = OpLabel
         %27 = OpLoad %6 %8
         %28 = OpISub %6 %27 %16
               OpStore %8 %28
               OpBranch %10
         %12 = OpLabel
               OpStore %29 %9
               OpBranch %30
         %30 = OpLabel
               OpLoopMerge %32 %33 None
               OpBranch %34
         %34 = OpLabel
         %43 = OpAccessChain %42 %38 %39 %39 %41
         %44 = OpLoad %19 %43
         %46 = OpFOrdLessThan %17 %44 %45
               OpBranchConditional %46 %31 %32
         %31 = OpLabel
         %48 = OpLoad %6 %29
         %49 = OpLoad %6 %29
         %50 = OpSGreaterThan %17 %49 %16
               OpSelectionMerge %53 None
               OpBranchConditional %50 %52 %57
         %52 = OpLabel
         %54 = OpLoad %20 %47
         %55 = OpLoad %20 %47
         %56 = OpExtInst %20 %1 FMin %54 %55
               OpStore %51 %56
               OpBranch %53
         %57 = OpLabel
         %58 = OpLoad %20 %22
               OpStore %51 %58
               OpBranch %53
         %53 = OpLabel
         %60 = OpAccessChain %25 %51 %59
         %61 = OpLoad %19 %60
         %62 = OpAccessChain %25 %47 %48
               OpStore %62 %61
               OpBranch %33
         %33 = OpLabel
         %63 = OpLoad %6 %29
         %64 = OpISub %6 %63 %16
               OpStore %29 %64
               OpBranch %30
         %32 = OpLabel
               OpStore %66 %68
               OpReturn
               OpFunctionEnd
