; BEGIN_SHADERTEST
; RUN: amdllpc -v %gfxip %s | FileCheck -check-prefix=SHADERTEST %s
; SHADERTEST-LABEL: {{^// LLPC}} SPIRV-to-LLVM translation results
; SHADERTEST-LABEL: {{^// LLPC}} tessellation calculation factor results
; SHADERTEST: Patch constant count: 0
; SHADERTEST: Patch constant size (in dwords): 0
; SHADERTEST: Patch constant total size (in dwords): 0
; SHADERTEST-LABEL: {{^// LLPC}} pipeline patching results
; SHADERTEST: call void @llvm.amdgcn.raw.tbuffer.store.v4f32
; SHADERTEST-NEXT: br label %.endHs
; SHADERTEST: AMDLLPC SUCCESS
; END_SHADERTEST

[TcsGlsl]
#version 450 core

layout(vertices = 3) out;

layout(location = 0) out vec4 outColor[];

void main (void)
{
    outColor[gl_InvocationID] = gl_in[gl_InvocationID].gl_Position;

    gl_out[gl_InvocationID].gl_ClipDistance[5] += 1.0;
    gl_out[gl_InvocationID].gl_CullDistance[1] += 2.0;

    gl_TessLevelInner[1] = 1.0;
    gl_TessLevelOuter[1] = 2.0;
}

[TcsInfo]
entryPoint = main

[TesGlsl]
#version 450 core

layout(triangles) in;

layout(location = 0) in vec4 inColor[];
layout(location = 0) out vec4 outColor;

void main()
{
    outColor += gl_in[0].gl_Position;
    outColor = inColor[0] + inColor[1] + inColor[2];
}

[TesInfo]
entryPoint = main

[GraphicsPipelineState]
patchControlPoints = 3
