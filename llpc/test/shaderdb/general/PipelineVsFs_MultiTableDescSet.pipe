// This test has three resources in descriptor set 0, but each is in a
// different descriptor table.  The test checks that all three are loaded correctly.

// This first part checks that the PAL metadata is as expected.
; BEGIN_SHADERTEST
; RUN: amdllpc -o %t.elf %gfxip %s -v | FileCheck -check-prefix=SHADERTEST %s
; First check that the buffer load in the vertex shader loads the correct
; descriptor.  The high half of the descriptor load should come from the PC.
; The low half should come from the user data node at offset 0. The 0 offset if
; found in the PAL metadata.
; SHADERTEST-LABEL: _amdgpu_vs_main:
; SHADERTEST: s_getpc_b64 s{{\[}}[[VS_PC_LO:[0-9]*]]:[[VS_PC_HI:[0-9]*]]]
; SHADERTEST: s_mov_b32
; SHADERTEST: s_mov_b32
; SHADERTEST: s_load_dwordx4
; SHADERTEST: s_mov_b32 s[[TO_ADDR_LO:[0-9]*]], s[[table0:[0-9]*]]
; SHADERTEST: s_mov_b32 s[[TO_ADDR_HI:[0-9]*]], s[[VS_PC_HI]]
; SHADERTEST: s_load_dwordx4 s{{\[}}[[T0_DESC:[0-9]*]]:{{[0-9]*}}], s{{\[}}[[TO_ADDR_LO]]:[[TO_ADDR_HI]]], 0x0
; SHADERTEST: s_buffer_load_dwordx8 s[0:7], s{{\[}}[[T0_DESC]]:{{[0-9]*}}], 0x0
; SHADERTEST: s_buffer_load_dwordx8 s[8:15], s{{\[}}[[T0_DESC]]:{{[0-9]*}}], 0x20
; Now check that the image sample in the pixel shader uses the correct
; descriptors.  The high half of the descriptor load should come from the PC.
; The low half should come from the user data node at offset 1 and 2.
; SHADERTEST-LABEL: _amdgpu_ps_main:
; SHADERTEST: s_getpc_b64 s{{\[}}[[VS_PC_LO:[0-9]*]]:[[VS_PC_HI:[0-9]*]]]
; SHADERTEST: s_mov_b32 s0, s1
; SHADERTEST: s_mov_b32 s1, s[[VS_PC_HI]]
; SHADERTEST: s_mov_b32 s3, s[[VS_PC_HI]]
; SHADERTEST: s_load_dwordx8 s{{\[}}[[T1_DESC:[0-9]*]]:{{[0-9]*}}], s[0:1], 0x0
; SHADERTEST: s_load_dwordx4 s{{\[}}[[T2_DESC:[0-9]*]]:{{[0-9]*}}], s[2:3], 0x0
; SHADERTEST: image_sample v[{{[0-9]*:[0-9]*}}], v[{{[0-9]*:[0-9]*}}], s{{\[}}[[T1_DESC]]:{{[0-9]*}}], s{{\[}}[[T2_DESC]]:{{[0-9]*}}]
; SHADERTEST-LABEL: PalMetadata
; SHADERTEST:     .hardware_stages:
; SHADERTEST:       .ps:
; SHADERTEST:         .user_data_reg_map: [ 0x0000000010000000 0x0000000000000002 0x0000000000000003
; SHADERTEST:       .vs:
; SHADERTEST:         .user_data_reg_map: [ 0x0000000010000000 0x0000000000000001 0x000000001000000F 0x0000000010000003 0x0000000010000004 
; END_SHADERTEST

[Version]
version = 40

[VsSpirv]
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Vertex %vsmain "vsmain" %in_var_POSITION %in_var_TEXCOORD0 %gl_Position %out_var_TEXCOORD
               OpSource HLSL 600
               OpName %type_ConstantBuffer_TransformData "type.ConstantBuffer.TransformData"
               OpMemberName %type_ConstantBuffer_TransformData 0 "M"
               OpName %Transform "Transform"
               OpName %in_var_POSITION "in.var.POSITION"
               OpName %in_var_TEXCOORD0 "in.var.TEXCOORD0"
               OpName %out_var_TEXCOORD "out.var.TEXCOORD"
               OpName %vsmain "vsmain"
               OpDecorate %gl_Position BuiltIn Position
               OpDecorate %in_var_POSITION Location 0
               OpDecorate %in_var_TEXCOORD0 Location 1
               OpDecorate %out_var_TEXCOORD Location 0
               OpDecorate %Transform DescriptorSet 0
               OpDecorate %Transform Binding 0
               OpMemberDecorate %type_ConstantBuffer_TransformData 0 Offset 0
               OpMemberDecorate %type_ConstantBuffer_TransformData 0 MatrixStride 16
               OpMemberDecorate %type_ConstantBuffer_TransformData 0 RowMajor
               OpDecorate %type_ConstantBuffer_TransformData Block
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%mat4v4float = OpTypeMatrix %v4float 4
%type_ConstantBuffer_TransformData = OpTypeStruct %mat4v4float
%_ptr_Uniform_type_ConstantBuffer_TransformData = OpTypePointer Uniform %type_ConstantBuffer_TransformData
%_ptr_Input_v4float = OpTypePointer Input %v4float
    %v2float = OpTypeVector %float 2
%_ptr_Input_v2float = OpTypePointer Input %v2float
%_ptr_Output_v4float = OpTypePointer Output %v4float
%_ptr_Output_v2float = OpTypePointer Output %v2float
       %void = OpTypeVoid
         %20 = OpTypeFunction %void
%_ptr_Uniform_mat4v4float = OpTypePointer Uniform %mat4v4float
  %Transform = OpVariable %_ptr_Uniform_type_ConstantBuffer_TransformData Uniform
%in_var_POSITION = OpVariable %_ptr_Input_v4float Input
%in_var_TEXCOORD0 = OpVariable %_ptr_Input_v2float Input
%gl_Position = OpVariable %_ptr_Output_v4float Output
%out_var_TEXCOORD = OpVariable %_ptr_Output_v2float Output
     %vsmain = OpFunction %void None %20
         %22 = OpLabel
         %23 = OpLoad %v4float %in_var_POSITION
         %24 = OpLoad %v2float %in_var_TEXCOORD0
         %25 = OpAccessChain %_ptr_Uniform_mat4v4float %Transform %int_0
         %26 = OpLoad %mat4v4float %25
         %27 = OpVectorTimesMatrix %v4float %23 %26
               OpStore %gl_Position %27
               OpStore %out_var_TEXCOORD %24
               OpReturn
               OpFunctionEnd


[VsInfo]
entryPoint = vsmain
userDataNode[0].visibility = 1
userDataNode[0].type = StreamOutTableVaPtr
userDataNode[0].offsetInDwords = 0
userDataNode[0].sizeInDwords = 1
userDataNode[1].type = DescriptorTableVaPtr
userDataNode[1].offsetInDwords = 1
userDataNode[1].sizeInDwords = 1
userDataNode[1].next[0].type = DescriptorBuffer
userDataNode[1].next[0].offsetInDwords = 0
userDataNode[1].next[0].sizeInDwords = 4
userDataNode[1].next[0].set = 0
userDataNode[1].next[0].binding = 0
userDataNode[2].type = DescriptorTableVaPtr
userDataNode[2].offsetInDwords = 2
userDataNode[2].sizeInDwords = 1
userDataNode[2].next[0].type = DescriptorResource
userDataNode[2].next[0].offsetInDwords = 0
userDataNode[2].next[0].sizeInDwords = 8
userDataNode[2].next[0].set = 0
userDataNode[2].next[0].binding = 1
userDataNode[3].type = DescriptorTableVaPtr
userDataNode[3].offsetInDwords = 3
userDataNode[3].sizeInDwords = 1
userDataNode[3].next[0].type = DescriptorSampler
userDataNode[3].next[0].offsetInDwords = 0
userDataNode[3].next[0].sizeInDwords = 4
userDataNode[3].next[0].set = 0
userDataNode[3].next[0].binding = 2
userDataNode[4].type = IndirectUserDataVaPtr
userDataNode[4].offsetInDwords = 4
userDataNode[4].sizeInDwords = 1
userDataNode[4].indirectUserDataCount = 4

[FsSpirv]
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %psmain "psmain" %gl_FragCoord %in_var_TEXCOORD %out_var_SV_TARGET
               OpExecutionMode %psmain OriginUpperLeft
               OpSource HLSL 600
               OpName %type_2d_image "type.2d.image"
               OpName %Tex0 "Tex0"
               OpName %type_sampler "type.sampler"
               OpName %Sampler0 "Sampler0"
               OpName %in_var_TEXCOORD "in.var.TEXCOORD"
               OpName %out_var_SV_TARGET "out.var.SV_TARGET"
               OpName %psmain "psmain"
               OpName %type_sampled_image "type.sampled.image"
               OpDecorate %gl_FragCoord BuiltIn FragCoord
               OpDecorate %in_var_TEXCOORD Location 0
               OpDecorate %out_var_SV_TARGET Location 0
               OpDecorate %Tex0 DescriptorSet 0
               OpDecorate %Tex0 Binding 1
               OpDecorate %Sampler0 DescriptorSet 0
               OpDecorate %Sampler0 Binding 2
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%type_2d_image = OpTypeImage %float 2D 2 0 0 1 Unknown
%_ptr_UniformConstant_type_2d_image = OpTypePointer UniformConstant %type_2d_image
%type_sampler = OpTypeSampler
%_ptr_UniformConstant_type_sampler = OpTypePointer UniformConstant %type_sampler
%_ptr_Input_v4float = OpTypePointer Input %v4float
    %v2float = OpTypeVector %float 2
%_ptr_Input_v2float = OpTypePointer Input %v2float
%_ptr_Output_v4float = OpTypePointer Output %v4float
       %void = OpTypeVoid
         %19 = OpTypeFunction %void
%type_sampled_image = OpTypeSampledImage %type_2d_image
       %Tex0 = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
   %Sampler0 = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%gl_FragCoord = OpVariable %_ptr_Input_v4float Input
%in_var_TEXCOORD = OpVariable %_ptr_Input_v2float Input
%out_var_SV_TARGET = OpVariable %_ptr_Output_v4float Output
     %psmain = OpFunction %void None %19
         %20 = OpLabel
         %21 = OpLoad %v2float %in_var_TEXCOORD
         %22 = OpLoad %type_2d_image %Tex0
         %23 = OpLoad %type_sampler %Sampler0
         %24 = OpSampledImage %type_sampled_image %22 %23
         %25 = OpImageSampleImplicitLod %v4float %24 %21 None
               OpStore %out_var_SV_TARGET %25
               OpReturn
               OpFunctionEnd


[FsInfo]
entryPoint = psmain
userDataNode[0].visibility = 1
userDataNode[0].type = StreamOutTableVaPtr
userDataNode[0].offsetInDwords = 0
userDataNode[0].sizeInDwords = 1
userDataNode[1].type = DescriptorTableVaPtr
userDataNode[1].offsetInDwords = 1
userDataNode[1].sizeInDwords = 1
userDataNode[1].next[0].type = DescriptorBuffer
userDataNode[1].next[0].offsetInDwords = 0
userDataNode[1].next[0].sizeInDwords = 4
userDataNode[1].next[0].set = 0
userDataNode[1].next[0].binding = 0
userDataNode[2].type = DescriptorTableVaPtr
userDataNode[2].offsetInDwords = 2
userDataNode[2].sizeInDwords = 1
userDataNode[2].next[0].type = DescriptorResource
userDataNode[2].next[0].offsetInDwords = 0
userDataNode[2].next[0].sizeInDwords = 8
userDataNode[2].next[0].set = 0
userDataNode[2].next[0].binding = 1
userDataNode[3].type = DescriptorTableVaPtr
userDataNode[3].offsetInDwords = 3
userDataNode[3].sizeInDwords = 1
userDataNode[3].next[0].type = DescriptorSampler
userDataNode[3].next[0].offsetInDwords = 0
userDataNode[3].next[0].sizeInDwords = 4
userDataNode[3].next[0].set = 0
userDataNode[3].next[0].binding = 2
userDataNode[4].type = IndirectUserDataVaPtr
userDataNode[4].offsetInDwords = 4
userDataNode[4].sizeInDwords = 1
userDataNode[4].indirectUserDataCount = 4

[GraphicsPipelineState]
topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST
colorBuffer[0].format = VK_FORMAT_B8G8R8A8_UNORM
colorBuffer[0].channelWriteMask = 15
colorBuffer[0].blendEnable = 0
colorBuffer[0].blendSrcAlphaToColor = 0

[VertexInputState]
binding[0].binding = 0
binding[0].stride = 20
binding[0].inputRate = VK_VERTEX_INPUT_RATE_VERTEX
attribute[0].location = 0
attribute[0].binding = 0
attribute[0].format = VK_FORMAT_R32G32B32_SFLOAT
attribute[0].offset = 0
attribute[1].location = 1
attribute[1].binding = 0
attribute[1].format = VK_FORMAT_R32G32_SFLOAT
attribute[1].offset = 12

