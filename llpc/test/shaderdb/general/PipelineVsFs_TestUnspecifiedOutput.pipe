; Test that unspecified outputs are handled correctly with zero values filled.
; BEGIN_SHADERTEST
; RUN: amdllpc -v %gfxip %s | FileCheck -check-prefix=SHADERTEST %s
; SHADERTEST-LABEL: @_amdgpu_vs_main(
; SHADERTEST: call void @llvm.amdgcn.exp.f32(i32 32, i32 15, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 5.000000e-01, i1 false, i1 false)
; SHADERTEST-NEXT: call void @llvm.amdgcn.exp.f32(i32 33, i32 15, float 5.000000e-01, float 5.000000e-01, float 0.000000e+00, float 0.000000e+00, i1 false, i1 false)
; SHADERTEST-LABEL: _amdgpu_vs_main:
; SHADERTEST: v_mov_b32_e32 v1, 0.5
; SHADERTEST: v_mov_b32_e32 v2, 0
; SHADERTEST: exp param0 v2, v2, v2, v1
; SHADERTEST-NEXT: exp param1 v1, v1, v2, v2
; END_SHADERTEST

[Version]
version = 57

[VsGlsl]
#version 450 core

layout(location = 0) out vec3 out1;
layout(location = 1) out vec3 out2;

void main() {
  out2 = vec3(0.5);
  gl_Position = vec4(1.0);  
}

[VsInfo]
entryPoint = main
options.trapPresent = 0
options.debugMode = 0
options.enablePerformanceData = 0
options.allowReZ = 0
options.forceLateZ = 0
options.vgprLimit = 0
options.sgprLimit = 0
options.maxThreadGroupsPerComputeUnit = 0
options.waveSize = 0
options.subgroupSize = 0
options.wgpMode = 0
options.waveBreakSize = None
options.forceLoopUnrollCount = 0
options.useSiScheduler = 0
options.disableCodeSinking = 0
options.favorLatencyHiding = 0
options.updateDescInElf = 0
options.allowVaryWaveSize = 0
options.enableLoadScalarizer = 0
options.disableLicm = 0
options.unrollThreshold = 0
options.scalarThreshold = 0
options.disableLoopUnroll = 0
options.fp32DenormalMode = Auto
options.adjustDepthImportVrs = 0
options.disableLicmThreshold = 0
options.unrollHintThreshold = 0
options.dontUnrollHintThreshold = 0
options.fastMathFlags = 0
options.disableFastMathFlags = 0
options.ldsSpillLimitDwords = 0
options.scalarizeWaterfallLoads = 0
options.overrideShaderThreadGroupSizeX = 0
options.overrideShaderThreadGroupSizeY = 0
options.overrideShaderThreadGroupSizeZ = 0
options.nsaThreshold = 0
options.aggressiveInvariantLoads = Auto

[FsGlsl]
#version 450 core

layout(location = 0) in vec3 in1;
layout(location = 1) in vec3 in2;

layout(location = 0) out vec4 color;

void main() {
  color = vec4(in1 + in2, 1.0);
}

[FsInfo]
entryPoint = main
options.trapPresent = 0
options.debugMode = 0
options.enablePerformanceData = 0
options.allowReZ = 0
options.forceLateZ = 0
options.vgprLimit = 0
options.sgprLimit = 0
options.maxThreadGroupsPerComputeUnit = 0
options.waveSize = 0
options.subgroupSize = 0
options.wgpMode = 0
options.waveBreakSize = None
options.forceLoopUnrollCount = 0
options.useSiScheduler = 0
options.disableCodeSinking = 0
options.favorLatencyHiding = 0
options.updateDescInElf = 0
options.allowVaryWaveSize = 0
options.enableLoadScalarizer = 0
options.disableLicm = 0
options.unrollThreshold = 0
options.scalarThreshold = 0
options.disableLoopUnroll = 0
options.fp32DenormalMode = Auto
options.adjustDepthImportVrs = 0
options.disableLicmThreshold = 0
options.unrollHintThreshold = 0
options.dontUnrollHintThreshold = 0
options.fastMathFlags = 0
options.disableFastMathFlags = 0
options.ldsSpillLimitDwords = 0
options.scalarizeWaterfallLoads = 0
options.overrideShaderThreadGroupSizeX = 0
options.overrideShaderThreadGroupSizeY = 0
options.overrideShaderThreadGroupSizeZ = 0
options.nsaThreshold = 0
options.aggressiveInvariantLoads = Auto

[ResourceMapping]
userDataNode[0].visibility = 66
userDataNode[0].type = DescriptorTableVaPtr
userDataNode[0].offsetInDwords = 0
userDataNode[0].sizeInDwords = 1
userDataNode[0].next[0].type = DescriptorConstBuffer
userDataNode[0].next[0].offsetInDwords = 0
userDataNode[0].next[0].sizeInDwords = 4
userDataNode[0].next[0].set = 0x00000000
userDataNode[0].next[0].binding = 0
userDataNode[1].visibility = 2
userDataNode[1].type = IndirectUserDataVaPtr
userDataNode[1].offsetInDwords = 1
userDataNode[1].sizeInDwords = 1
userDataNode[1].indirectUserDataCount = 0

[GraphicsPipelineState]
topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST
provokingVertexMode = VK_PROVOKING_VERTEX_MODE_FIRST_VERTEX_EXT
patchControlPoints = 0
deviceIndex = 0
disableVertexReuse = 0
switchWinding = 0
enableMultiView = 0
depthClipEnable = 1
rasterizerDiscardEnable = 0
perSampleShading = 0
numSamples = 0
pixelShaderSamples = 0
samplePatternIdx = 0
usrClipPlaneMask = 0
alphaToCoverageEnable = 0
dualSourceBlendEnable = 0
colorBuffer[0].format = VK_FORMAT_B8G8R8A8_SRGB
colorBuffer[0].channelWriteMask = 15
colorBuffer[0].blendEnable = 0
colorBuffer[0].blendSrcAlphaToColor = 0
nggState.enableNgg = 0
nggState.enableGsUse = 0
nggState.forceCullingMode = 0
nggState.compactMode = NggCompactDisable
nggState.enableVertexReuse = 0
nggState.enableBackfaceCulling = 1
nggState.enableFrustumCulling = 0
nggState.enableBoxFilterCulling = 0
nggState.enableSphereCulling = 0
nggState.enableSmallPrimFilter = 1
nggState.enableCullDistanceCulling = 0
nggState.backfaceExponent = 0
nggState.subgroupSizing = Auto
nggState.primsPerSubgroup = 256
nggState.vertsPerSubgroup = 256
dynamicVertexStride = 0
enableUberFetchShader = 0
enableEarlyCompile = 0
options.includeDisassembly = 0
options.scalarBlockLayout = 0
options.resourceLayoutScheme = Compact
options.includeIr = 0
options.robustBufferAccess = 0
options.reconfigWorkgroupLayout = 0
options.forceCsThreadIdSwizzling = 0
options.overrideThreadGroupSizeX = 0
options.overrideThreadGroupSizeY = 0
options.overrideThreadGroupSizeZ = 0
options.shadowDescriptorTableUsage = Enable
options.shadowDescriptorTablePtrHigh = 2
options.extendedRobustness.robustBufferAccess = 0
options.extendedRobustness.robustImageAccess = 0
options.extendedRobustness.nullDescriptor = 0
options.optimizeTessFactor = 0
options.optimizationLevel = 2
options.threadGroupSwizzleMode = Default
options.reverseThreadGroup = 0
options.internalRtShaders = 0

