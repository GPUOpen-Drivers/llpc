
; BEGIN_SHADERTEST
; RUN: amdllpc -v %gfxip %s | FileCheck -check-prefix=SHADERTEST %s
; SHADERTEST-LABEL: {{^// LLPC}} SPIRV-to-LLVM translation results
; SHADERTEST: AMDLLPC SUCCESS
; END_SHADERTEST

[Version]
version = 6

[VsGlsl]
#version 450
layout(location = 0) in vec4 v0;
void main()
{
    gl_Position = v0;
}

[VsInfo]
entryPoint = main
userDataNode[0].type = IndirectUserDataVaPtr
userDataNode[0].offsetInDwords = 1
userDataNode[0].sizeInDwords = 1
userDataNode[0].indirectUserDataCount = 4

[GsGlsl]
#version 450 core
layout(points) in;
layout(points, max_vertices = 1) out;


out gl_PerVertex
{
    layout(xfb_buffer = 0, xfb_offset = 32) vec4 gl_Position;
};

void main()
{
    gl_Position = gl_in[0].gl_Position;
    EmitStreamVertex(0);
    EndStreamPrimitive(0);
}

[GsInfo]
entryPoint = main
userDataNode[0].type = StreamOutTableVaPtr
userDataNode[0].offsetInDwords = 0
userDataNode[0].sizeInDwords = 1

[FsGlsl]
#version 450
layout(location = 0) out vec4 fragColor;
void main()
{
    fragColor = vec4(1);
}

[FsInfo]
entryPoint = main

[GraphicsPipelineState]
topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST
patchControlPoints = 0
deviceIndex = 0
disableVertexReuse = 0
switchWinding = 0
enableMultiView = 0
depthClipEnable = 1
rasterizerDiscardEnable = 0
perSampleShading = 0
numSamples = 1
samplePatternIdx = 0
usrClipPlaneMask = 0
includeDisassembly = 0
alphaToCoverageEnable = 0
dualSourceBlendEnable = 0
colorBuffer[0].format = VK_FORMAT_R8G8B8A8_UNORM
colorBuffer[0].channelWriteMask = 15
colorBuffer[0].blendEnable = 0
colorBuffer[0].blendSrcAlphaToColor = 0


[VertexInputState]
binding[0].binding = 0
binding[0].stride = 32
binding[0].inputRate = VK_VERTEX_INPUT_RATE_VERTEX

binding[1].binding = 1
binding[1].stride = 32
binding[1].inputRate = VK_VERTEX_INPUT_RATE_INSTANCE

binding[2].binding = 2
binding[2].stride = 32
binding[2].inputRate = VK_VERTEX_INPUT_RATE_INSTANCE

binding[3].binding = 3
binding[3].stride = 32
binding[3].inputRate = VK_VERTEX_INPUT_RATE_INSTANCE

divisor[0].binding = 2
divisor[0].divisor = 5

divisor[1].binding = 3
divisor[1].divisor = 8

attribute[0].location = 0
attribute[0].binding = 0
attribute[0].format = VK_FORMAT_R32G32B32A32_SFLOAT
attribute[0].offset = 0

attribute[1].location = 1
attribute[1].binding = 0
attribute[1].format = VK_FORMAT_R32G32B32A32_SFLOAT
attribute[1].offset = 16

attribute[2].location = 2
attribute[2].binding = 1
attribute[2].format = VK_FORMAT_R32G32B32A32_SFLOAT
attribute[2].offset = 0

attribute[3].location = 3
attribute[3].binding = 1
attribute[3].format = VK_FORMAT_R32G32B32A32_SFLOAT
attribute[3].offset = 16

attribute[4].location = 4
attribute[4].binding = 2
attribute[4].format = VK_FORMAT_R32G32B32A32_SFLOAT
attribute[4].offset = 0

attribute[5].location = 5
attribute[5].binding = 2
attribute[5].format = VK_FORMAT_R32G32B32A32_SFLOAT
attribute[5].offset = 16

attribute[6].location = 6
attribute[6].binding = 3
attribute[6].format = VK_FORMAT_R32G32B32A32_SFLOAT
attribute[6].offset = 0

attribute[7].location = 7
attribute[7].binding = 3
attribute[7].format = VK_FORMAT_R32G32B32A32_SFLOAT
attribute[7].offset = 16
