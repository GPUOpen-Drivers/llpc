// NOTE: Assertions have been autogenerated by tool/update_llpc_test_checks.py UTC_ARGS: --function-signature --check-globals
// RUN: amdllpc -o - -gfxip 10.3 -emit-llvm %s | FileCheck -check-prefixes=CHECK %s
// This test verifies the optimization on workgroupId works well (i.e., lgc.shader.input.workgroupId.i32 is used not lgc.shader.input.workgroupId.v3i32)

#version 450

layout(local_size_x = 16, local_size_y = 16) in;

layout(binding = 0) buffer Buffers
{
    uint test;
};

void main()
{
    test = gl_WorkGroupID.x;
}
// CHECK-LABEL: define {{[^@]+}}@_amdgpu_cs_main
// CHECK-SAME: (i32 inreg [[GLOBALTABLE:%.*]], i32 inreg [[DESCTABLE0:%.*]], i32 inreg [[SPILLTABLE:%.*]], i32 inreg [[WORKGROUPID1:%.*]], i32 inreg [[MULTIDISPATCHINFO:%.*]], <3 x i32> [[LOCALINVOCATIONID:%.*]]) #[[ATTR0:[0-9]+]] !lgc.shaderstage !5 {
// CHECK-NEXT:  .entry:
// CHECK-NEXT:    [[TMP0:%.*]] = call i64 @llvm.amdgcn.s.getpc()
// CHECK-NEXT:    [[EXTELT_OFFSET:%.*]] = lshr i64 [[TMP0]], 32
// CHECK-NEXT:    [[DOTI1:%.*]] = trunc i64 [[EXTELT_OFFSET]] to i32
// CHECK-NEXT:    [[TMP1:%.*]] = call i32 @llvm.amdgcn.reloc.constant(metadata [[META6:![0-9]+]])
// CHECK-NEXT:    [[DOTNOT:%.*]] = icmp eq i32 [[TMP1]], 0
// CHECK-NEXT:    [[DOTI0:%.*]] = select i1 [[DOTNOT]], i32 [[DESCTABLE0]], i32 [[SPILLTABLE]]
// CHECK-NEXT:    [[DOTUPTO010:%.*]] = insertelement <2 x i32> poison, i32 [[DOTI0]], i64 0
// CHECK-NEXT:    [[TMP2:%.*]] = insertelement <2 x i32> [[DOTUPTO010]], i32 [[DOTI1]], i64 1
// CHECK-NEXT:    [[TMP3:%.*]] = bitcast <2 x i32> [[TMP2]] to i64
// CHECK-NEXT:    [[TMP4:%.*]] = call i32 @llvm.amdgcn.reloc.constant(metadata [[META7:![0-9]+]])
// CHECK-NEXT:    [[TMP5:%.*]] = zext i32 [[TMP4]] to i64
// CHECK-NEXT:    [[TMP6:%.*]] = add i64 [[TMP3]], [[TMP5]]
// CHECK-NEXT:    [[TMP7:%.*]] = inttoptr i64 [[TMP6]] to ptr addrspace(4)
// CHECK-NEXT:    [[DOTII0:%.*]] = load i32, ptr addrspace(4) [[TMP7]], align 8
// CHECK-NEXT:    [[DOTI122:%.*]] = getelementptr i32, ptr addrspace(4) [[TMP7]], i64 1
// CHECK-NEXT:    [[DOTII1:%.*]] = load i32, ptr addrspace(4) [[DOTI122]], align 4
// CHECK-NEXT:    [[TMP8:%.*]] = and i32 [[DOTII1]], 65535
// CHECK-NEXT:    [[TMP9:%.*]] = call i32 @llvm.amdgcn.reloc.constant(metadata [[META8:![0-9]+]])
// CHECK-NEXT:    [[DOTNOT1:%.*]] = icmp eq i32 [[TMP9]], 0
// CHECK-NEXT:    [[DOTIDX:%.*]] = select i1 [[DOTNOT1]], i64 8, i64 0
// CHECK-NEXT:    [[TMP10:%.*]] = getelementptr i8, ptr addrspace(4) [[TMP7]], i64 [[DOTIDX]]
// CHECK-NEXT:    [[DOTII024:%.*]] = load i32, ptr addrspace(4) [[TMP10]], align 8
// CHECK-NEXT:    [[DOTI125:%.*]] = getelementptr i32, ptr addrspace(4) [[TMP10]], i64 1
// CHECK-NEXT:    [[DOTII126:%.*]] = load i32, ptr addrspace(4) [[DOTI125]], align 4
// CHECK-NEXT:    [[DOTI18:%.*]] = select i1 [[DOTNOT1]], i32 [[DOTII1]], i32 [[TMP8]]
// CHECK-NEXT:    [[DOTI2:%.*]] = select i1 [[DOTNOT1]], i32 [[DOTII024]], i32 -1
// CHECK-NEXT:    [[DOTI3:%.*]] = select i1 [[DOTNOT1]], i32 [[DOTII126]], i32 553734060
// CHECK-NEXT:    [[DOTUPTO018:%.*]] = insertelement <4 x i32> poison, i32 [[DOTII0]], i64 0
// CHECK-NEXT:    [[DOTUPTO119:%.*]] = insertelement <4 x i32> [[DOTUPTO018]], i32 [[DOTI18]], i64 1
// CHECK-NEXT:    [[DOTUPTO220:%.*]] = insertelement <4 x i32> [[DOTUPTO119]], i32 [[DOTI2]], i64 2
// CHECK-NEXT:    [[TMP11:%.*]] = insertelement <4 x i32> [[DOTUPTO220]], i32 [[DOTI3]], i64 3
// CHECK-NEXT:    call void @llvm.amdgcn.raw.buffer.store.i32(i32 [[WORKGROUPID1]], <4 x i32> [[TMP11]], i32 0, i32 0, i32 0)
// CHECK-NEXT:    ret void
//
//.
// CHECK: attributes #[[ATTR0]] = { nounwind memory(readwrite) "amdgpu-flat-work-group-size"="256,256" "amdgpu-memory-bound"="false" "amdgpu-no-workgroup-id-y" "amdgpu-no-workgroup-id-z" "amdgpu-unroll-threshold"="700" "amdgpu-wave-limiter"="false" "amdgpu-work-group-info-arg-no"="4" "denormal-fp-math-f32"="preserve-sign" "target-features"=",+wavefrontsize64,+cumode,+enable-flat-scratch" }
// CHECK: attributes #[[ATTR1:[0-9]+]] = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
// CHECK: attributes #[[ATTR2:[0-9]+]] = { nounwind willreturn memory(none) }
// CHECK: attributes #[[ATTR3:[0-9]+]] = { nocallback nofree nosync nounwind willreturn memory(write) }
//.
