; NOTE: Assertions have been autogenerated by tool/update_llpc_test_checks.py UTC_ARGS: --check-pal-metadata
; Test to check that dummy sgpr user data registers are inserted when required
; This test checks wave32 compute shaders

; RUN: amdllpc -gfxip=11.0 -o - -filetype=asm %s | FileCheck -check-prefix=CHECK %s

[Version]
version = 54

[CsSpirv]
               OpCapability Shader
               OpCapability ImageBuffer
               OpCapability StorageImageExtendedFormats
          %2 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main"
               OpExecutionModeId %main LocalSizeId %uint_1 %uint_1 %uint_1
          %1 = OpString "SgprUserDataInit.comp"
               OpSource GLSL 450 %1 "#version 450 core

layout(set = 0, binding = 0, rg16) uniform imageBuffer img2D;

layout(set = 0, binding = 1) buffer BO
{
    vec4 mIn;
};

void main()
{
    imageStore(img2D, 0, mIn);
}

"
               OpName %main "main"
               OpName %img2D "img2D"
               OpName %BO "BO"
               OpMemberName %BO 0 "mIn"
               OpName %_ ""
               OpModuleProcessed "client vulkan100"
               OpModuleProcessed "target-env spirv1.6"
               OpModuleProcessed "target-env vulkan1.1"
               OpModuleProcessed "entry-point main"
               OpDecorate %img2D DescriptorSet 0
               OpDecorate %img2D Binding 0
               OpMemberDecorate %BO 0 Offset 0
               OpDecorate %BO Block
               OpDecorate %_ DescriptorSet 0
               OpDecorate %_ Binding 1
       %void = OpTypeVoid
          %4 = OpTypeFunction %void
       %uint = OpTypeInt 32 0
     %uint_1 = OpConstant %uint 1
      %float = OpTypeFloat 32
         %10 = OpTypeImage %float Buffer 0 0 0 2 Rg16
%_ptr_UniformConstant_10 = OpTypePointer UniformConstant %10
      %img2D = OpVariable %_ptr_UniformConstant_10 UniformConstant
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
    %v4float = OpTypeVector %float 4
         %BO = OpTypeStruct %v4float
%_ptr_StorageBuffer_BO = OpTypePointer StorageBuffer %BO
          %_ = OpVariable %_ptr_StorageBuffer_BO StorageBuffer
%_ptr_StorageBuffer_v4float = OpTypePointer StorageBuffer %v4float
       %main = OpFunction %void None %4
          %6 = OpLabel
         %13 = OpLoad %10 %img2D
         %21 = OpAccessChain %_ptr_StorageBuffer_v4float %_ %int_0
         %22 = OpLoad %v4float %21
               OpImageWrite %13 %int_0 %22
               OpReturn
               OpFunctionEnd

[CsInfo]
entryPoint = main
options.trapPresent = 0
options.debugMode = 0
options.enablePerformanceData = 0
options.allowReZ = 0
options.vgprLimit = 0
options.sgprLimit = 0
options.maxThreadGroupsPerComputeUnit = 0
options.waveSize = 32
options.wgpMode = 0
options.waveBreakSize = None
options.forceLoopUnrollCount = 0
options.useSiScheduler = 0
options.updateDescInElf = 0
options.allowVaryWaveSize = 0
options.enableLoadScalarizer = 0
options.disableLicm = 0
options.unrollThreshold = 0
options.scalarThreshold = 0
options.disableLoopUnroll = 0
options.fp32DenormalMode = Auto
options.adjustDepthImportVrs = 0
options.disableLicmThreshold = 0
options.unrollHintThreshold = 0
options.dontUnrollHintThreshold = 0
options.fastMathFlags = 0
options.disableFastMathFlags = 0
options.ldsSpillLimitDwords = 0
options.scalarizeWaterfallLoads = 0

[ResourceMapping]
userDataNode[0].type = DescriptorTableVaPtr
userDataNode[0].offsetInDwords = 0
userDataNode[0].sizeInDwords = 1
userDataNode[0].next[0].type = DescriptorTexelBuffer
userDataNode[0].next[0].offsetInDwords = 0
userDataNode[0].next[0].sizeInDwords = 4
userDataNode[0].next[0].set = 0x00000000
userDataNode[0].next[0].binding = 0
userDataNode[0].next[1].type = DescriptorBuffer
userDataNode[0].next[1].offsetInDwords = 4
userDataNode[0].next[1].sizeInDwords = 4
userDataNode[0].next[1].set = 0x00000000
userDataNode[0].next[1].binding = 1

[ComputePipelineState]
deviceIndex = 0
options.includeDisassembly = 0
options.scalarBlockLayout = 0
options.resourceLayoutScheme = Compact
options.includeIr = 0
options.robustBufferAccess = 0
options.reconfigWorkgroupLayout = 0
options.forceCsThreadIdSwizzling = 0
options.shadowDescriptorTableUsage = Auto
options.shadowDescriptorTablePtrHigh = 0
options.extendedRobustness.robustBufferAccess = 0
options.extendedRobustness.robustImageAccess = 0
options.extendedRobustness.nullDescriptor = 0
options.optimizeTessFactor = 0
options.optimizationLevel = 2
options.threadGroupSwizzleMode = Default
; CHECK-LABEL: amdgpu_cs_main:
; CHECK:         s_getpc_b64 s[2:3]
; CHECK-NEXT:    s_mov_b32 s0, s1
; CHECK-NEXT:    s_mov_b32 s1, s3
; CHECK-NEXT:    v_mov_b32_e32 v2, 0
; CHECK-NEXT:    s_load_b256 s[0:7], s[0:1], 0x0
; CHECK-NEXT:    s_waitcnt lgkmcnt(0)
; CHECK-NEXT:    s_buffer_load_b64 s[4:5], s[4:7], 0x0
; CHECK-NEXT:    s_waitcnt lgkmcnt(0)
; CHECK-NEXT:    v_dual_mov_b32 v0, s4 :: v_dual_mov_b32 v1, s5
; CHECK-NEXT:    buffer_store_format_xy v[0:1], v2, s[0:3], 0 idxen
; CHECK-NEXT:    s_nop 0
; CHECK-NEXT:    s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)
; CHECK-NEXT:    s_endpgm
;
; CHECK-LABEL: .amdgpu_pal_metadata
; CHECK-NEXT: ---
; CHECK-NEXT: amdpal.pipelines:
; CHECK-NEXT:   - .api:            Vulkan
; CHECK-NEXT:     .compute_registers:
; CHECK-NEXT:       .tg_size_en:     true
; CHECK-NEXT:       .tgid_x_en:      false
; CHECK-NEXT:       .tgid_y_en:      false
; CHECK-NEXT:       .tgid_z_en:      false
; CHECK-NEXT:       .tidig_comp_cnt: 0
; CHECK-NEXT:     .hardware_stages:
; CHECK-NEXT:       .cs:
; CHECK-NEXT:         .checksum_value: 0x{{[0-9a-f]+}}
; CHECK-NEXT:         .debug_mode:     false
; CHECK-NEXT:         .entry_point:    _amdgpu_cs_main
; CHECK-NEXT:         .excp_en:        0
; CHECK-NEXT:         .float_mode:     0xc0
; CHECK-NEXT:         .ieee_mode:      false
; CHECK-NEXT:         .image_op:       false
; CHECK-NEXT:         .lds_size:       0
; CHECK-NEXT:         .mem_ordered:    true
; CHECK-NEXT:         .scratch_en:     false
; CHECK-NEXT:         .scratch_memory_size: 0
; CHECK-NEXT:         .sgpr_count:     0x11
; CHECK-NEXT:         .sgpr_limit:     0x6a
; CHECK-NEXT:         .threadgroup_dimensions:
; CHECK-NEXT:           - 0x1
; CHECK-NEXT:           - 0x1
; CHECK-NEXT:           - 0x1
; CHECK-NEXT:         .trap_present:   false
; CHECK-NEXT:         .user_data_reg_map:
; CHECK-NEXT:           - 0x10000000
; CHECK-NEXT:           - 0
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:           - 0xffffffff
; CHECK-NEXT:         .user_sgprs:     0x10
; CHECK-NEXT:         .vgpr_count:     0x3
; CHECK-NEXT:         .vgpr_limit:     0x100
; CHECK-NEXT:         .wavefront_size: 0x20
; CHECK-NEXT:         .wgp_mode:       false
; CHECK-NEXT:     .internal_pipeline_hash:
; CHECK-NEXT:       - 0x{{[0-9a-f]+}}
; CHECK-NEXT:       - 0x{{[0-9a-f]+}}
; CHECK-NEXT:     .registers:      {}
; CHECK-NEXT:     .shaders:
; CHECK-NEXT:       .compute:
; CHECK-NEXT:         .api_shader_hash:
; CHECK-NEXT:           - 0x{{[0-9a-f]+}}
; CHECK-NEXT:           - 0
; CHECK-NEXT:         .hardware_mapping:
; CHECK-NEXT:           - .cs
; CHECK-NEXT:     .spill_threshold: 0xffff
; CHECK-NEXT:     .type:           Cs
; CHECK-NEXT:     .user_data_limit: 0x1
; CHECK-NEXT:     .xgl_cache_info:
; CHECK-NEXT:       .128_bit_cache_hash:
; CHECK-NEXT:         - 0x{{[0-9a-f]+}}
; CHECK-NEXT:         - 0x{{[0-9a-f]+}}
; CHECK-NEXT:       .llpc_version: {{.*}}
; CHECK-NEXT: amdpal.version:
; CHECK-NEXT:   - 0x3
; CHECK-NEXT:   - 0
; CHECK-NEXT: ...
