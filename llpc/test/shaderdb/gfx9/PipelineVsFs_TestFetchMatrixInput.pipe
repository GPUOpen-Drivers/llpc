; Test that a fetch shader for 1 input is handled correctly.

; BEGIN_SHADERTEST
; RUN: amdllpc -use-relocatable-shader-elf -auto-layout-desc -spvgen-dir=%spvgendir% -v %gfxip %s | FileCheck -check-prefix=SHADERTEST %s
; Skip to the patchign resuts for the fetch shader
; SHADERTEST: LLPC pipeline patching results
; Check the inputs to the fetch shader.  This should be all of the regular inputs.  There is one vertex attribute for each row of the matrix.  The 4 vectors at the end.
; SHADERTEST: define amdgpu_vs void @_amdgpu_vs_main(i32 inreg %0, i32 inreg %1, i32 inreg %resNode0, i32 inreg %2, i32 inreg %3, i32 inreg %4, i32 %5, i32 %6, i32 %7, i32 %8, <4 x float> %9, <4 x float> %10, <4 x float> %11, <4 x float> %12)
; SHADERTEST: LLPC pipeline patching results
; SHADERTEST: LLPC pipeline patching results
; Check the inputs to the fetch shader.  This should match the vertex shader exepct we include one extra inreg parameter that corresponds to the pointer to the scratch space and remove the vertex attribute.
; SHADERTEST: define amdgpu_vs %0 @_amdgpu_vs_main(i32 inreg %0, i32 inreg %1, i32 inreg %2, i32 inreg %vbTablePtr, i32 inreg %3, i32 inreg %4, i32 inreg %5, i32 %6, i32 %7, i32 %8, i32 %9)
; Trusting simpler tests that locations are loaded and return correctly.
; END_SHADERTEST

[Version]
version = 40

[VsSpirv]
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Vertex %2 "main" %3 %4
               OpSource GLSL 450
               OpMemberDecorate %_struct_5 0 ColMajor
               OpMemberDecorate %_struct_5 0 Offset 0
               OpMemberDecorate %_struct_5 0 MatrixStride 16
               OpMemberDecorate %_struct_5 1 ColMajor
               OpMemberDecorate %_struct_5 1 Offset 64
               OpMemberDecorate %_struct_5 1 MatrixStride 16
               OpMemberDecorate %_struct_5 2 Offset 128
               OpDecorate %_struct_5 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 0
               OpMemberDecorate %_struct_7 0 BuiltIn Position
               OpDecorate %_struct_7 Block
               OpDecorate %4 Location 0
       %void = OpTypeVoid
          %9 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%mat4v4float = OpTypeMatrix %v4float 4
  %_struct_5 = OpTypeStruct %mat4v4float %mat4v4float %float
%_ptr_Uniform__struct_5 = OpTypePointer Uniform %_struct_5
          %6 = OpVariable %_ptr_Uniform__struct_5 Uniform
        %int = OpTypeInt 32 1
  %_struct_7 = OpTypeStruct %v4float
%_ptr_Output__struct_7 = OpTypePointer Output %_struct_7
          %3 = OpVariable %_ptr_Output__struct_7 Output
      %int_0 = OpConstant %int 0
%_ptr_Uniform_mat4v4float = OpTypePointer Uniform %mat4v4float
%_ptr_Input_mat4v4float = OpTypePointer Input %mat4v4float
          %4 = OpVariable %_ptr_Input_mat4v4float Input
%_ptr_Output_v4float = OpTypePointer Output %v4float
    %float_1 = OpConstant %float 1
          %2 = OpFunction %void None %9
         %21 = OpLabel
         %22 = OpAccessChain %_ptr_Uniform_mat4v4float %6 %int_0
         %23 = OpLoad %mat4v4float %22
         %24 = OpLoad %mat4v4float %4
         %25 = OpCompositeExtract %v4float %24 0
         %26 = OpCompositeInsert %v4float %float_1 %25 3
         %27 = OpMatrixTimesVector %v4float %23 %26
         %28 = OpAccessChain %_ptr_Output_v4float %3 %int_0
               OpStore %28 %27
               OpReturn
               OpFunctionEnd

[VsInfo]
entryPoint = main
userDataNode[0].type = DescriptorTableVaPtr
userDataNode[0].offsetInDwords = 0
userDataNode[0].sizeInDwords = 1
userDataNode[0].next[0].type = DescriptorBuffer
userDataNode[0].next[0].offsetInDwords = 0
userDataNode[0].next[0].sizeInDwords = 4
userDataNode[0].next[0].set = 0
userDataNode[0].next[0].binding = 0
userDataNode[0].next[1].type = DescriptorCombinedTexture
userDataNode[0].next[1].offsetInDwords = 4
userDataNode[0].next[1].sizeInDwords = 12
userDataNode[0].next[1].set = 0
userDataNode[0].next[1].binding = 1
userDataNode[0].next[2].type = DescriptorBuffer
userDataNode[0].next[2].offsetInDwords = 16
userDataNode[0].next[2].sizeInDwords = 4
userDataNode[0].next[2].set = 0
userDataNode[0].next[2].binding = 2
userDataNode[1].type = IndirectUserDataVaPtr
userDataNode[1].offsetInDwords = 1
userDataNode[1].sizeInDwords = 1
userDataNode[1].indirectUserDataCount = 4

options.trapPresent = 0
options.debugMode = 0
options.enablePerformanceData = 0
options.allowReZ = 0
options.vgprLimit = 0
options.sgprLimit = 0
options.maxThreadGroupsPerComputeUnit = 0
options.waveSize = 0
options.wgpMode = 0
options.waveBreakSize = DrawTime
options.forceLoopUnrollCount = 0
options.useSiScheduler = 0
options.updateDescInElf = 0
options.allowVaryWaveSize = 0
options.enableLoadScalarizer = 0
options.disableLicm = 0
options.unrollThreshold = 0
options.scalarThreshold = 0

[FsSpirv]
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %outFragColor
               OpExecutionMode %main OriginUpperLeft
               OpSource GLSL 450
               OpName %main "main"
               OpName %outFragColor "outFragColor"
               OpDecorate %outFragColor Location 0
       %void = OpTypeVoid
          %5 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
%outFragColor = OpVariable %_ptr_Output_v4float Output
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
         %11 = OpConstantComposite %v4float %float_0 %float_1 %float_0 %float_1
       %main = OpFunction %void None %5
         %12 = OpLabel
               OpStore %outFragColor %11
               OpReturn
               OpFunctionEnd

[FsInfo]
entryPoint = main
userDataNode[0].type = DescriptorTableVaPtr
userDataNode[0].offsetInDwords = 0
userDataNode[0].sizeInDwords = 1
userDataNode[0].next[0].type = DescriptorBuffer
userDataNode[0].next[0].offsetInDwords = 0
userDataNode[0].next[0].sizeInDwords = 4
userDataNode[0].next[0].set = 0
userDataNode[0].next[0].binding = 0
userDataNode[0].next[1].type = DescriptorCombinedTexture
userDataNode[0].next[1].offsetInDwords = 4
userDataNode[0].next[1].sizeInDwords = 12
userDataNode[0].next[1].set = 0
userDataNode[0].next[1].binding = 1
userDataNode[0].next[2].type = DescriptorBuffer
userDataNode[0].next[2].offsetInDwords = 16
userDataNode[0].next[2].sizeInDwords = 4
userDataNode[0].next[2].set = 0
userDataNode[0].next[2].binding = 2

options.trapPresent = 0
options.debugMode = 0
options.enablePerformanceData = 0
options.allowReZ = 0
options.vgprLimit = 0
options.sgprLimit = 0
options.maxThreadGroupsPerComputeUnit = 0
options.waveSize = 0
options.wgpMode = 0
options.waveBreakSize = DrawTime
options.forceLoopUnrollCount = 0
options.useSiScheduler = 0
options.updateDescInElf = 0
options.allowVaryWaveSize = 0
options.enableLoadScalarizer = 0
options.disableLicm = 0
options.unrollThreshold = 0
options.scalarThreshold = 0

[GraphicsPipelineState]
topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST
patchControlPoints = 0
deviceIndex = 0
disableVertexReuse = 0
switchWinding = 0
enableMultiView = 0
depthClipEnable = 1
rasterizerDiscardEnable = 0
perSampleShading = 0
numSamples = 1
samplePatternIdx = 0
usrClipPlaneMask = 0
polygonMode = VK_POLYGON_MODE_FILL
cullMode = VK_CULL_MODE_NONE
frontFace = VK_FRONT_FACE_COUNTER_CLOCKWISE
depthBiasEnable = 0
alphaToCoverageEnable = 0
dualSourceBlendEnable = 0
colorBuffer[0].format = VK_FORMAT_B8G8R8A8_UNORM
colorBuffer[0].channelWriteMask = 15
colorBuffer[0].blendEnable = 0
colorBuffer[0].blendSrcAlphaToColor = 1
nggState.enableNgg = 0
nggState.enableGsUse = 0
nggState.forceNonPassthrough = 0
nggState.alwaysUsePrimShaderTable = 0
nggState.compactMode = NggCompactSubgroup
nggState.enableFastLaunch = 0
nggState.enableVertexReuse = 0
nggState.enableBackfaceCulling = 0
nggState.enableFrustumCulling = 0
nggState.enableBoxFilterCulling = 0
nggState.enableSphereCulling = 0
nggState.enableSmallPrimFilter = 0
nggState.enableCullDistanceCulling = 0
nggState.backfaceExponent = 0
nggState.subgroupSizing = Auto
nggState.primsPerSubgroup = 0
nggState.vertsPerSubgroup = 0
options.includeDisassembly = 0
options.scalarBlockLayout = 0
options.includeIr = 0
options.robustBufferAccess = 0
options.reconfigWorkgroupLayout = 0


[VertexInputState]
binding[0].binding = 0
binding[0].stride = 44
binding[0].inputRate = VK_VERTEX_INPUT_RATE_VERTEX
attribute[0].location = 0
attribute[0].binding = 0
attribute[0].format = VK_FORMAT_R32G32B32_SFLOAT
attribute[0].offset = 0
attribute[1].location = 1
attribute[1].binding = 0
attribute[1].format = VK_FORMAT_R32G32_SFLOAT
attribute[1].offset = 12
attribute[2].location = 2
attribute[2].binding = 0
attribute[2].format = VK_FORMAT_R32G32B32_SFLOAT
attribute[2].offset = 20
attribute[3].location = 3
attribute[3].binding = 0
attribute[3].format = VK_FORMAT_R32G32B32_SFLOAT
attribute[3].offset = 32
