; This test checks that pipeline patching is done for each shader separately.
; It shows that the shaders were compiled individually and then linked.

; BEGIN_SHADERTEST
; RUN: amdllpc -use-relocatable-shader-elf -auto-layout-desc -spvgen-dir=%spvgendir% -v %gfxip %s | FileCheck -check-prefix=SHADERTEST %s
; SHADERTEST-LABEL: {{^// LLPC}} pipeline patching results
; SHADERTEST-EMPTY:
; SHADERTEST-NEXT: ; ModuleID = 'llpcPipeline'
; SHADERTEST-NEXT: source_filename = "llpcvertex
; SHADERTEST-LABEL: {{^// LLPC}} pipeline patching results
; SHADERTEST-EMPTY:
; SHADERTEST-NEXT: ; ModuleID = 'llpcPipeline'
; SHADERTEST-NEXT: source_filename = "llpcfragment
; SHADERTEST: AMDLLPC SUCCESS
; END_SHADERTEST


[Version]
version = 38

[VsSpirv]
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Vertex %1 "main" %2 %3 %4 %5 %6
               OpSource GLSL 450
               OpDecorate %2 Location 0
               OpDecorate %3 Location 1
               OpMemberDecorate %_struct_7 0 BuiltIn Position
               OpMemberDecorate %_struct_7 1 BuiltIn PointSize
               OpMemberDecorate %_struct_7 2 BuiltIn ClipDistance
               OpMemberDecorate %_struct_7 3 BuiltIn CullDistance
               OpDecorate %_struct_7 Block
               OpDecorate %5 Location 4
               OpDecorate %6 Location 3
       %void = OpTypeVoid
          %9 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v3float = OpTypeVector %float 3
%_ptr_Output_v3float = OpTypePointer Output %v3float
          %2 = OpVariable %_ptr_Output_v3float Output
       %uint = OpTypeInt 32 0
     %uint_1 = OpConstant %uint 1
%float_0_100000001 = OpConstant %float 0.100000001
          %3 = OpVariable %_ptr_Output_v3float Output
    %v4float = OpTypeVector %float 4
        %int = OpTypeInt 32 1
%_arr_float_uint_1 = OpTypeArray %float %uint_1
  %_struct_7 = OpTypeStruct %v4float %float %_arr_float_uint_1 %_arr_float_uint_1
%_ptr_Output__struct_7 = OpTypePointer Output %_struct_7
          %4 = OpVariable %_ptr_Output__struct_7 Output
      %int_0 = OpConstant %int 0
%_ptr_Output_v4float = OpTypePointer Output %v4float
         %22 = OpConstantComposite %v3float %float_0_100000001 %float_0_100000001 %float_0_100000001
         %23 = OpConstantComposite %v4float %float_0_100000001 %float_0_100000001 %float_0_100000001 %float_0_100000001
          %5 = OpVariable %_ptr_Output_v3float Output
          %6 = OpVariable %_ptr_Output_v3float Output
          %1 = OpFunction %void None %9
         %24 = OpLabel
         %25 = OpAccessChain %_ptr_Output_v4float %4 %int_0
               OpStore %25 %23
               OpStore %2 %22
               OpStore %5 %22
               OpStore %6 %22
               OpStore %3 %22
               OpReturn
               OpFunctionEnd

[VsInfo]
entryPoint = main


[FsSpirv]
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %2 "main" %3 %4 %5 %6 %7
               OpExecutionMode %2 OriginUpperLeft
               OpSource GLSL 450
               OpSourceExtension "GL_ARB_separate_shader_objects"
               OpSourceExtension "GL_ARB_shading_language_420pack"
               OpDecorate %3 Location 0
               OpDecorate %4 Location 4
               OpDecorate %5 Location 3
               OpDecorate %6 Location 1
               OpDecorate %7 Location 0
       %void = OpTypeVoid
          %9 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v3float = OpTypeVector %float 3
%_ptr_Input_v3float = OpTypePointer Input %v3float
          %3 = OpVariable %_ptr_Input_v3float Input
          %4 = OpVariable %_ptr_Input_v3float Input
          %5 = OpVariable %_ptr_Input_v3float Input
          %6 = OpVariable %_ptr_Input_v3float Input
 %float_0_75 = OpConstant %float 0.75
         %14 = OpConstantComposite %v3float %float_0_75 %float_0_75 %float_0_75
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %7 = OpVariable %_ptr_Output_v4float Output
          %2 = OpFunction %void None %9
         %17 = OpLabel
         %18 = OpLoad %v3float %3
         %19 = OpLoad %v3float %4
         %20 = OpLoad %v3float %5
         %21 = OpLoad %v3float %6
         %22 = OpFAdd %v3float %18 %19
         %23 = OpFAdd %v3float %20 %21
         %24 = OpFAdd %v3float %22 %23
         %25 = OpVectorShuffle %v4float %24 %14 0 1 2 3
               OpStore %7 %25
               OpReturn
               OpFunctionEnd
[FsInfo]
entryPoint = main
