; NOTE: Assertions have been autogenerated by tool/update_llpc_test_checks.py
; RUN: amdllpc -o - -filetype=asm %s | FileCheck -check-prefixes=CHECK %s
[Version]
version = 70

[VsGlsl]
#version 450
layout(location = 0) in vec4 in_position;
layout(set = 0, binding = 0) uniform buf
{
  vec4 z_coord;
};

out gl_PerVertex
{
  vec4 gl_Position;
};

void main()
{
  const float z = gl_VertexIndex < 3 ? z_coord.x : z_coord.y;
  gl_Position = vec4(in_position.x, in_position.y, z, 1.0f);
}

[VsInfo]
entryPoint = main

[ResourceMapping]
userDataNode[0].visibility = 2
userDataNode[0].type = IndirectUserDataVaPtr
userDataNode[0].offsetInDwords = 0
userDataNode[0].sizeInDwords = 1
userDataNode[0].indirectUserDataCount = 0
userDataNode[1].visibility = 2
userDataNode[1].type = DescriptorTableVaPtr
userDataNode[1].offsetInDwords = 1
userDataNode[1].sizeInDwords = 1
userDataNode[1].next[0].type = InlineBuffer
userDataNode[1].next[0].offsetInDwords = 0
userDataNode[1].next[0].sizeInDwords = 1032
userDataNode[1].next[0].set = 0xFFFFFFFF
userDataNode[1].next[0].binding = 5
userDataNode[1].next[0].strideInDwords = 0
userDataNode[2].visibility = 4
userDataNode[2].type = StreamOutTableVaPtr
userDataNode[2].offsetInDwords = 3
userDataNode[2].sizeInDwords = 1
userDataNode[3].visibility = 2
userDataNode[3].type = DescriptorTableVaPtr
userDataNode[3].offsetInDwords = 5
userDataNode[3].sizeInDwords = 1
userDataNode[3].next[0].type = DescriptorConstBuffer
userDataNode[3].next[0].offsetInDwords = 0
userDataNode[3].next[0].sizeInDwords = 4
userDataNode[3].next[0].set = 0x00000000
userDataNode[3].next[0].binding = 0
userDataNode[3].next[0].strideInDwords = 0

[GraphicsPipelineState]
unlinked = 1
; CHECK-LABEL: amdgpu_vs_main:
; CHECK:         s_getpc_b64 s[4:5]
; CHECK-NEXT:    s_mov_b32 s0, s1
; CHECK-NEXT:    s_mov_b32 s1, s5
; CHECK-NEXT:    v_add_nc_u32_e32 v0, s2, v0
; CHECK-NEXT:    s_load_dwordx4 s[4:7], s[0:1], 0x0
; CHECK-NEXT:    v_mov_b32_e32 v1, 1.0
; CHECK-NEXT:    v_cmp_lt_i32_e32 vcc_lo, 2, v0
; CHECK-NEXT:    v_cndmask_b32_e64 v0, 0, 1, vcc_lo
; CHECK-NEXT:    v_lshlrev_b32_e32 v0, 2, v0
; CHECK-NEXT:    s_waitcnt lgkmcnt(0)
; CHECK-NEXT:    buffer_load_dword v0, v0, s[4:7], 0 offen
; CHECK-NEXT:    s_waitcnt vmcnt(0)
; CHECK-NEXT:    exp pos0 v0, v0, v0, v1 done
; CHECK-NEXT:    s_endpgm
