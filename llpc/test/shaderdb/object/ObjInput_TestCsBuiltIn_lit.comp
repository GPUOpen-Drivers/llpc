/*
 ***********************************************************************************************************************
 *
 *  Copyright (c) 2024-2025 Advanced Micro Devices, Inc. All Rights Reserved.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to
 *  deal in the Software without restriction, including without limitation the
 *  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 *  sell copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 *  IN THE SOFTWARE.
 *
 **********************************************************************************************************************/

#version 450

layout(binding = 0, std430) buffer Buffer
{
    uvec4 o[100];
};

layout(local_size_x = 2, local_size_y = 3) in;
void main()
{
    o[0].xyz = gl_NumWorkGroups;
    o[1].xyz = gl_WorkGroupSize;
    uint flatIdx = gl_GlobalInvocationID.x + gl_GlobalInvocationID.y * gl_NumWorkGroups.x;
    o[flatIdx * 4 + 2].xyz = gl_WorkGroupID;
    o[flatIdx * 4 + 3].xyz = gl_LocalInvocationID;
    o[flatIdx * 4 + 4].xyz = gl_GlobalInvocationID;
    o[flatIdx * 4 + 5].x = gl_LocalInvocationIndex;
}

// BEGIN_SHADERTEST
/*
; RUN: amdllpc -v %gfxip %s | FileCheck -check-prefix=SHADERTEST %s
; SHADERTEST-LABEL: {{^// LLPC}} SPIRV-to-LLVM translation results
; SHADERTEST-LABEL: {{^// LLPC}} FE lowering results
; SHADERTEST: call i32 (...) @lgc.create.read.builtin.input.i32(i32 29,
; SHADERTEST: call <3 x i32> (...) @lgc.create.read.builtin.input.v3i32(i32 27,
; SHADERTEST: call <3 x i32> (...) @lgc.create.read.builtin.input.v3i32(i32 26,
; SHADERTEST: call <3 x i32> (...) @lgc.create.read.builtin.input.v3i32(i32 28,
; SHADERTEST: call <3 x i32> (...) @lgc.create.read.builtin.input.v3i32(i32 24,
; SHADERTEST: AMDLLPC SUCCESS
*/
// END_SHADERTEST
