; NOTE: Assertions have been autogenerated by tool/update_llpc_test_checks.py
; RUN: amdllpc -o - -gfxip 11.0.1 -emit-lgc %s | FileCheck -check-prefixes=CHECK %s
[Version]
version = 70

[CsGlsl]
#version 460
#extension GL_EXT_ray_tracing : enable
#extension GL_EXT_ray_query : require

struct Ray { vec3 pos; float tmin; vec3 dir; float tmax; };
layout(set =0, binding = 1) uniform accelerationStructureEXT topLevelAS;
layout(std430, set = 0, binding = 0) buffer Results { vec2 results[]; };
layout(std430, set = 0, binding = 2) buffer Rays { Ray rays[]; };
layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

void main()
{
    uint index = (gl_NumWorkGroups.x * gl_WorkGroupSize.x) * gl_GlobalInvocationID.y + gl_GlobalInvocationID.x;
    uint rayFlags = gl_RayFlagsOpaqueEXT;
    uint cullMask = 0xff;
	Ray ray = rays[index];
    rayQueryEXT q[3];
    rayQueryInitializeEXT(q[2], topLevelAS, rayFlags, cullMask, ray.pos, ray.tmin, ray.dir, ray.tmax);
    bool proceed = rayQueryProceedEXT(q[2]);
    if(!proceed) return;
    uint committedStatus = rayQueryGetIntersectionTypeEXT(q[2], true);
    switch (committedStatus)
    {
    case gl_RayQueryCommittedIntersectionTriangleEXT:
        {
            results[index] = rayQueryGetIntersectionBarycentricsEXT(q[2], true);
            break;
        }
    default:
        break;
    }
}

[CsInfo]
entryPoint = main
options.clientHash = 0x0, 0x0
options.trapPresent = 0
options.debugMode = 0
options.enablePerformanceData = 0
options.allowReZ = 0
options.vgprLimit = 0
options.sgprLimit = 0
options.maxThreadGroupsPerComputeUnit = 0
options.subgroupSize = 0
options.waveSize = 64
options.wgpMode = 0
options.waveBreakSize = None
options.forceLoopUnrollCount = 0
options.enableLoadScalarizer = 0
options.allowVaryWaveSize = 0
options.useSiScheduler = 0
options.disableCodeSinking = 0
options.favorLatencyHiding = 0
options.disableLicm = 0
options.unrollThreshold = 0
options.scalarThreshold = 0
options.disableLoopUnroll = 0
options.adjustDepthImportVrs = 0
options.fp32DenormalMode = Auto
options.disableLicmThreshold = 0
options.unrollHintThreshold = 0
options.dontUnrollHintThreshold = 0
options.noContractOpDot = 0
options.fastMathFlags = 0
options.disableFastMathFlags = 0
options.ldsSpillLimitDwords = 0
options.scalarizeWaterfallLoads = 0
options.overrideForceThreadIdSwizzling = 0
options.overrideShaderThreadGroupSizeX = 0
options.overrideShaderThreadGroupSizeY = 0
options.overrideShaderThreadGroupSizeZ = 0
options.forceLateZ = 0
options.nsaThreshold = 0
options.aggressiveInvariantLoads = Auto
options.workaroundStorageImageFormats = 0
options.workaroundInitializeOutputsToZero = 0
options.disableFMA = 0
options.disableReadFirstLaneWorkaround = 0
options.backwardPropagateNoContract = 0
options.forwardPropagateNoContract = 1
options.workgroupRoundRobin = 0
options.constantBufferBindingOffset = 0

[ResourceMapping]
userDataNode[0].visibility = 128
userDataNode[0].type = DescriptorTableVaPtr
userDataNode[0].offsetInDwords = 7
userDataNode[0].sizeInDwords = 1
userDataNode[0].next[0].type = DescriptorConstBufferCompact
userDataNode[0].next[0].offsetInDwords = 0
userDataNode[0].next[0].sizeInDwords = 2
userDataNode[0].next[0].set = 0x0000005D
userDataNode[0].next[0].binding = 17
userDataNode[0].next[0].strideInDwords = 0
userDataNode[0].next[1].type = DescriptorConstBuffer
userDataNode[0].next[1].offsetInDwords = 2
userDataNode[0].next[1].sizeInDwords = 4
userDataNode[0].next[1].set = 0x0000005D
userDataNode[0].next[1].binding = 0
userDataNode[0].next[1].strideInDwords = 0
userDataNode[0].next[2].type = DescriptorBuffer
userDataNode[0].next[2].offsetInDwords = 6
userDataNode[0].next[2].sizeInDwords = 4
userDataNode[0].next[2].set = 0x0000005D
userDataNode[0].next[2].binding = 1
userDataNode[0].next[2].strideInDwords = 0
userDataNode[1].visibility = 2
userDataNode[1].type = StreamOutTableVaPtr
userDataNode[1].offsetInDwords = 2
userDataNode[1].sizeInDwords = 1
userDataNode[2].visibility = 128
userDataNode[2].type = DescriptorTableVaPtr
userDataNode[2].offsetInDwords = 6
userDataNode[2].sizeInDwords = 1
userDataNode[2].next[0].type = DescriptorBuffer
userDataNode[2].next[0].offsetInDwords = 0
userDataNode[2].next[0].sizeInDwords = 4
userDataNode[2].next[0].set = 0x00000000
userDataNode[2].next[0].binding = 0
userDataNode[2].next[0].strideInDwords = 0
userDataNode[2].next[1].type = DescriptorConstBuffer
userDataNode[2].next[1].offsetInDwords = 4
userDataNode[2].next[1].sizeInDwords = 4
userDataNode[2].next[1].set = 0x00000000
userDataNode[2].next[1].binding = 1
userDataNode[2].next[1].strideInDwords = 0
userDataNode[2].next[2].type = DescriptorBuffer
userDataNode[2].next[2].offsetInDwords = 8
userDataNode[2].next[2].sizeInDwords = 4
userDataNode[2].next[2].set = 0x00000000
userDataNode[2].next[2].binding = 2
userDataNode[2].next[2].strideInDwords = 0

[ComputePipelineState]
deviceIndex = 0
options.includeDisassembly = 0
options.scalarBlockLayout = 1
options.reconfigWorkgroupLayout = 0
options.forceCsThreadIdSwizzling = 0
options.includeIr = 0
options.robustBufferAccess = 0
options.enableRelocatableShaderElf = 0
options.disableImageResourceCheck = 0
options.enableScratchAccessBoundsChecks = 0
options.enableImplicitInvariantExports = 1
options.shadowDescriptorTableUsage = Disable
options.shadowDescriptorTablePtrHigh = 0
options.extendedRobustness.robustBufferAccess = 0
options.extendedRobustness.robustImageAccess = 1
options.extendedRobustness.nullDescriptor = 0
options.enableRayQuery = 0
options.optimizeTessFactor = 1
options.enableInterpModePatch = 0
options.pageMigrationEnabled = 0
options.optimizationLevel = 2
options.overrideThreadGroupSizeX = 0
options.overrideThreadGroupSizeY = 0
options.overrideThreadGroupSizeZ = 0
options.resourceLayoutScheme = Compact
options.threadGroupSwizzleMode = Default
options.reverseThreadGroup = 0
options.internalRtShaders = 0
options.forceNonUniformResourceIndexStageMask = 0
options.expertSchedulingMode = 0
options.replaceSetWithResourceType = 0
options.disableSampleMask = 0
options.buildResourcesDataForShaderModule = 0
options.disableTruncCoordForGather = 1
options.enableCombinedTexture = 0
options.vertex64BitsAttribSingleLoc = 0
options.enableFragColor = 0
options.disableBaseVertex = 0
options.cacheScopePolicyControl = 0
options.enablePrimGeneratedQuery = 0
options.disablePerCompFetch = 0
rtState.nodeStrideShift = 7
rtState.bvhResDescSize = 4
rtState.bvhResDesc[0] = 0
rtState.bvhResDesc[1] = 2197815296
rtState.bvhResDesc[2] = 4294967295
rtState.bvhResDesc[3] = 2172650495
rtState.staticPipelineFlags = 0
rtState.triCompressMode = 3
rtState.boxSortHeuristicMode = 5
rtState.pipelineFlags = 0
rtState.counterMode = 0
rtState.counterMask = 0
rtState.threadGroupSizeX = 8
rtState.threadGroupSizeY = 4
rtState.threadGroupSizeZ = 1
rtState.rayQueryCsSwizzle = 1
rtState.ldsStackSize = 16
rtState.dispatchRaysThreadGroupSize = 32
rtState.ldsSizePerThreadGroup = 65536
rtState.outerTileSize = 4
rtState.dispatchDimSwizzleMode = 0
rtState.exportConfig.indirectCallingConvention = 1
rtState.exportConfig.indirectCalleeSavedRegs.raygen = 2
rtState.exportConfig.indirectCalleeSavedRegs.miss = 40
rtState.exportConfig.indirectCalleeSavedRegs.closestHit = 50
rtState.exportConfig.indirectCalleeSavedRegs.anyHit = 75
rtState.exportConfig.indirectCalleeSavedRegs.intersection = 75
rtState.exportConfig.indirectCalleeSavedRegs.callable = 28
rtState.exportConfig.indirectCalleeSavedRegs.traceRays = 28
rtState.exportConfig.enableUniformNoReturn = 1
rtState.exportConfig.enableTraceRayArgsInLds = 0
rtState.exportConfig.enableReducedLinkageOpt = 0
rtState.exportConfig.readsDispatchRaysIndex = 0
rtState.exportConfig.enableDynamicLaunch = 0
rtState.exportConfig.emitRaytracingShaderDataToken = 1
rtState.enableRayQueryCsSwizzle = 0
rtState.enableDispatchRaysInnerSwizzle = 1
rtState.enableDispatchRaysOuterSwizzle = 1
rtState.forceInvalidAccelStruct = 0
rtState.enableRayTracingCounters = 0
rtState.enableRayTracingHwTraversalStack = 1
rtState.enableOptimalLdsStackSizeForIndirect = 1
rtState.enableOptimalLdsStackSizeForUnified = 1
rtState.maxRayLength = 0
rtState.enablePickClosestLaneResultForAbortRays = 0
rtState.traceRayWaveDensityThreshold[7] = 1
rtState.gpurtFeatureFlags = 0
rtState.gpurtFuncTable.pFunc[0] = TraceRay2_0
rtState.gpurtFuncTable.pFunc[1] = TraceRayInline2_0
rtState.gpurtFuncTable.pFunc[2] = TraceRayUsingHitToken2_0
rtState.gpurtFuncTable.pFunc[3] = RayQueryProceed2_0
rtState.gpurtFuncTable.pFunc[4] = GetInstanceIndex
rtState.gpurtFuncTable.pFunc[5] = GetInstanceID
rtState.gpurtFuncTable.pFunc[6] = GetObjectToWorldTransform
rtState.gpurtFuncTable.pFunc[7] = GetWorldToObjectTransform
rtState.gpurtFuncTable.pFunc[8] = GetRayQuery64BitInstanceNodePtr
rtState.gpurtFuncTable.pFunc[9] = TraceLongRayAMD2_0
rtState.gpurtFuncTable.pFunc[10] = LongRayQueryProceedAMD2_0
rtState.gpurtFuncTable.pFunc[11] = FetchTrianglePositionFromNodePointer
rtState.gpurtFuncTable.pFunc[12] = FetchTrianglePositionFromRayQuery
rtState.rtIpVersion = 2.0
rtState.gpurtOverride = 0
rtState.rtIpOverride = 0
; CHECK-LABEL: @lgc.shader.CS.main(
; CHECK-NEXT:  .entry:
; CHECK-NEXT:    [[__LLPC_GLOBAL_PROXY_Q:%.*]] = alloca [3 x i127], align 8, addrspace(5)
; CHECK-NEXT:    [[TMP0:%.*]] = call ptr addrspace(7) @lgc.load.buffer.desc(i64 0, i32 0, i32 0, i32 2)
; CHECK-NEXT:    [[TMP1:%.*]] = call ptr addrspace(4) (...) @lgc.create.get.desc.ptr.p4(i32 6, i32 6, i64 0, i32 1)
; CHECK-NEXT:    [[TMP2:%.*]] = call ptr @llvm.invariant.start.p4(i64 -1, ptr addrspace(4) [[TMP1]])
; CHECK-NEXT:    [[TMP3:%.*]] = call ptr addrspace(7) @lgc.load.buffer.desc(i64 0, i32 2, i32 0, i32 2)
; CHECK-NEXT:    [[TMP4:%.*]] = call ptr @llvm.invariant.start.p7(i64 -1, ptr addrspace(7) [[TMP3]])
; CHECK-NEXT:    [[TMP5:%.*]] = call <3 x i32> (...) @lgc.create.read.builtin.input.v3i32(i32 28, i32 0, i32 poison, i32 poison)
; CHECK-NEXT:    [[TMP6:%.*]] = call <3 x i32> (...) @lgc.create.read.builtin.input.v3i32(i32 24, i32 0, i32 poison, i32 poison)
; CHECK-NEXT:    [[__LLPC_INPUT_PROXY_GL_NUMWORKGROUPS_0_VEC_EXTRACT:%.*]] = extractelement <3 x i32> [[TMP6]], i64 0
; CHECK-NEXT:    [[TMP7:%.*]] = shl i32 [[__LLPC_INPUT_PROXY_GL_NUMWORKGROUPS_0_VEC_EXTRACT]], 3
; CHECK-NEXT:    [[__LLPC_INPUT_PROXY_GL_GLOBALINVOCATIONID_4_VEC_EXTRACT:%.*]] = extractelement <3 x i32> [[TMP5]], i64 1
; CHECK-NEXT:    [[TMP8:%.*]] = mul i32 [[TMP7]], [[__LLPC_INPUT_PROXY_GL_GLOBALINVOCATIONID_4_VEC_EXTRACT]]
; CHECK-NEXT:    [[__LLPC_INPUT_PROXY_GL_GLOBALINVOCATIONID_0_VEC_EXTRACT:%.*]] = extractelement <3 x i32> [[TMP5]], i64 0
; CHECK-NEXT:    [[TMP9:%.*]] = add i32 [[TMP8]], [[__LLPC_INPUT_PROXY_GL_GLOBALINVOCATIONID_0_VEC_EXTRACT]]
; CHECK-NEXT:    [[TMP10:%.*]] = getelementptr <{ [4294967295 x <{ [3 x float], float, [3 x float], float }>] }>, ptr addrspace(7) [[TMP3]], i32 0, i32 0, i32 [[TMP9]]
; CHECK-NEXT:    [[TMP11:%.*]] = load <3 x float>, ptr addrspace(7) [[TMP10]], align 16
; CHECK-NEXT:    [[TMP12:%.*]] = getelementptr i8, ptr addrspace(7) [[TMP10]], i32 12
; CHECK-NEXT:    [[TMP13:%.*]] = load float, ptr addrspace(7) [[TMP12]], align 4
; CHECK-NEXT:    [[TMP14:%.*]] = getelementptr i8, ptr addrspace(7) [[TMP10]], i32 16
; CHECK-NEXT:    [[TMP15:%.*]] = load <3 x float>, ptr addrspace(7) [[TMP14]], align 16
; CHECK-NEXT:    [[TMP16:%.*]] = getelementptr i8, ptr addrspace(7) [[TMP10]], i32 28
; CHECK-NEXT:    [[TMP17:%.*]] = load float, ptr addrspace(7) [[TMP16]], align 4
; CHECK-NEXT:    [[TMP18:%.*]] = call ptr addrspace(5) (...) @lgc.rtq.gep.opaque([3 x i127] poison, i1 false, ptr addrspace(5) [[__LLPC_GLOBAL_PROXY_Q]], i32 0, i32 2)
; CHECK-NEXT:    [[TMP19:%.*]] = load <2 x i32>, ptr addrspace(4) [[TMP1]], align 8
; CHECK-NEXT:    [[TMP20:%.*]] = extractelement <2 x i32> [[TMP19]], i64 1
; CHECK-NEXT:    [[TMP21:%.*]] = and i32 [[TMP20]], 65535
; CHECK-NEXT:    [[TMP22:%.*]] = insertelement <2 x i32> [[TMP19]], i32 [[TMP21]], i64 1
; CHECK-NEXT:    [[TMP23:%.*]] = bitcast <2 x i32> [[TMP22]] to i64
; CHECK-NEXT:    call void (...) @lgc.rtq.initialize(ptr addrspace(5) [[TMP18]], i64 [[TMP23]], i32 1, i32 255, <3 x float> [[TMP11]], float [[TMP13]], <3 x float> [[TMP15]], float [[TMP17]])
; CHECK-NEXT:    [[TMP24:%.*]] = call ptr addrspace(5) (...) @lgc.rtq.gep.opaque([3 x i127] poison, i1 false, ptr addrspace(5) [[__LLPC_GLOBAL_PROXY_Q]], i32 0, i32 2)
; CHECK-NEXT:    [[TMP25:%.*]] = call i1 (...) @lgc.rtq.proceed(ptr addrspace(5) [[TMP24]])
; CHECK-NEXT:    [[DOTFR:%.*]] = freeze i1 [[TMP25]]
; CHECK-NEXT:    br i1 [[DOTFR]], label [[TMP26:%.*]], label [[COMMON_RET:%.*]]
; CHECK:       common.ret:
; CHECK-NEXT:    ret void
; CHECK:       26:
; CHECK-NEXT:    [[TMP27:%.*]] = call ptr addrspace(5) (...) @lgc.rtq.gep.opaque([3 x i127] poison, i1 false, ptr addrspace(5) [[__LLPC_GLOBAL_PROXY_Q]], i32 0, i32 2)
; CHECK-NEXT:    [[TMP28:%.*]] = call i32 (...) @lgc.rtq.intersection.type(ptr addrspace(5) [[TMP27]], i1 true)
; CHECK-NEXT:    [[COND_FREEZE1:%.*]] = freeze i32 [[TMP28]]
; CHECK-NEXT:    [[COND:%.*]] = icmp eq i32 [[COND_FREEZE1]], 1
; CHECK-NEXT:    br i1 [[COND]], label [[TMP29:%.*]], label [[COMMON_RET]]
; CHECK:       29:
; CHECK-NEXT:    [[TMP30:%.*]] = call reassoc nnan nsz arcp contract afn <2 x float> (...) @lgc.rtq.intersection.barycentrics(ptr addrspace(5) [[TMP27]], i1 true)
; CHECK-NEXT:    [[TMP31:%.*]] = getelementptr <{ [4294967295 x [2 x float]] }>, ptr addrspace(7) [[TMP0]], i32 0, i32 0, i32 [[TMP9]]
; CHECK-NEXT:    store <2 x float> [[TMP30]], ptr addrspace(7) [[TMP31]], align 8
; CHECK-NEXT:    br label [[COMMON_RET]]
;
