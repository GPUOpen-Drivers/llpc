; NOTE: Assertions have been autogenerated by tool/update_llpc_test_checks.py
; RUN: amdllpc -o - -gfxip 10.3 -emit-lgc %s | FileCheck -check-prefixes=CHECK %s

[Version]
version = 75

[rgenGlsl]
#version 460
#extension GL_EXT_ray_tracing : require

layout(set = 0, binding = 0, r32i) uniform readonly writeonly iimage3D _9;

void main()
{
}

[rgenInfo]
entryPoint = main
options.clientHash = 0x0, 0x0
options.trapPresent = 0
options.debugMode = 0
options.enablePerformanceData = 0
options.allowReZ = 0
options.vgprLimit = 128
options.sgprLimit = 0
options.maxThreadGroupsPerComputeUnit = 0
options.subgroupSize = 0
options.waveSize = 32
options.wgpMode = 0
options.waveBreakSize = None
options.forceLoopUnrollCount = 0
options.enableLoadScalarizer = 0
options.allowVaryWaveSize = 0
options.useSiScheduler = 0
options.disableCodeSinking = 0
options.favorLatencyHiding = 0
options.disableLicm = 0
options.unrollThreshold = 0
options.scalarThreshold = 0
options.disableLoopUnroll = 0
options.adjustDepthImportVrs = 0
options.fp32DenormalMode = Auto
options.disableLicmThreshold = 0
options.unrollHintThreshold = 0
options.dontUnrollHintThreshold = 0
options.noContractOpDot = 0
options.fastMathFlags = 0
options.disableFastMathFlags = 0
options.ldsSpillLimitDwords = 0
options.overrideForceThreadIdSwizzling = 0
options.overrideShaderThreadGroupSizeX = 0
options.overrideShaderThreadGroupSizeY = 0
options.overrideShaderThreadGroupSizeZ = 0
options.forceLateZ = 0
options.nsaThreshold = 0
options.aggressiveInvariantLoads = Auto
options.workaroundStorageImageFormats = 0
options.disableFMA = 0
options.disableReadFirstLaneWorkaround = 0
options.backwardPropagateNoContract = 0
options.forwardPropagateNoContract = 1
options.workgroupRoundRobin = 0
options.constantBufferBindingOffset = 0
options.imageSampleDrefReturnsRgba = 0
options.disableGlPositionOpt = 0
options.viewIndexFromDeviceIndex = 0
options.resourceCount = 0
options.temporalHintShaderControl = 0
options.forceUnderflowPrevention = 0
options.forceMemoryBarrierScope = 0
options.scheduleStrategy = None

[ResourceMapping]
userDataNode[0].visibility = 16128
userDataNode[0].type = DescriptorTableVaPtr
userDataNode[0].offsetInDwords = 5
userDataNode[0].sizeInDwords = 1
userDataNode[0].next[0].type = DescriptorConstBufferCompact
userDataNode[0].next[0].offsetInDwords = 0
userDataNode[0].next[0].sizeInDwords = 2
userDataNode[0].next[0].set = 0x0000005D
userDataNode[0].next[0].binding = 17
userDataNode[0].next[0].strideInDwords = 0
userDataNode[0].next[1].type = DescriptorConstBuffer
userDataNode[0].next[1].offsetInDwords = 2
userDataNode[0].next[1].sizeInDwords = 8
userDataNode[0].next[1].set = 0x0000005D
userDataNode[0].next[1].binding = 0
userDataNode[0].next[1].strideInDwords = 0
userDataNode[0].next[2].type = DescriptorBuffer
userDataNode[0].next[2].offsetInDwords = 10
userDataNode[0].next[2].sizeInDwords = 8
userDataNode[0].next[2].set = 0x0000005D
userDataNode[0].next[2].binding = 1
userDataNode[0].next[2].strideInDwords = 0
userDataNode[1].visibility = 2
userDataNode[1].type = StreamOutTableVaPtr
userDataNode[1].offsetInDwords = 2
userDataNode[1].sizeInDwords = 1
userDataNode[2].visibility = 16128
userDataNode[2].type = DescriptorTableVaPtr
userDataNode[2].offsetInDwords = 6
userDataNode[2].sizeInDwords = 1
userDataNode[2].next[0].type = DescriptorImage
userDataNode[2].next[0].offsetInDwords = 0
userDataNode[2].next[0].sizeInDwords = 8
userDataNode[2].next[0].set = 0x00000000
userDataNode[2].next[0].binding = 0
userDataNode[2].next[0].strideInDwords = 8
userDataNode[2].next[1].type = DescriptorConstBuffer
userDataNode[2].next[1].offsetInDwords = 8
userDataNode[2].next[1].sizeInDwords = 4
userDataNode[2].next[1].set = 0x00000000
userDataNode[2].next[1].binding = 1
userDataNode[2].next[1].strideInDwords = 4

[RayTracingPipelineState]
deviceIndex = 0
options.includeDisassembly = 0
options.scalarBlockLayout = 1
options.reconfigWorkgroupLayout = 0
options.forceCsThreadIdSwizzling = 0
options.includeIr = 0
options.robustBufferAccess = 0
options.enableRelocatableShaderElf = 0
options.disableImageResourceCheck = 0
options.enableScratchAccessBoundsChecks = 0
options.enableImplicitInvariantExports = 1
options.shadowDescriptorTableUsage = Disable
options.shadowDescriptorTablePtrHigh = 2
options.extendedRobustness.robustBufferAccess = 0
options.extendedRobustness.robustImageAccess = 0
options.extendedRobustness.nullDescriptor = 0
options.enableRayQuery = 0
options.optimizeTessFactor = 1
options.enableInterpModePatch = 0
options.pageMigrationEnabled = 0
options.optimizationLevel = 2
options.overrideThreadGroupSizeX = 0
options.overrideThreadGroupSizeY = 0
options.overrideThreadGroupSizeZ = 0
options.resourceLayoutScheme = Compact
options.threadGroupSwizzleMode = Default
options.reverseThreadGroup = 0
options.internalRtShaders = 0
options.forceNonUniformResourceIndexStageMask = 0
options.expertSchedulingMode = 0
options.glState.replaceSetWithResourceType = 0
options.glState.disableSampleMask = 0
options.glState.buildResourcesDataForShaderModule = 0
options.glState.disableTruncCoordForGather = 1
options.glState.enableCombinedTexture = 0
options.glState.vertex64BitsAttribSingleLoc = 0
options.glState.enableFragColor = 0
options.glState.disableBaseVertex = 0
options.glState.enablePolygonStipple = 0
options.glState.enableLineSmooth = 0
options.glState.emulateWideLineStipple = 0
options.glState.enablePointSmooth = 0
options.glState.enableRemapLocation = 0
options.glState.enableDepthCompareParam = 0
options.cacheScopePolicyControl = 0
options.temporalHintControl = 0x777007
options.enablePrimGeneratedQuery = 0
options.disablePerCompFetch = 0
options.optimizePointSizeWrite = 1
options.padBufferSizeToNextDword = 1
groups[0].type = VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_KHR
groups[0].generalShader = 0
groups[0].closestHitShader = -1
groups[0].anyHitShader = -1
groups[0].intersectionShader = -1
maxRecursionDepth = 1
indirectStageMask = 4294967295
libraryMode = 1
mode = 0
cpsFlags = 0
disableDynamicVgpr = 0
dynamicVgprBlockSize =0
rtState.nodeStrideShift = 7
rtState.bvhResDescSize = 4
rtState.bvhResDesc[0] = 0
rtState.bvhResDesc[1] = 2197815296
rtState.bvhResDesc[2] = 4294967295
rtState.bvhResDesc[3] = 2164261887
rtState.staticPipelineFlags = 512
rtState.triCompressMode = 3
rtState.boxSortHeuristicMode = 0
rtState.pipelineFlags = 8192
rtState.counterMode = 0
rtState.counterMask = 0
rtState.threadGroupSizeX = 8
rtState.threadGroupSizeY = 4
rtState.threadGroupSizeZ = 1
rtState.rayQueryCsSwizzle = 1
rtState.ldsStackSize = 16
rtState.dispatchRaysThreadGroupSize = 32
rtState.ldsSizePerThreadGroup = 65536
rtState.outerTileSize = 4
rtState.dispatchDimSwizzleMode = 0
rtState.exportConfig.indirectCallingConvention = 1
rtState.exportConfig.indirectCalleeSavedRegs.raygen = 2
rtState.exportConfig.indirectCalleeSavedRegs.miss = 40
rtState.exportConfig.indirectCalleeSavedRegs.closestHit = 50
rtState.exportConfig.indirectCalleeSavedRegs.anyHit = 75
rtState.exportConfig.indirectCalleeSavedRegs.intersection = 75
rtState.exportConfig.indirectCalleeSavedRegs.callable = 28
rtState.exportConfig.indirectCalleeSavedRegs.traceRays = 28
rtState.exportConfig.enableUniformNoReturn = 1
rtState.exportConfig.enableTraceRayArgsInLds = 0
rtState.exportConfig.enableReducedLinkageOpt = 0
rtState.exportConfig.readsDispatchRaysIndex = 0
rtState.exportConfig.enableDynamicLaunch = 0
rtState.exportConfig.emitRaytracingShaderDataToken = 1
rtState.exportConfig.emitRaytracingShaderHashToken = 1
rtState.enableRayQueryCsSwizzle = 0
rtState.enableDispatchRaysInnerSwizzle = 1
rtState.enableDispatchRaysOuterSwizzle = 1
rtState.forceInvalidAccelStruct = 0
rtState.enableRayTracingCounters = 0
rtState.enableRayTracingHwTraversalStack = 0
rtState.enableOptimalLdsStackSizeForIndirect = 1
rtState.enableOptimalLdsStackSizeForUnified = 1
rtState.maxRayLength = 0
rtState.enablePickClosestLaneResultForAbortRays = 0
rtState.traceRayWaveDensityThreshold[8] = 1
rtState.gpurtFeatureFlags = 0
rtState.gpurtFuncTable.pFunc[0] = TraceRay1_1
rtState.gpurtFuncTable.pFunc[1] = TraceRayInline1_1
rtState.gpurtFuncTable.pFunc[2] = TraceRayUsingHitToken1_1
rtState.gpurtFuncTable.pFunc[3] = RayQueryProceed1_1
rtState.gpurtFuncTable.pFunc[4] = GetInstanceIndex
rtState.gpurtFuncTable.pFunc[5] = GetInstanceID
rtState.gpurtFuncTable.pFunc[6] = GetObjectToWorldTransform
rtState.gpurtFuncTable.pFunc[7] = GetWorldToObjectTransform
rtState.gpurtFuncTable.pFunc[8] = GetRayQuery64BitInstanceNodePtr
rtState.gpurtFuncTable.pFunc[9] = TraceLongRayAMD1_1
rtState.gpurtFuncTable.pFunc[10] = LongRayQueryProceedAMD1_1
rtState.gpurtFuncTable.pFunc[11] = FetchTrianglePositionFromNodePointer
rtState.gpurtFuncTable.pFunc[12] = FetchTrianglePositionFromRayQuery
rtState.rtIpVersion = 1.1
rtState.gpurtOverride = 0
rtState.rtIpOverride = 0
payloadSizeMaxInLib = 0
attributeSizeMaxInLib = 0
hasPipelineLibrary = 0
pipelineLibStageMask = 0
rtIgnoreDeclaredPayloadSize = 0
gpurtOptions[0].nameHash = 0xa0ac340f
gpurtOptions[0].value = 0x1
gpurtOptions[1].nameHash = 0x88bf9c68
gpurtOptions[1].value = 0x0
gpurtOptions[2].nameHash = 0xcb450fe
gpurtOptions[2].value = 0x55210fd1
gpurtOptions[3].nameHash = 0x9f199d76
gpurtOptions[3].value = 0x0
gpurtOptions[4].nameHash = 0x3c3b7e05
gpurtOptions[4].value = 0xffffffff
gpurtOptions[5].nameHash = 0xf50fba7f
gpurtOptions[5].value = 0x0
gpurtOptions[6].nameHash = 0x6b77e280
gpurtOptions[6].value = 0x0
gpurtOptions[7].nameHash = 0xff44da8b
gpurtOptions[7].value = 0x4
gpurtOptions[8].nameHash = 0x6c363f1c
gpurtOptions[8].value = 0x19dc307e
gpurtOptions[9].nameHash = 0x7669ef5a
gpurtOptions[9].value = 0x20
gpurtOptions[10].nameHash = 0xabbd97ca
gpurtOptions[10].value = 0xdce2da08
;Compiler Options: amdvlk -enable-errs=0 -enable-outs=0 -log-file-outs=C:/develop/data_dump/SpvPipeline/deqp-vk.exe/spvLogInfoLlpc.txt -log-file-dbgs=debugLogInfo.txt -enable-pipeline-dump -pipeline-dump-dir=C:/develop/data_dump/SpvPipeline/deqp-vk.exe -cache-full-pipelines=0 -subgroup-size=64 -include-llvm-ir=0
[CompileLog]
(null) (size = 0 bytes)

.AMDGPU.disasm (size = 3537 bytes)
_amdgpu_cs_main:
BB0_0:
	s_getpc_b64 s[22:23]                        ; BE961F00
	s_mov_b32 s22, s0                           ; BE960300
	s_mov_b32 s32, 0                            ; BEA00380
	s_load_dwordx2 s[22:23], s[22:23], 0x10     ; F404058B FA000010
	s_waitcnt lgkmcnt(0)                        ; BF8CC07F
	s_and_b32 s23, s23, 0xffff                  ; 8717FF17 0000FFFF
	s_add_u32 s22, s22, s20                     ; 80161416
	s_addc_u32 s23, s23, 0                      ; 82178017
	s_setreg_b32 hwreg(HW_REG_FLAT_SCR_LO), s22 ; B996F814
	s_setreg_b32 hwreg(HW_REG_FLAT_SCR_HI), s23 ; B997F815
	s_mov_b32 s20, s8                           ; BE940308
	s_mov_b32 s22, s17                          ; BE960311
	s_mov_b32 s17, s13                          ; BE91030D
	s_mov_b32 s13, s9                           ; BE8D0309
	s_mov_b32 s9, s5                            ; BE890305
	s_mov_b32 s8, s4                            ; BE880304
	s_getpc_b64 s[4:5]                          ; BE841F00
	s_mov_b32 s31, 0x21014fac                   ; BE9F03FF 21014FAC
	s_mov_b32 s21, s5                           ; BE950305
	s_mov_b32 s30, -1                           ; BE9E03C1
	s_load_dwordx2 s[28:29], s[20:21], 0x0      ; F404070A FA000000
	s_mov_b32 s25, s16                          ; BE990310
	v_lshl_add_u32 v4, s22, 2, v1               ; D7460004 04050416
	v_lshl_add_u32 v3, s25, 3, v0               ; D7460003 04010619
	s_waitcnt lgkmcnt(0)                        ; BF8CC07F
	s_buffer_load_dwordx2 s[4:5], s[28:31], 0x8 ; F424010E FA000008
	s_waitcnt lgkmcnt(0)                        ; BF8CC07F
	v_cmp_gt_u32_e32 vcc_lo, s4, v3             ; 7D880604
	v_cmp_gt_u32_e64 s4, s5, v4                 ; D4C40004 00020805
	s_and_b32 s4, vcc_lo, s4                    ; 8704046A
	s_and_saveexec_b32 s5, s4                   ; BE853C04
	s_cbranch_execz ""                          ; BF880000
	s_buffer_load_dwordx2 s[4:5], s[28:31], 0x0 ; F424010E FA000000
	s_mov_b32 s24, s18                          ; BE980312
	s_mov_b32 s23, s19                          ; BE970313
	s_mov_b32 s19, s15                          ; BE93030F
	s_mov_b32 s18, s14                          ; BE92030E
	s_mov_b32 s16, s12                          ; BE90030C
	s_mov_b32 s15, s11                          ; BE8F030B
	s_mov_b32 s14, s10                          ; BE8E030A
	s_mov_b32 s11, s7                           ; BE8B0307
	s_mov_b32 s10, s6                           ; BE8A0306
	s_mov_b32 m0, exec_lo                       ; BEFC037E
	s_mov_b32 s6, s2                            ; BE860302
	s_mov_b32 s7, s3                            ; BE870303
	s_mov_b32 s12, s20                          ; BE8C0314
	s_mov_b32 s20, s25                          ; BE940319
	s_mov_b32 s21, s22                          ; BE950316
	s_mov_b32 s22, s24                          ; BE960318
	s_waitcnt lgkmcnt(0)                        ; BF8CC07F
	s_load_dwordx2 s[26:27], s[4:5], 0x0        ; F4040682 FA000000
	s_mov_b32 s4, s0                            ; BE840300
	s_mov_b32 s5, s1                            ; BE850301
	s_ttracedata_imm 0x4                        ; BFA80004
	s_ttracedata                                ; BF960000
	s_waitcnt lgkmcnt(0)                        ; BF8CC07F
	s_swappc_b64 s[30:31], s[26:27]             ; BE9E211A
	s_mov_b32 m0, 16                            ; BEFC0390
	s_ttracedata_imm 0x10                       ; BFA80010
	s_ttracedata                                ; BF960000
BB0_2:
	s_endpgm                                    ; BF810000

.AMDGPU.gpr_maximums (size = 0 bytes)

.note (size = 928 bytes)
    IsaVersion                   (name = AMD  size = 23)
amdgcn--amdpal--gfx1032
    PalMetadata                  (name = AMDGPU  size = 867)
{
    amdpal.pipelines: [ {
        .api: Vulkan
        .compute_registers: {
            .tg_size_en: 1
            .tgid_x_en: 1
            .tgid_y_en: 1
            .tgid_z_en: 1
            .tidig_comp_cnt: 0x0000000000000001 }
        .hardware_stages: {
            .cs: {
                .checksum_value: 0x0000000000000000
                .debug_mode: 0
                .entry_point: _amdgpu_cs
                .entry_point_symbol: _amdgpu_cs_main
                .excp_en: 0x0000000000000000
                .float_mode: 0x00000000000000C0
                .ieee_mode: 0
                .lds_size: 0x0000000000000000
                .mem_ordered: 1
                .scratch_en: 1
                .scratch_memory_size: 0x0000000000000000
                .sgpr_count: 0x0000000000000023
                .sgpr_limit: 0x000000000000006A
                .threadgroup_dimensions: [ 0x0000000000000008 0x0000000000000004 0x0000000000000001 ]
                .trap_present: 0
                .user_data_reg_map: [ 0x0000000010000000 0x0000000010000006 0x00000000FFFFFFFF 0x0000000000000000 0x0000000000000001 0x0000000000000002 0x0000000000000003 0x0000000000000004 0x0000000000000005 0x0000000000000006 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x0000000010000002 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF ]
                .user_sgprs: 0x0000000000000010
                .vgpr_count: 0x0000000000000005
                .vgpr_limit: 0x0000000000000080
                .wavefront_size: 0x0000000000000020
                .wgp_mode: 0 }}
        .internal_pipeline_hash: [ 0x5BCAB1467B058594 0x09AC3DC81F111A1B ]
        .shaders: {
            .compute: {
                .api_shader_hash: [ 0x0000000000000000 0x0000000000000000 ]
                .hardware_mapping: [ .cs]}}
        .spill_threshold: 0x000000000000FFFF
        .type: Cs
        .user_data_limit: 0x0000000000000007
        .xgl_cache_info: {
            .128_bit_cache_hash: [ 0xDFE7E5BBF63E39DF 0x08718DD56908A3AB ]
            .llpc_version: 75.11}}]
    amdpal.version: [ 0x0000000000000003 0x0000000000000000 ]}

.note.GNU-stack (size = 0 bytes)

.strtab (size = 97 bytes)

.symtab (size = 48 bytes)

.text (size = 512 bytes)
    _amdgpu_cs_main (offset = 0  size = 284 hash = 0x0AC57BA4D66A0454)
          0:BE961F00 BE960300 BEA00380 F404058B FA000010 BF8CC07F 8717FF17 0000FFFF
         32:80161416 82178017 B996F814 B997F815 BE940308 BE960311 BE91030D BE8D0309
         64:BE890305 BE880304 BE841F00 BE9F03FF 21014FAC BE950305 BE9E03C1 F404070A
         96:FA000000 BE990310 D7460004 04050416 D7460003 04010619 BF8CC07F F424010E
        128:FA000008 BF8CC07F 7D880604 D4C40004 00020805 8704046A BE853C04 BF88001E
        160:F424010E FA000000 BE980312 BE970313 BE93030F BE92030E BE90030C BE8F030B
        192:BE8E030A BE8B0307 BE8A0306 BEFC037E BE860302 BE870303 BE8C0314 BE940319
        224:BE950316 BE960318 BF8CC07F F4040682 FA000000 BE840300 BE850301 BFA80004
        256:BF960000 BF8CC07F BE9E211A BEFC0390 BFA80010 BF960000 BF810000 BF9F0000
        288:BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000
        320:BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000
        352:BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000
        384:BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000
        416:BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000
        448:BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000
        480:BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000

[CompileLog]
(null) (size = 0 bytes)

.AMDGPU.disasm (size = 719 bytes)
_rgen_1:
BB0_0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0) ; BF8C0000
	s_bcnt1_i32_b32 s0, exec_lo             ; BE800F7E
	s_mov_b32 m0, 0x35d75e96                ; BEFC03FF 35D75E96
	s_lshl_b32 s0, s0, 13                   ; 8F008D00
	s_ttracedata                            ; BF960000
	s_mov_b32 m0, 0x4e93f0f4                ; BEFC03FF 4E93F0F4
	s_ttracedata                            ; BF960000
	s_or_b32 m0, s0, 0x511                  ; 887CFF00 00000511
	s_ttracedata                            ; BF960000
	s_mov_b32 m0, 16                        ; BEFC0390
	s_ttracedata_imm 0x10                   ; BFA80010
	s_ttracedata                            ; BF960000
	s_setpc_b64 s[30:31]                    ; BE80201E

.AMDGPU.gpr_maximums (size = 0 bytes)

.note (size = 984 bytes)
    IsaVersion                   (name = AMD  size = 23)
amdgcn--amdpal--gfx1032
    PalMetadata                  (name = AMDGPU  size = 924)
{
    amdpal.pipelines: [ {
        .api: Vulkan
        .compute_registers: {
            .tg_size_en: 1
            .tgid_x_en: 1
            .tgid_y_en: 1
            .tgid_z_en: 1
            .tidig_comp_cnt: 0x0000000000000001 }
        .hardware_stages: {
            .cs: {
                .checksum_value: 0x0000000000000000
                .debug_mode: 0x0000000000000000
                .excp_en: 0x0000000000000000
                .float_mode: 0x00000000000000C0
                .ieee_mode: 1
                .lds_size: 0x0000000000000000
                .mem_ordered: 1
                .sgpr_limit: 0x000000000000006A
                .threadgroup_dimensions: [ 0x0000000000000008 0x0000000000000004 0x0000000000000001 ]
                .trap_present: 0
                .user_data_reg_map: [ 0x0000000010000000 0x0000000010000006 0x00000000FFFFFFFF 0x0000000000000000 0x0000000000000001 0x0000000000000002 0x0000000000000003 0x0000000000000004 0x0000000000000005 0x0000000000000006 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x0000000010000002 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF 0x00000000FFFFFFFF ]
                .user_sgprs: 0x0000000000000010
                .vgpr_limit: 0x0000000000000080
                .wavefront_size: 0x0000000000000020
                .wgp_mode: 0 }}
        .internal_pipeline_hash: [ 0x5BCAB1467B058594 0x35D75E964E93F0F4 ]
        .shader_functions: {
            _rgen_1: {
                .api_shader_hash: [ 0x5BCAB1467B058594 0x35D75E964E93F0F4 ]
                .backend_stack_size: 0x0000000000000000
                .lds_size: 0x0000000000000000
                .sgpr_count: 0x0000000000000020
                .shader_subtype: RayGeneration
                .stack_frame_size_in_bytes: 0x0000000000000000
                .vgpr_count: 0x0000000000000001 }}
        .shaders: {
            .compute: {
                .api_shader_hash: [ 0x0000000000000000 0x0000000000000000 ]
                .hardware_mapping: [ .cs]}}
        .spill_threshold: 0x000000000000FFFF
        .type: Cs
        .user_data_limit: 0x0000000000000007
        .xgl_cache_info: {
            .128_bit_cache_hash: [ 0xDFE7E5BBF63E39DF 0x08718DD56908A3AB ]
            .llpc_version: 75.11}}]
    amdpal.version: [ 0x0000000000000003 0x0000000000000000 ]}

.note.GNU-stack (size = 0 bytes)

.strtab (size = 89 bytes)

.symtab (size = 48 bytes)

.text (size = 256 bytes)
    _rgen_1 (offset = 0  size = 64 hash = 0xD2AD8A22EB6E563E)
          0:BF8C0000 BE800F7E BEFC03FF 35D75E96 8F008D00 BF960000 BEFC03FF 4E93F0F4
         32:BF960000 887CFF00 00000511 BF960000 BEFC0390 BFA80010 BF960000 BE80201E
         64:BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000
         96:BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000
        128:BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000
        160:BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000
        192:BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000
        224:BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000 BF9F0000

;CompileResult=VK_SUCCESS
; CHECK-LABEL: @lgc.shader.CS.main(
; CHECK-NEXT:  .entry:
; CHECK-NEXT:    [[TMP0:%.*]] = call ptr addrspace(7) @lgc.load.buffer.desc(i64 93, i32 17, i32 0, i32 0)
; CHECK-NEXT:    [[TMP1:%.*]] = call ptr @llvm.invariant.start.p7(i64 -1, ptr addrspace(7) [[TMP0]])
; CHECK-NEXT:    [[TMP2:%.*]] = getelementptr inbounds nuw i8, ptr addrspace(7) [[TMP0]], i32 8
; CHECK-NEXT:    [[TMP3:%.*]] = load <3 x i32>, ptr addrspace(7) [[TMP2]], align 16
; CHECK-NEXT:    [[TMP4:%.*]] = call <3 x i32> (...) @lgc.create.read.builtin.input.v3i32(i32 28, i32 0, i32 poison, i32 poison)
; CHECK-NEXT:    [[TMP5:%.*]] = extractelement <3 x i32> [[TMP3]], i64 0
; CHECK-NEXT:    [[TMP6:%.*]] = extractelement <3 x i32> [[TMP3]], i64 1
; CHECK-NEXT:    [[TMP7:%.*]] = extractelement <3 x i32> [[TMP4]], i64 0
; CHECK-NEXT:    [[TMP8:%.*]] = extractelement <3 x i32> [[TMP4]], i64 1
; CHECK-NEXT:    [[TMP9:%.*]] = icmp uge i32 [[TMP7]], [[TMP5]]
; CHECK-NEXT:    [[TMP10:%.*]] = icmp uge i32 [[TMP8]], [[TMP6]]
; CHECK-NEXT:    [[TMP11:%.*]] = or i1 [[TMP9]], [[TMP10]]
; CHECK-NEXT:    br i1 [[TMP11]], label [[DOTEARLYRET:%.*]], label [[DOTMAIN:%.*]]
; CHECK:       .earlyRet:
; CHECK-NEXT:    ret void
; CHECK:       .main:
; CHECK-NEXT:    [[TMP12:%.*]] = load i64, ptr addrspace(7) [[TMP0]], align 8
; CHECK-NEXT:    [[TMP13:%.*]] = inttoptr i64 [[TMP12]] to ptr addrspace(1)
; CHECK-NEXT:    [[TMP14:%.*]] = load i64, ptr addrspace(1) [[TMP13]], align 8
; CHECK-NEXT:    [[TMP15:%.*]] = inttoptr i64 [[TMP14]] to ptr
; CHECK-NEXT:    call void @llvm.amdgcn.s.ttracedata.imm(i16 4)
; CHECK-NEXT:    [[TMP16:%.*]] = call i32 @llvm.amdgcn.ballot.i32(i1 true)
; CHECK-NEXT:    call void @llvm.amdgcn.s.ttracedata(i32 [[TMP16]])
; CHECK-NEXT:    call spir_func void [[TMP15]]() #[[ATTR0:[0-9]+]], !continufy.stage [[META15:![0-9]+]]
; CHECK-NEXT:    call void @llvm.amdgcn.s.ttracedata.imm(i16 16)
; CHECK-NEXT:    call void @llvm.amdgcn.s.ttracedata(i32 16)
; CHECK-NEXT:    br label [[DOTEND:%.*]]
; CHECK:       .end:
; CHECK-NEXT:    ret void
;
;
; CHECK-LABEL: @_rgen_1(
; CHECK-NEXT:  .entry:
; CHECK-NEXT:    call void @lgc.emit.shader.hash.token()
; CHECK-NEXT:    [[TMP0:%.*]] = call i32 @llvm.amdgcn.ballot.i32(i1 true)
; CHECK-NEXT:    [[TMP1:%.*]] = call range(i32 0, 33) i32 @llvm.ctpop.i32(i32 [[TMP0]])
; CHECK-NEXT:    [[TMP2:%.*]] = shl nuw nsw i32 [[TMP1]], 13
; CHECK-NEXT:    [[TMP3:%.*]] = or disjoint i32 [[TMP2]], 1297
; CHECK-NEXT:    call void @llvm.amdgcn.s.ttracedata(i32 [[TMP3]])
; CHECK-NEXT:    [[TMP4:%.*]] = call ptr addrspace(7) @lgc.load.buffer.desc(i64 93, i32 17, i32 0, i32 0)
; CHECK-NEXT:    [[TMP5:%.*]] = call ptr @llvm.invariant.start.p7(i64 -1, ptr addrspace(7) [[TMP4]])
; CHECK-NEXT:    call void @llvm.amdgcn.s.ttracedata.imm(i16 16)
; CHECK-NEXT:    call void @llvm.amdgcn.s.ttracedata(i32 16)
; CHECK-NEXT:    ret void
;
