; This test checks that the PS_INPUT_CNTL entries are continuous.  Tests fail
; when they do not start at 0 or there is a gap.

; BEGIN_SHADERTEST
; RUN: amdllpc -enable-relocatable-shader-elf -v %gfxip %s | FileCheck -check-prefix=SHADERTEST %s
; SHADERTEST-LABEL: PalMetadata
; SHADERTEST: .spi_ps_input_cntl: [ {
; SHADERTEST:  .attr0_valid: 0x0000000000000000
; SHADERTEST:  .attr1_valid: 0x0000000000000000
; SHADERTEST:  .flat_shade: 0
; SHADERTEST:  .fp16_interp_mode: 0
; SHADERTEST:  .offset: 0x0000000000000000
; SHADERTEST:  .prim_attr: 0
; SHADERTEST:   .pt_sprite_tex: 0 }{
; SHADERTEST:  .attr0_valid: 0x0000000000000000
; SHADERTEST:  .attr1_valid: 0x0000000000000000
; SHADERTEST:  .flat_shade: 0
; SHADERTEST:  .fp16_interp_mode: 0
; SHADERTEST:  .offset: 0x0000000000000001
; SHADERTEST:  .prim_attr: 0
; SHADERTEST:  .pt_sprite_tex: 0 }{
; SHADERTEST:  .attr0_valid: 0x0000000000000000
; SHADERTEST:  .attr1_valid: 0x0000000000000000
; SHADERTEST:  .flat_shade: 0
; SHADERTEST:  .fp16_interp_mode: 0
; SHADERTEST:  .offset: 0x0000000000000002
; SHADERTEST:  .prim_attr: 0
; SHADERTEST:  .pt_sprite_tex: 0 }{
; SHADERTEST:  .attr0_valid: 0x0000000000000000
; SHADERTEST:  .attr1_valid: 0x0000000000000000
; SHADERTEST:  .flat_shade: 0
; SHADERTEST:  .fp16_interp_mode: 0
; SHADERTEST:  .offset: 0x0000000000000003
; SHADERTEST:  .prim_attr: 0
; SHADERTEST:  .pt_sprite_tex: 0 }]
; SHADERTEST: AMDLLPC SUCCESS
; END_SHADERTEST

[Version]
version = 40

[VsSpirv]
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Vertex %2 "main" %3 %4 %5
               OpSource GLSL 450
               OpDecorate %3 Location 0
               OpMemberDecorate %_struct_6 0 BuiltIn Position
               OpDecorate %_struct_6 Block
               OpDecorate %5 Location 3
       %void = OpTypeVoid
          %8 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v3float = OpTypeVector %float 3
%_ptr_Output_v3float = OpTypePointer Output %v3float
%_ptr_Input_v3float = OpTypePointer Input %v3float
          %3 = OpVariable %_ptr_Input_v3float Input
        %int = OpTypeInt 32 1
    %v4float = OpTypeVector %float 4
    %float_1 = OpConstant %float 1
  %_struct_6 = OpTypeStruct %v4float
%_ptr_Output__struct_6 = OpTypePointer Output %_struct_6
          %4 = OpVariable %_ptr_Output__struct_6 Output
      %int_0 = OpConstant %int 0
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpVariable %_ptr_Output_v3float Output
          %2 = OpFunction %void None %8
         %19 = OpLabel
         %20 = OpLoad %v3float %3
         %21 = OpCompositeConstruct %v4float %20 %float_1
         %22 = OpAccessChain %_ptr_Output_v4float %4 %int_0
               OpStore %22 %21
               OpStore %5 %20
               OpReturn
               OpFunctionEnd

[VsInfo]
entryPoint = main

[FsSpirv]
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %2 "main" %3 %4 %5
               OpExecutionMode %2 OriginUpperLeft
               OpSource GLSL 450
               OpDecorate %3 Location 3
               OpDecorate %4 Location 0
               OpDecorate %5 Location 1
       %void = OpTypeVoid
          %7 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v3float = OpTypeVector %float 3
%_ptr_Input_v3float = OpTypePointer Input %v3float
    %v4float = OpTypeVector %float 4
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
          %3 = OpVariable %_ptr_Input_v3float Input
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %4 = OpVariable %_ptr_Output_v4float Output
          %5 = OpVariable %_ptr_Output_v4float Output
         %15 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
          %2 = OpFunction %void None %7
         %16 = OpLabel
         %17 = OpLoad %v3float %3
         %18 = OpLoad %v4float %4
         %19 = OpVectorShuffle %v4float %18 %17 4 5 6 3
               OpStore %4 %19
               OpStore %5 %15
               OpReturn
               OpFunctionEnd

[FsInfo]
entryPoint = main

[GraphicsPipelineState]
colorBuffer[0].format = VK_FORMAT_R32G32B32A32_SFLOAT
colorBuffer[0].channelWriteMask = 15
colorBuffer[0].blendEnable = 0
colorBuffer[0].blendSrcAlphaToColor = 0
colorBuffer[1].format = VK_FORMAT_R32G32B32A32_SFLOAT
colorBuffer[1].channelWriteMask = 15
colorBuffer[1].blendEnable = 0
colorBuffer[1].blendSrcAlphaToColor = 0


[VertexInputState]
binding[0].binding = 0
binding[0].stride = 32
binding[0].inputRate = VK_VERTEX_INPUT_RATE_VERTEX
attribute[0].location = 0
attribute[0].binding = 0
attribute[0].format = VK_FORMAT_R32G32B32_SFLOAT
attribute[0].offset = 0
