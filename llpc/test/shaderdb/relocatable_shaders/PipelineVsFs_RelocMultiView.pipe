; NOTE: Assertions have been autogenerated by tool/update_llpc_test_checks.py
; Test that the layer input is not output when multiview is enabled.
; For GFX10+, dummy generic output is no longer needed
; If multiview is enabled, it will fail to build with relocatable ELF.

; RUN: amdllpc -enable-relocatable-shader-elf -filetype=asm -o - %gfxip %s | FileCheck -check-prefix=SHADERTEST %s

[Version]
version = 52

[VsGlsl]
#version 450

layout(location = 0) in vec4 _17;

void main()
{
    gl_Position = _17;
}

[VsInfo]
entryPoint = main

[FsGlsl]
#version 450

layout(location = 0) out vec4 _9;

void main()
{
    _9 = vec4(0,0,0,0);
}

[FsInfo]
entryPoint = main

[ResourceMapping]
userDataNode[0].visibility = 1
userDataNode[0].type = IndirectUserDataVaPtr
userDataNode[0].offsetInDwords = 0
userDataNode[0].sizeInDwords = 1
userDataNode[0].indirectUserDataCount = 8

[GraphicsPipelineState]
topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP
enableMultiView = 1
colorBuffer[0].format = VK_FORMAT_R8G8B8A8_UNORM
colorBuffer[0].channelWriteMask = 15
colorBuffer[0].blendEnable = 0
colorBuffer[0].blendSrcAlphaToColor = 1


[VertexInputState]
binding[0].binding = 0
binding[0].stride = 16
binding[0].inputRate = VK_VERTEX_INPUT_RATE_VERTEX
attribute[0].location = 0
attribute[0].binding = 0
attribute[0].format = VK_FORMAT_R32G32B32A32_SFLOAT
attribute[0].offset = 0
; SHADERTEST-LABEL: amdgpu_vs_main:
; SHADERTEST:         s_getpc_b64 s[4:5]
; SHADERTEST-NEXT:    s_mov_b32 s0, s3
; SHADERTEST-NEXT:    s_mov_b32 s3, s5
; SHADERTEST-NEXT:    v_add_nc_u32_e32 v0, s0, v0
; SHADERTEST-NEXT:    s_load_dwordx4 s[4:7], s[2:3], 0x0
; SHADERTEST-NEXT:    v_mov_b32_e32 v4, s1
; SHADERTEST-NEXT:    s_waitcnt lgkmcnt(0)
; SHADERTEST-NEXT:    tbuffer_load_format_xyzw v[0:3], v0, s[4:7], 0 format:[BUF_FMT_32_32_32_32_FLOAT] idxen
; SHADERTEST-NEXT:    s_waitcnt vmcnt(0)
; SHADERTEST-NEXT:    exp pos0 v0, v1, v2, v3
; SHADERTEST-NEXT:    exp pos1 off, off, v4, off done
; SHADERTEST-NEXT:    s_endpgm
;
; SHADERTEST-LABEL: amdgpu_ps_main:
; SHADERTEST:         v_mov_b32_e32 v0, 0
; SHADERTEST-NEXT:    exp mrt0 v0, v0, v0, v0 done compr vm
; SHADERTEST-NEXT:    s_endpgm
