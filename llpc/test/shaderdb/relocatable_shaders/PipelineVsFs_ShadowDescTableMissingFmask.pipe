// This test case checks that descriptor offset and descriptor buffer pointer relocation works
// for buffer descriptors in a vs/fs pipeline.
// Also check that the user data limit is set correctly.

; BEGIN_SHADERTEST
; RUN: amdllpc -spvgen-dir=%spvgendir% -o %t.elf %gfxip %s && llvm-objdump --triple=amdgcn --mcpu=gfx900 -d %t.elf | FileCheck -check-prefix=SHADERTEST %s
; SHADERTEST-LABEL: _amdgpu_ps_main
; SHADERTEST: s_mov_b32 s[[highaddr:[0-9]*]], 0xffff
; SHADERTEST: s_load_dwordx8 s[{{[0-9]*}}:{{[0-9]*}}], s[{{[0-9]*}}:[[highaddr]]], 0x10
; END_SHADERTEST

; BEGIN_SHADERTEST
; RUN: amdllpc -enable-relocatable-shader-elf -spvgen-dir=%spvgendir% -o %t.elf %gfxip %s && llvm-objdump --triple=amdgcn --mcpu=gfx900 -d %t.elf | FileCheck -check-prefix=SHADERTEST1 %s
; SHADERTEST1-LABEL: _amdgpu_ps_main
; SHADERTEST1: s_getpc_b64 s[0:1]
; SHADERTEST1: s_cmp_eq_u32 1, 0
; SHADERTEST1: s_cselect_b32 s[[addrhi:[0-9]+]], s1, 0xffff
; SHADERTEST1: s_mov_b32 s[[addrlo:[0-9]+]], s2
; SHADERTEST1: s_mov_b32 [[offset:s[0-9]*]], 16
; SHADERTEST1: s_load_dwordx8 s[{{[0-9]*:[0-9]*}}], s{{\[}}[[addrlo]]:[[addrhi]]], [[offset]]
; END_SHADERTEST


[VsGlsl]
#version 450

layout(location = 0) in vec2 inPosition;
layout(location = 0) out vec2 outUV;

void main() {
    outUV = inPosition;
}


[VsInfo]
entryPoint = main
userDataNode[0].type = DescriptorTableVaPtr
userDataNode[0].offsetInDwords = 11
userDataNode[0].sizeInDwords = 1
userDataNode[0].set = 0
userDataNode[0].next[0].type = DescriptorResource
userDataNode[0].next[0].offsetInDwords = 4
userDataNode[0].next[0].sizeInDwords = 8
userDataNode[0].next[0].set = 0
userDataNode[0].next[0].binding = 0

[FsGlsl]
#version 450 core

layout(set = 0, binding = 0) uniform sampler2DMS samp;
layout(location = 0) in vec2 inUV;
layout(location = 0) out vec4 oColor;

void main()
{
    ivec2 iUV = ivec2(inUV);
    oColor = texelFetch(samp, iUV, 2);
}

[FsInfo]
entryPoint = main

[GraphicsPipelineState]
topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP
colorBuffer[0].format = VK_FORMAT_R32G32B32A32_SFLOAT
colorBuffer[0].channelWriteMask = 15
colorBuffer[0].blendEnable = 1
colorBuffer[0].blendSrcAlphaToColor = 1
userDataNode[0].type = DescriptorTableVaPtr
userDataNode[0].offsetInDwords = 11
userDataNode[0].sizeInDwords = 1
userDataNode[0].set = 0
userDataNode[0].next[0].type = DescriptorResource
userDataNode[0].next[0].offsetInDwords = 4
userDataNode[0].next[0].sizeInDwords = 8
userDataNode[0].next[0].set = 0
userDataNode[0].next[0].binding = 0
options.shadowDescriptorTableUsage = Enable
options.shadowDescriptorTablePtrHigh = 0xFFFF

[VertexInputState]
binding[0].binding = 1
binding[0].stride = 16
binding[0].inputRate = VK_VERTEX_INPUT_RATE_VERTEX
attribute[0].location = 0
attribute[0].binding = 0
attribute[0].format = VK_FORMAT_R32G32B32A32_SFLOAT
attribute[0].offset = 0
