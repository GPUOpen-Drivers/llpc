; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --include-generated-funcs --version 3
; RUN: grep -v SKIP_GLOBAL_ADDRSPACE %s | opt --verify-each -passes='dxil-cont-lgc-rt-op-converter,lint,inline,lint,lower-raytracing-pipeline,lint,sroa,lint,lower-await,lint,coro-early,dxil-coro-split,coro-cleanup,lint,legacy-cleanup-continuations,lint,continuations-lint,remove-types-metadata' -S --lint-abort-on-error | FileCheck -check-prefix=CLEANUP %s
; RUN: grep -v SKIP_GLOBAL_ADDRSPACE %s | opt --verify-each -passes='dxil-cont-lgc-rt-op-converter,lint,inline,lint,lower-raytracing-pipeline,lint,sroa,lint,lower-await,lint,coro-early,dxil-coro-split,coro-cleanup,lint,legacy-cleanup-continuations,lint,dxil-cont-post-process,lint,continuations-lint,remove-types-metadata' \
; RUN:     -S --lint-abort-on-error | FileCheck -check-prefix=POST-PROCESS %s
; RUN: opt --verify-each -passes='dxil-cont-lgc-rt-op-converter,lint,inline,lint,lower-raytracing-pipeline,lint,sroa,lint,lower-await,lint,coro-early,dxil-coro-split,coro-cleanup,lint,legacy-cleanup-continuations,lint,dxil-cont-post-process,lint,continuations-lint,remove-types-metadata' \
; RUN:     -S %s --lint-abort-on-error | FileCheck -check-prefix=POST-PROCESS-GLOBAL %s

target datalayout = "e-m:e-p:64:32-p20:32:32-p21:32:32-p32:32:32-i1:32-i8:8-i16:16-i32:32-i64:32-f16:16-f32:32-f64:32-v8:8-v16:16-v32:32-v48:32-v64:32-v80:32-v96:32-v112:32-v128:32-v144:32-v160:32-v176:32-v192:32-v208:32-v224:32-v240:32-v256:32-n8:16:32"

%dx.types.Handle = type { i8* }
%struct.DispatchSystemData = type { <3 x i32> }
%struct.TraversalData = type { %struct.SystemData, %struct.HitData, <3 x float>, <3 x float>, float, i64 }
%struct.SystemData = type { %struct.DispatchSystemData, %struct.BuiltInTriangleIntersectionAttributes }
%struct.AnyHitTraversalData = type { %struct.TraversalData, %struct.HitData }
%struct.HitData = type { float, i32 }
%struct.BuiltInTriangleIntersectionAttributes = type { <2 x float> }
%struct.RayPayload = type { [50 x i32] }
%dx.types.ResourceProperties = type { i32, i32 }
%"class.RWTexture2D<vector<float, 4> >" = type { <4 x float> }

@"\01?Scene@@3URaytracingAccelerationStructure@@A" = external constant %dx.types.Handle, align 4
@"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4

; Function Attrs: alwaysinline
declare i32 @_cont_GetContinuationStackAddr() #0

; Function Attrs: alwaysinline
declare %struct.DispatchSystemData @_AmdWaitAwaitTraversal(i64, i64, %struct.TraversalData) #0

; Function Attrs: alwaysinline
declare %struct.DispatchSystemData @_AmdAwaitShader(i64, %struct.DispatchSystemData) #0

; Function Attrs: alwaysinline
declare %struct.AnyHitTraversalData @_AmdAwaitAnyHit(i64, %struct.AnyHitTraversalData, float, i32) #0

define void @_cont_ExitRayGen(ptr nocapture readonly %data) alwaysinline nounwind !pointeetys !{%struct.DispatchSystemData poison} {
  ret void
}

define %struct.BuiltInTriangleIntersectionAttributes @_cont_GetTriangleHitAttributes(%struct.SystemData* %data) #0 !pointeetys !17 {
  %addr = getelementptr %struct.SystemData, %struct.SystemData* %data, i32 0, i32 1
  %val = load %struct.BuiltInTriangleIntersectionAttributes, %struct.BuiltInTriangleIntersectionAttributes* %addr, align 4
  ret %struct.BuiltInTriangleIntersectionAttributes %val
}

; Function Attrs: alwaysinline
declare !pointeetys !19 void @_cont_SetTriangleHitAttributes(%struct.SystemData*, %struct.BuiltInTriangleIntersectionAttributes) #0

; Function Attrs: alwaysinline
declare !pointeetys !20 i1 @_cont_IsEndSearch(%struct.TraversalData*) #0

; Function Attrs: nounwind memory(read)
declare !pointeetys !22 i32 @_cont_HitKind(%struct.SystemData* nocapture readnone, %struct.HitData*) #1

; Function Attrs: nounwind memory(none)
declare !pointeetys !24 void @_AmdRestoreSystemData(%struct.DispatchSystemData*) #2

; Function Attrs: nounwind memory(none)
declare !pointeetys !26 void @_AmdRestoreSystemDataAnyHit(%struct.AnyHitTraversalData*) #2

; Function Attrs: nounwind
declare i64 @_AmdGetResumePointAddr() #3

; Function Attrs: nounwind memory(none)
declare !pointeetys !26 void @_cont_AcceptHit(%struct.AnyHitTraversalData* nocapture readnone) #2

; Function Attrs: alwaysinline
define i32 @_cont_GetLocalRootIndex(%struct.DispatchSystemData* %data) #0 !pointeetys !28 {
  ret i32 5
}

declare i64 @_cont_GetContinuationStackGlobalMemBase()

; Function Attrs: alwaysinline
define void @_cont_TraceRay(%struct.DispatchSystemData* %data, i64 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, float %6, float %7, float %8, float %9, float %10, float %11, float %12, float %13) #0 !pointeetys !29 {
  %dis_data = load %struct.DispatchSystemData, %struct.DispatchSystemData* %data, align 4
  %sys_data = insertvalue %struct.SystemData undef, %struct.DispatchSystemData %dis_data, 0
  %trav_data = insertvalue %struct.TraversalData undef, %struct.SystemData %sys_data, 0
  %addr = call i64 @_AmdGetResumePointAddr() #3
  %trav_data2 = insertvalue %struct.TraversalData %trav_data, i64 %addr, 5
  %newdata = call %struct.DispatchSystemData @_AmdWaitAwaitTraversal(i64 4, i64 -1, %struct.TraversalData %trav_data2)
  store %struct.DispatchSystemData %newdata, %struct.DispatchSystemData* %data, align 4
  call void @_AmdRestoreSystemData(%struct.DispatchSystemData* %data)
  ret void
}

; Function Attrs: alwaysinline
define void @_cont_CallShader(%struct.DispatchSystemData* %data, i32 %0) #0 !pointeetys !30 {
  %dis_data = load %struct.DispatchSystemData, %struct.DispatchSystemData* %data, align 4
  %newdata = call %struct.DispatchSystemData @_AmdAwaitShader(i64 2, %struct.DispatchSystemData %dis_data)
  store %struct.DispatchSystemData %newdata, %struct.DispatchSystemData* %data, align 4
  call void @_AmdRestoreSystemData(%struct.DispatchSystemData* %data)
  ret void
}

; Function Attrs: alwaysinline
define i1 @_cont_ReportHit(%struct.AnyHitTraversalData* %data, float %t, i32 %hitKind) #0 !pointeetys !31 {
  %trav_data = load %struct.AnyHitTraversalData, %struct.AnyHitTraversalData* %data, align 4
  %newdata = call %struct.AnyHitTraversalData @_AmdAwaitAnyHit(i64 3, %struct.AnyHitTraversalData %trav_data, float %t, i32 %hitKind)
  store %struct.AnyHitTraversalData %newdata, %struct.AnyHitTraversalData* %data, align 4
  call void @_AmdRestoreSystemDataAnyHit(%struct.AnyHitTraversalData* %data)
  ret i1 true
}

define void @main() {
  %1 = load %dx.types.Handle, %dx.types.Handle* @"\01?Scene@@3URaytracingAccelerationStructure@@A", align 4
  %2 = load %dx.types.Handle, %dx.types.Handle* @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A", align 4
  %3 = alloca %struct.RayPayload, align 4
  %4 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %3, i32 0, i32 0
  %5 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %1)
  %6 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %5, %dx.types.ResourceProperties { i32 16, i32 0 })
  call void @dx.op.traceRay.struct.RayPayload(i32 157, %dx.types.Handle %6, i32 16, i32 -1, i32 0, i32 1, i32 0, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3F50624DE0000000, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+04, %struct.RayPayload* nonnull %3)
  ret void
}

; Function Attrs: nounwind
define void @AnyHit(%struct.RayPayload* noalias nocapture %payload, %struct.BuiltInTriangleIntersectionAttributes* nocapture readonly %attr) #3 !pointeetys !32 {
  ret void
}

; Function Attrs: nounwind
define void @ClosestHit(%struct.RayPayload* noalias nocapture %payload, %struct.BuiltInTriangleIntersectionAttributes* nocapture readonly %attr) #3 !pointeetys !32 {
  %1 = load %dx.types.Handle, %dx.types.Handle* @"\01?Scene@@3URaytracingAccelerationStructure@@A", align 4
  %2 = load %dx.types.Handle, %dx.types.Handle* @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A", align 4
  %3 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %1)
  %4 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 16, i32 0 })
  call void @dx.op.traceRay.struct.RayPayload(i32 157, %dx.types.Handle %4, i32 16, i32 -1, i32 0, i32 1, i32 0, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3F50624DE0000000, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+04, %struct.RayPayload* nonnull %payload)
  ret void
}

; Function Attrs: nounwind
declare !pointeetys !35 void @dx.op.traceRay.struct.RayPayload(i32, %dx.types.Handle, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, %struct.RayPayload*) #3

; Function Attrs: nounwind memory(none)
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #2

; Function Attrs: nounwind memory(read)
declare %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32, %dx.types.Handle) #1

attributes #0 = { alwaysinline }
attributes #1 = { nounwind memory(read) }
attributes #2 = { nounwind memory(none) }
attributes #3 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!1}
!dx.shaderModel = !{!2}
!dx.entryPoints = !{!3, !6, !13, !15}
!continuation.stackAddrspace = !{!36} ; SKIP_GLOBAL_ADDRSPACE

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 6}
!2 = !{!"lib", i32 6, i32 6}
!3 = !{null, !"", null, !4, !12}
!4 = !{!5, !9, null, null}
!5 = !{!6}
!6 = !{void ()* @main, !"main", null, null, !7}
!7 = !{i32 8, i32 7, i32 6, i32 16, i32 7, i32 8, i32 5, !8}
!8 = !{i32 0}
!9 = !{!10}
!10 = !{i32 0, %"class.RWTexture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A" to %"class.RWTexture2D<vector<float, 4> >"*), !"RenderTarget", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !11}
!11 = !{i32 0, i32 9}
!12 = !{i32 0, i64 65536}
!13 = !{void (%struct.RayPayload*, %struct.BuiltInTriangleIntersectionAttributes*)* @AnyHit, !"AnyHit", null, null, !14}
!14 = !{i32 8, i32 9, i32 5, !8}
!15 = !{void (%struct.RayPayload*, %struct.BuiltInTriangleIntersectionAttributes*)* @ClosestHit, !"ClosestHit", null, null, !16}
!16 = !{i32 8, i32 10, i32 5, !8}
!17 = !{%struct.SystemData poison}
!18 = !{i32 0, %struct.SystemData poison}
!19 = !{%struct.SystemData poison}
!20 = !{%struct.TraversalData poison}
!21 = !{i32 0, %struct.TraversalData poison}
!22 = !{null, %struct.SystemData poison, %struct.HitData poison}
!23 = !{i32 0, %struct.HitData poison}
!24 = !{%struct.DispatchSystemData poison}
!25 = !{i32 0, %struct.DispatchSystemData poison}
!26 = !{%struct.AnyHitTraversalData poison}
!27 = !{i32 0, %struct.AnyHitTraversalData poison}
!28 = !{%struct.DispatchSystemData poison}
!29 = !{%struct.DispatchSystemData poison}
!30 = !{%struct.DispatchSystemData poison}
!31 = !{%struct.AnyHitTraversalData poison}
!32 = !{null, %struct.RayPayload poison, %struct.BuiltInTriangleIntersectionAttributes poison}
!33 = !{i32 0, %struct.RayPayload poison}
!34 = !{i32 0, %struct.BuiltInTriangleIntersectionAttributes poison}
!35 = !{%struct.RayPayload poison}
!36 = !{i32 22}
; CLEANUP-LABEL: define %struct.BuiltInTriangleIntersectionAttributes @_cont_GetTriangleHitAttributes(
; CLEANUP-SAME: ptr [[DATA:%.*]]) #[[ATTR0:[0-9]+]] {
; CLEANUP-NEXT:    [[ADDR:%.*]] = getelementptr [[STRUCT_SYSTEMDATA:%.*]], ptr [[DATA]], i32 0, i32 1
; CLEANUP-NEXT:    [[VAL:%.*]] = load [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]], ptr [[ADDR]], align 4
; CLEANUP-NEXT:    ret [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[VAL]]
;
;
; CLEANUP-LABEL: define i32 @_cont_GetLocalRootIndex(
; CLEANUP-SAME: ptr [[DATA:%.*]]) #[[ATTR0]] {
; CLEANUP-NEXT:    ret i32 5
;
;
; CLEANUP-LABEL: define void @main(
; CLEANUP-SAME: i64 [[RETURNADDR:%.*]], [[STRUCT_DISPATCHSYSTEMDATA:%.*]] [[TMP0:%.*]]) !lgc.rt.shaderstage [[META8:![0-9]+]] !continuation.entry [[META19:![0-9]+]] !continuation.registercount [[META8]] !continuation [[META20:![0-9]+]] !continuation.stacksize [[META21:![0-9]+]] !continuation.state [[META8]] {
; CLEANUP-NEXT:  AllocaSpillBB:
; CLEANUP-NEXT:    [[CONT_STATE_STACK_SEGMENT:%.*]] = call ptr addrspace(32) @lgc.cps.alloc(i32 108)
; CLEANUP-NEXT:    [[PAYLOAD_SPILL_ALLOCA:%.*]] = getelementptr inbounds [[MAIN_FRAME:%.*]], ptr addrspace(32) [[CONT_STATE_STACK_SEGMENT]], i32 0, i32 0
; CLEANUP-NEXT:    [[DOTFCA_0_EXTRACT56:%.*]] = extractvalue [[STRUCT_DISPATCHSYSTEMDATA]] [[TMP0]], 0
; CLEANUP-NEXT:    call void @amd.dx.setLocalRootIndex(i32 0)
; CLEANUP-NEXT:    [[TMP1:%.*]] = load [[DX_TYPES_HANDLE:%.*]], ptr @"\01?Scene@@3URaytracingAccelerationStructure@@A", align 4
; CLEANUP-NEXT:    [[TMP2:%.*]] = load [[DX_TYPES_HANDLE]], ptr @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A", align 4
; CLEANUP-NEXT:    [[TMP3:%.*]] = call [[DX_TYPES_HANDLE]] [[DX_OP_CREATEHANDLEFORLIB_DX_TYPES_HANDLE:@[a-zA-Z0-9_$\"\\.-]*[a-zA-Z_$\"\\.-][a-zA-Z0-9_$\"\\.-]*]](i32 160, [[DX_TYPES_HANDLE]] [[TMP1]])
; CLEANUP-NEXT:    [[TMP4:%.*]] = call [[DX_TYPES_HANDLE]] [[DX_OP_ANNOTATEHANDLE:@[a-zA-Z0-9_$\"\\.-]*[a-zA-Z_$\"\\.-][a-zA-Z0-9_$\"\\.-]*]](i32 216, [[DX_TYPES_HANDLE]] [[TMP3]], [[DX_TYPES_RESOURCEPROPERTIES:%.*]] { i32 16, i32 0 })
; CLEANUP-NEXT:    [[TMP5:%.*]] = call i64 @amd.dx.getAccelStructAddr([[DX_TYPES_HANDLE]] [[TMP4]])
; CLEANUP-NEXT:    [[DIS_DATA_I_FCA_0_INSERT:%.*]] = insertvalue [[STRUCT_DISPATCHSYSTEMDATA]] poison, <3 x i32> [[DOTFCA_0_EXTRACT56]], 0
; CLEANUP-NEXT:    [[SYS_DATA_I:%.*]] = insertvalue [[STRUCT_SYSTEMDATA:%.*]] undef, [[STRUCT_DISPATCHSYSTEMDATA]] [[DIS_DATA_I_FCA_0_INSERT]], 0
; CLEANUP-NEXT:    [[TRAV_DATA_I:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA:%.*]] undef, [[STRUCT_SYSTEMDATA]] [[SYS_DATA_I]], 0
; CLEANUP-NEXT:    [[ADDR_I:%.*]] = call i64 @_AmdGetResumePointAddr() #[[ATTR3:[0-9]+]]
; CLEANUP-NEXT:    [[TRAV_DATA2_I:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I]], i64 [[ADDR_I]], 5
; CLEANUP-NEXT:    [[TMP6:%.*]] = ptrtoint ptr addrspace(32) [[PAYLOAD_SPILL_ALLOCA]] to i32
; CLEANUP-NEXT:    [[TMP7:%.*]] = inttoptr i32 [[TMP6]] to ptr addrspace(32)
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP7]], align 4
; CLEANUP-NEXT:    [[TMP8:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 1
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP8]], align 4
; CLEANUP-NEXT:    [[TMP9:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 2
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP9]], align 4
; CLEANUP-NEXT:    [[TMP10:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 3
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP10]], align 4
; CLEANUP-NEXT:    [[TMP11:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 4
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP11]], align 4
; CLEANUP-NEXT:    [[TMP12:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 5
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP12]], align 4
; CLEANUP-NEXT:    [[TMP13:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 6
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP13]], align 4
; CLEANUP-NEXT:    [[TMP14:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 7
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP14]], align 4
; CLEANUP-NEXT:    [[TMP15:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 8
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP15]], align 4
; CLEANUP-NEXT:    [[TMP16:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 9
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP16]], align 4
; CLEANUP-NEXT:    [[TMP17:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 10
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP17]], align 4
; CLEANUP-NEXT:    [[TMP18:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 11
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP18]], align 4
; CLEANUP-NEXT:    [[TMP19:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 12
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP19]], align 4
; CLEANUP-NEXT:    [[TMP20:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 13
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP20]], align 4
; CLEANUP-NEXT:    [[TMP21:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 14
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP21]], align 4
; CLEANUP-NEXT:    [[TMP22:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 15
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP22]], align 4
; CLEANUP-NEXT:    [[TMP23:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 16
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP23]], align 4
; CLEANUP-NEXT:    [[TMP24:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 17
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP24]], align 4
; CLEANUP-NEXT:    [[TMP25:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 18
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP25]], align 4
; CLEANUP-NEXT:    [[TMP26:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 19
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP26]], align 4
; CLEANUP-NEXT:    [[TMP27:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 20
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP27]], align 4
; CLEANUP-NEXT:    [[TMP28:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 21
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP28]], align 4
; CLEANUP-NEXT:    [[TMP29:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 22
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP29]], align 4
; CLEANUP-NEXT:    [[TMP30:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 23
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP30]], align 4
; CLEANUP-NEXT:    [[TMP31:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 24
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP31]], align 4
; CLEANUP-NEXT:    [[TMP32:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 25
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP32]], align 4
; CLEANUP-NEXT:    [[TMP33:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP7]], i32 26
; CLEANUP-NEXT:    store i32 undef, ptr addrspace(32) [[TMP33]], align 4
; CLEANUP-NEXT:    [[DOTFCA_0_INSERT:%.*]] = insertvalue [30 x i32] poison, i32 [[TMP6]], 0
; CLEANUP-NEXT:    [[DOTFCA_1_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_0_INSERT]], i32 undef, 1
; CLEANUP-NEXT:    [[DOTFCA_2_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_1_INSERT]], i32 undef, 2
; CLEANUP-NEXT:    [[DOTFCA_3_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_2_INSERT]], i32 undef, 3
; CLEANUP-NEXT:    [[DOTFCA_4_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_3_INSERT]], i32 undef, 4
; CLEANUP-NEXT:    [[DOTFCA_5_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_4_INSERT]], i32 undef, 5
; CLEANUP-NEXT:    [[DOTFCA_6_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_5_INSERT]], i32 undef, 6
; CLEANUP-NEXT:    [[DOTFCA_7_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_6_INSERT]], i32 undef, 7
; CLEANUP-NEXT:    [[DOTFCA_8_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_7_INSERT]], i32 undef, 8
; CLEANUP-NEXT:    [[DOTFCA_9_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_8_INSERT]], i32 undef, 9
; CLEANUP-NEXT:    [[DOTFCA_10_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_9_INSERT]], i32 undef, 10
; CLEANUP-NEXT:    [[DOTFCA_11_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_10_INSERT]], i32 undef, 11
; CLEANUP-NEXT:    [[DOTFCA_12_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_11_INSERT]], i32 undef, 12
; CLEANUP-NEXT:    [[DOTFCA_13_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_12_INSERT]], i32 undef, 13
; CLEANUP-NEXT:    [[DOTFCA_14_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_13_INSERT]], i32 undef, 14
; CLEANUP-NEXT:    [[DOTFCA_15_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_14_INSERT]], i32 undef, 15
; CLEANUP-NEXT:    [[DOTFCA_16_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_15_INSERT]], i32 undef, 16
; CLEANUP-NEXT:    [[DOTFCA_17_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_16_INSERT]], i32 undef, 17
; CLEANUP-NEXT:    [[DOTFCA_18_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_17_INSERT]], i32 undef, 18
; CLEANUP-NEXT:    [[DOTFCA_19_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_18_INSERT]], i32 undef, 19
; CLEANUP-NEXT:    [[DOTFCA_20_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_19_INSERT]], i32 undef, 20
; CLEANUP-NEXT:    [[DOTFCA_21_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_20_INSERT]], i32 undef, 21
; CLEANUP-NEXT:    [[DOTFCA_22_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_21_INSERT]], i32 undef, 22
; CLEANUP-NEXT:    [[DOTFCA_23_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_22_INSERT]], i32 undef, 23
; CLEANUP-NEXT:    [[DOTFCA_24_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_23_INSERT]], i32 undef, 24
; CLEANUP-NEXT:    [[DOTFCA_25_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_24_INSERT]], i32 undef, 25
; CLEANUP-NEXT:    [[DOTFCA_26_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_25_INSERT]], i32 undef, 26
; CLEANUP-NEXT:    [[DOTFCA_27_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_26_INSERT]], i32 undef, 27
; CLEANUP-NEXT:    [[DOTFCA_28_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_27_INSERT]], i32 undef, 28
; CLEANUP-NEXT:    [[DOTFCA_29_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_28_INSERT]], i32 undef, 29
; CLEANUP-NEXT:    [[TMP34:%.*]] = call i64 (...) @lgc.cps.as.continuation.reference__i64(ptr @main.resume.0)
; CLEANUP-NEXT:    call void (...) @lgc.cps.jump(i64 4, i32 -1, {} poison, i64 [[TMP34]], i64 poison, [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA2_I]], [10 x i32] poison, [30 x i32] [[DOTFCA_29_INSERT]]), !continuation.registercount [[META17:![0-9]+]], !continuation.returnedRegistercount [[META17]], !waitmask [[META22:![0-9]+]]
; CLEANUP-NEXT:    unreachable
;
;
; CLEANUP-LABEL: define dso_local void @main.resume.0(
; CLEANUP-SAME: i64 [[TMP0:%.*]], { [[STRUCT_DISPATCHSYSTEMDATA:%.*]], [23 x i32], [30 x i32] } [[TMP1:%.*]]) !lgc.rt.shaderstage [[META8]] !continuation.registercount [[META17]] !continuation [[META20]] {
; CLEANUP-NEXT:  entryresume.0:
; CLEANUP-NEXT:    [[CONT_STATE_STACK_SEGMENT:%.*]] = call ptr addrspace(32) @lgc.cps.peek(i32 108)
; CLEANUP-NEXT:    [[PAYLOAD_SPILL_ALLOCA:%.*]] = getelementptr inbounds [[MAIN_FRAME:%.*]], ptr addrspace(32) [[CONT_STATE_STACK_SEGMENT]], i32 0, i32 0
; CLEANUP-NEXT:    [[TMP3:%.*]] = extractvalue { [[STRUCT_DISPATCHSYSTEMDATA]], [23 x i32], [30 x i32] } [[TMP1]], 2
; CLEANUP-NEXT:    [[DOTFCA_0_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 0
; CLEANUP-NEXT:    [[DOTFCA_1_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 1
; CLEANUP-NEXT:    [[DOTFCA_2_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 2
; CLEANUP-NEXT:    [[DOTFCA_3_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 3
; CLEANUP-NEXT:    [[DOTFCA_4_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 4
; CLEANUP-NEXT:    [[DOTFCA_5_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 5
; CLEANUP-NEXT:    [[DOTFCA_6_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 6
; CLEANUP-NEXT:    [[DOTFCA_7_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 7
; CLEANUP-NEXT:    [[DOTFCA_8_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 8
; CLEANUP-NEXT:    [[DOTFCA_9_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 9
; CLEANUP-NEXT:    [[DOTFCA_10_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 10
; CLEANUP-NEXT:    [[DOTFCA_11_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 11
; CLEANUP-NEXT:    [[DOTFCA_12_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 12
; CLEANUP-NEXT:    [[DOTFCA_13_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 13
; CLEANUP-NEXT:    [[DOTFCA_14_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 14
; CLEANUP-NEXT:    [[DOTFCA_15_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 15
; CLEANUP-NEXT:    [[DOTFCA_16_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 16
; CLEANUP-NEXT:    [[DOTFCA_17_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 17
; CLEANUP-NEXT:    [[DOTFCA_18_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 18
; CLEANUP-NEXT:    [[DOTFCA_19_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 19
; CLEANUP-NEXT:    [[DOTFCA_20_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 20
; CLEANUP-NEXT:    [[DOTFCA_21_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 21
; CLEANUP-NEXT:    [[DOTFCA_22_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 22
; CLEANUP-NEXT:    [[DOTFCA_23_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 23
; CLEANUP-NEXT:    [[DOTFCA_24_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 24
; CLEANUP-NEXT:    [[DOTFCA_25_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 25
; CLEANUP-NEXT:    [[DOTFCA_26_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 26
; CLEANUP-NEXT:    [[DOTFCA_27_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 27
; CLEANUP-NEXT:    [[TMP23:%.*]] = extractvalue [30 x i32] [[TMP3]], 28
; CLEANUP-NEXT:    [[DOTFCA_29_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 29
; CLEANUP-NEXT:    [[TMP2:%.*]] = inttoptr i32 [[DOTFCA_0_EXTRACT]] to ptr addrspace(32)
; CLEANUP-NEXT:    [[TMP4:%.*]] = load i32, ptr addrspace(32) [[TMP2]], align 4
; CLEANUP-NEXT:    [[TMP27:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 1
; CLEANUP-NEXT:    [[TMP6:%.*]] = load i32, ptr addrspace(32) [[TMP27]], align 4
; CLEANUP-NEXT:    [[TMP29:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 2
; CLEANUP-NEXT:    [[TMP8:%.*]] = load i32, ptr addrspace(32) [[TMP29]], align 4
; CLEANUP-NEXT:    [[TMP31:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 3
; CLEANUP-NEXT:    [[TMP10:%.*]] = load i32, ptr addrspace(32) [[TMP31]], align 4
; CLEANUP-NEXT:    [[TMP33:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 4
; CLEANUP-NEXT:    [[TMP12:%.*]] = load i32, ptr addrspace(32) [[TMP33]], align 4
; CLEANUP-NEXT:    [[TMP35:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 5
; CLEANUP-NEXT:    [[TMP14:%.*]] = load i32, ptr addrspace(32) [[TMP35]], align 4
; CLEANUP-NEXT:    [[TMP37:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 6
; CLEANUP-NEXT:    [[TMP16:%.*]] = load i32, ptr addrspace(32) [[TMP37]], align 4
; CLEANUP-NEXT:    [[TMP39:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 7
; CLEANUP-NEXT:    [[TMP18:%.*]] = load i32, ptr addrspace(32) [[TMP39]], align 4
; CLEANUP-NEXT:    [[TMP41:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 8
; CLEANUP-NEXT:    [[TMP20:%.*]] = load i32, ptr addrspace(32) [[TMP41]], align 4
; CLEANUP-NEXT:    [[TMP43:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 9
; CLEANUP-NEXT:    [[TMP22:%.*]] = load i32, ptr addrspace(32) [[TMP43]], align 4
; CLEANUP-NEXT:    [[TMP45:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 10
; CLEANUP-NEXT:    [[TMP24:%.*]] = load i32, ptr addrspace(32) [[TMP45]], align 4
; CLEANUP-NEXT:    [[TMP47:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 11
; CLEANUP-NEXT:    [[TMP26:%.*]] = load i32, ptr addrspace(32) [[TMP47]], align 4
; CLEANUP-NEXT:    [[TMP49:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 12
; CLEANUP-NEXT:    [[TMP28:%.*]] = load i32, ptr addrspace(32) [[TMP49]], align 4
; CLEANUP-NEXT:    [[TMP51:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 13
; CLEANUP-NEXT:    [[TMP30:%.*]] = load i32, ptr addrspace(32) [[TMP51]], align 4
; CLEANUP-NEXT:    [[TMP53:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 14
; CLEANUP-NEXT:    [[TMP32:%.*]] = load i32, ptr addrspace(32) [[TMP53]], align 4
; CLEANUP-NEXT:    [[TMP55:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 15
; CLEANUP-NEXT:    [[TMP34:%.*]] = load i32, ptr addrspace(32) [[TMP55]], align 4
; CLEANUP-NEXT:    [[TMP57:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 16
; CLEANUP-NEXT:    [[TMP36:%.*]] = load i32, ptr addrspace(32) [[TMP57]], align 4
; CLEANUP-NEXT:    [[TMP59:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 17
; CLEANUP-NEXT:    [[TMP38:%.*]] = load i32, ptr addrspace(32) [[TMP59]], align 4
; CLEANUP-NEXT:    [[TMP61:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 18
; CLEANUP-NEXT:    [[TMP40:%.*]] = load i32, ptr addrspace(32) [[TMP61]], align 4
; CLEANUP-NEXT:    [[TMP63:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 19
; CLEANUP-NEXT:    [[TMP42:%.*]] = load i32, ptr addrspace(32) [[TMP63]], align 4
; CLEANUP-NEXT:    [[TMP65:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 20
; CLEANUP-NEXT:    [[TMP44:%.*]] = load i32, ptr addrspace(32) [[TMP65]], align 4
; CLEANUP-NEXT:    [[TMP67:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 21
; CLEANUP-NEXT:    [[TMP46:%.*]] = load i32, ptr addrspace(32) [[TMP67]], align 4
; CLEANUP-NEXT:    [[TMP69:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 22
; CLEANUP-NEXT:    [[TMP48:%.*]] = load i32, ptr addrspace(32) [[TMP69]], align 4
; CLEANUP-NEXT:    [[TMP71:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 23
; CLEANUP-NEXT:    [[TMP50:%.*]] = load i32, ptr addrspace(32) [[TMP71]], align 4
; CLEANUP-NEXT:    [[TMP73:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 24
; CLEANUP-NEXT:    [[TMP52:%.*]] = load i32, ptr addrspace(32) [[TMP73]], align 4
; CLEANUP-NEXT:    [[TMP75:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 25
; CLEANUP-NEXT:    [[TMP54:%.*]] = load i32, ptr addrspace(32) [[TMP75]], align 4
; CLEANUP-NEXT:    [[TMP77:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 26
; CLEANUP-NEXT:    [[TMP56:%.*]] = load i32, ptr addrspace(32) [[TMP77]], align 4
; CLEANUP-NEXT:    [[TMP60:%.*]] = inttoptr i32 [[DOTFCA_0_EXTRACT]] to ptr addrspace(32)
; CLEANUP-NEXT:    [[TMP58:%.*]] = extractvalue { [[STRUCT_DISPATCHSYSTEMDATA]], [23 x i32], [30 x i32] } [[TMP1]], 0
; CLEANUP-NEXT:    [[DOTFCA_0_EXTRACT57:%.*]] = extractvalue [[STRUCT_DISPATCHSYSTEMDATA]] [[TMP58]], 0
; CLEANUP-NEXT:    call void @amd.dx.setLocalRootIndex(i32 0)
; CLEANUP-NEXT:    call void @lgc.cps.free(i32 108)
; CLEANUP-NEXT:    ret void
; CLEANUP:       entryresume.0.split:
; CLEANUP-NEXT:    unreachable
;
;
; CLEANUP-LABEL: define void @AnyHit(
; CLEANUP-SAME: i64 [[RETURNADDR:%.*]], [[STRUCT_ANYHITTRAVERSALDATA:%.*]] [[TMP0:%.*]], [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]] [[TMP1:%.*]], [6 x i32] [[PADDING:%.*]], [30 x i32] [[PAYLOAD:%.*]]) #[[ATTR3]] !lgc.rt.shaderstage [[META23:![0-9]+]] !continuation.registercount [[META17]] !continuation [[META24:![0-9]+]] !continuation.state [[META8]] {
; CLEANUP-NEXT:  AllocaSpillBB:
; CLEANUP-NEXT:    [[SYSTEM_DATA_ALLOCA:%.*]] = alloca [[STRUCT_ANYHITTRAVERSALDATA]], align 8
; CLEANUP-NEXT:    [[PAYLOAD_FCA_0_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 0
; CLEANUP-NEXT:    [[PAYLOAD_FCA_1_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 1
; CLEANUP-NEXT:    [[PAYLOAD_FCA_2_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 2
; CLEANUP-NEXT:    [[PAYLOAD_FCA_3_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 3
; CLEANUP-NEXT:    [[PAYLOAD_FCA_4_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 4
; CLEANUP-NEXT:    [[PAYLOAD_FCA_5_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 5
; CLEANUP-NEXT:    [[PAYLOAD_FCA_6_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 6
; CLEANUP-NEXT:    [[PAYLOAD_FCA_7_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 7
; CLEANUP-NEXT:    [[PAYLOAD_FCA_8_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 8
; CLEANUP-NEXT:    [[PAYLOAD_FCA_9_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 9
; CLEANUP-NEXT:    [[PAYLOAD_FCA_10_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 10
; CLEANUP-NEXT:    [[PAYLOAD_FCA_11_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 11
; CLEANUP-NEXT:    [[PAYLOAD_FCA_12_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 12
; CLEANUP-NEXT:    [[PAYLOAD_FCA_13_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 13
; CLEANUP-NEXT:    [[PAYLOAD_FCA_14_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 14
; CLEANUP-NEXT:    [[PAYLOAD_FCA_15_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 15
; CLEANUP-NEXT:    [[PAYLOAD_FCA_16_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 16
; CLEANUP-NEXT:    [[PAYLOAD_FCA_17_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 17
; CLEANUP-NEXT:    [[PAYLOAD_FCA_18_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 18
; CLEANUP-NEXT:    [[PAYLOAD_FCA_19_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 19
; CLEANUP-NEXT:    [[PAYLOAD_FCA_20_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 20
; CLEANUP-NEXT:    [[PAYLOAD_FCA_21_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 21
; CLEANUP-NEXT:    [[PAYLOAD_FCA_22_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 22
; CLEANUP-NEXT:    [[PAYLOAD_FCA_23_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 23
; CLEANUP-NEXT:    [[PAYLOAD_FCA_24_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 24
; CLEANUP-NEXT:    [[PAYLOAD_FCA_25_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 25
; CLEANUP-NEXT:    [[PAYLOAD_FCA_26_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 26
; CLEANUP-NEXT:    [[PAYLOAD_FCA_27_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 27
; CLEANUP-NEXT:    [[PAYLOAD_FCA_28_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 28
; CLEANUP-NEXT:    [[PAYLOAD_FCA_29_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 29
; CLEANUP-NEXT:    [[DOTFCA_0_0_0_0_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 0, 0, 0
; CLEANUP-NEXT:    [[DOTFCA_0_0_0_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0, i32 0, i32 0
; CLEANUP-NEXT:    store <3 x i32> [[DOTFCA_0_0_0_0_EXTRACT]], ptr [[DOTFCA_0_0_0_0_GEP]], align 4
; CLEANUP-NEXT:    [[DOTFCA_0_0_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 0, 1, 0
; CLEANUP-NEXT:    [[DOTFCA_0_0_1_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0, i32 1, i32 0
; CLEANUP-NEXT:    store <2 x float> [[DOTFCA_0_0_1_0_EXTRACT]], ptr [[DOTFCA_0_0_1_0_GEP]], align 4
; CLEANUP-NEXT:    [[DOTFCA_0_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 1, 0
; CLEANUP-NEXT:    [[DOTFCA_0_1_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 1, i32 0
; CLEANUP-NEXT:    store float [[DOTFCA_0_1_0_EXTRACT]], ptr [[DOTFCA_0_1_0_GEP]], align 4
; CLEANUP-NEXT:    [[DOTFCA_0_1_1_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 1, 1
; CLEANUP-NEXT:    [[DOTFCA_0_1_1_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 1, i32 1
; CLEANUP-NEXT:    store i32 [[DOTFCA_0_1_1_EXTRACT]], ptr [[DOTFCA_0_1_1_GEP]], align 4
; CLEANUP-NEXT:    [[DOTFCA_0_2_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 2
; CLEANUP-NEXT:    [[DOTFCA_0_2_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 2
; CLEANUP-NEXT:    store <3 x float> [[DOTFCA_0_2_EXTRACT]], ptr [[DOTFCA_0_2_GEP]], align 4
; CLEANUP-NEXT:    [[DOTFCA_0_3_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 3
; CLEANUP-NEXT:    [[DOTFCA_0_3_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 3
; CLEANUP-NEXT:    store <3 x float> [[DOTFCA_0_3_EXTRACT]], ptr [[DOTFCA_0_3_GEP]], align 4
; CLEANUP-NEXT:    [[DOTFCA_0_4_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 4
; CLEANUP-NEXT:    [[DOTFCA_0_4_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 4
; CLEANUP-NEXT:    store float [[DOTFCA_0_4_EXTRACT]], ptr [[DOTFCA_0_4_GEP]], align 4
; CLEANUP-NEXT:    [[DOTFCA_0_5_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 5
; CLEANUP-NEXT:    [[DOTFCA_0_5_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 5
; CLEANUP-NEXT:    store i64 [[DOTFCA_0_5_EXTRACT]], ptr [[DOTFCA_0_5_GEP]], align 4
; CLEANUP-NEXT:    [[DOTFCA_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 1, 0
; CLEANUP-NEXT:    [[DOTFCA_1_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1, i32 0
; CLEANUP-NEXT:    store float [[DOTFCA_1_0_EXTRACT]], ptr [[DOTFCA_1_0_GEP]], align 4
; CLEANUP-NEXT:    [[DOTFCA_1_1_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 1, 1
; CLEANUP-NEXT:    [[DOTFCA_1_1_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1, i32 1
; CLEANUP-NEXT:    store i32 [[DOTFCA_1_1_EXTRACT]], ptr [[DOTFCA_1_1_GEP]], align 4
; CLEANUP-NEXT:    [[TMP2:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0, i32 0
; CLEANUP-NEXT:    [[TMP3:%.*]] = inttoptr i32 [[PAYLOAD_FCA_0_EXTRACT]] to ptr addrspace(32)
; CLEANUP-NEXT:    [[TMP4:%.*]] = load i32, ptr addrspace(32) [[TMP3]], align 4
; CLEANUP-NEXT:    [[TMP28:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 1
; CLEANUP-NEXT:    [[TMP6:%.*]] = load i32, ptr addrspace(32) [[TMP28]], align 4
; CLEANUP-NEXT:    [[TMP30:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 2
; CLEANUP-NEXT:    [[TMP8:%.*]] = load i32, ptr addrspace(32) [[TMP30]], align 4
; CLEANUP-NEXT:    [[TMP32:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 3
; CLEANUP-NEXT:    [[TMP10:%.*]] = load i32, ptr addrspace(32) [[TMP32]], align 4
; CLEANUP-NEXT:    [[TMP34:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 4
; CLEANUP-NEXT:    [[TMP12:%.*]] = load i32, ptr addrspace(32) [[TMP34]], align 4
; CLEANUP-NEXT:    [[TMP36:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 5
; CLEANUP-NEXT:    [[TMP14:%.*]] = load i32, ptr addrspace(32) [[TMP36]], align 4
; CLEANUP-NEXT:    [[TMP38:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 6
; CLEANUP-NEXT:    [[TMP16:%.*]] = load i32, ptr addrspace(32) [[TMP38]], align 4
; CLEANUP-NEXT:    [[TMP40:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 7
; CLEANUP-NEXT:    [[TMP18:%.*]] = load i32, ptr addrspace(32) [[TMP40]], align 4
; CLEANUP-NEXT:    [[TMP42:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 8
; CLEANUP-NEXT:    [[TMP20:%.*]] = load i32, ptr addrspace(32) [[TMP42]], align 4
; CLEANUP-NEXT:    [[TMP44:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 9
; CLEANUP-NEXT:    [[TMP22:%.*]] = load i32, ptr addrspace(32) [[TMP44]], align 4
; CLEANUP-NEXT:    [[TMP46:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 10
; CLEANUP-NEXT:    [[TMP24:%.*]] = load i32, ptr addrspace(32) [[TMP46]], align 4
; CLEANUP-NEXT:    [[TMP48:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 11
; CLEANUP-NEXT:    [[TMP26:%.*]] = load i32, ptr addrspace(32) [[TMP48]], align 4
; CLEANUP-NEXT:    [[TMP50:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 12
; CLEANUP-NEXT:    [[TMP29:%.*]] = load i32, ptr addrspace(32) [[TMP50]], align 4
; CLEANUP-NEXT:    [[TMP52:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 13
; CLEANUP-NEXT:    [[TMP31:%.*]] = load i32, ptr addrspace(32) [[TMP52]], align 4
; CLEANUP-NEXT:    [[TMP54:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 14
; CLEANUP-NEXT:    [[TMP33:%.*]] = load i32, ptr addrspace(32) [[TMP54]], align 4
; CLEANUP-NEXT:    [[TMP56:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 15
; CLEANUP-NEXT:    [[TMP35:%.*]] = load i32, ptr addrspace(32) [[TMP56]], align 4
; CLEANUP-NEXT:    [[TMP58:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 16
; CLEANUP-NEXT:    [[TMP37:%.*]] = load i32, ptr addrspace(32) [[TMP58]], align 4
; CLEANUP-NEXT:    [[TMP60:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 17
; CLEANUP-NEXT:    [[TMP39:%.*]] = load i32, ptr addrspace(32) [[TMP60]], align 4
; CLEANUP-NEXT:    [[TMP62:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 18
; CLEANUP-NEXT:    [[TMP41:%.*]] = load i32, ptr addrspace(32) [[TMP62]], align 4
; CLEANUP-NEXT:    [[TMP64:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 19
; CLEANUP-NEXT:    [[TMP43:%.*]] = load i32, ptr addrspace(32) [[TMP64]], align 4
; CLEANUP-NEXT:    [[TMP66:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 20
; CLEANUP-NEXT:    [[TMP45:%.*]] = load i32, ptr addrspace(32) [[TMP66]], align 4
; CLEANUP-NEXT:    [[TMP68:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 21
; CLEANUP-NEXT:    [[TMP47:%.*]] = load i32, ptr addrspace(32) [[TMP68]], align 4
; CLEANUP-NEXT:    [[TMP70:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 22
; CLEANUP-NEXT:    [[TMP49:%.*]] = load i32, ptr addrspace(32) [[TMP70]], align 4
; CLEANUP-NEXT:    [[TMP72:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 23
; CLEANUP-NEXT:    [[TMP51:%.*]] = load i32, ptr addrspace(32) [[TMP72]], align 4
; CLEANUP-NEXT:    [[TMP74:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 24
; CLEANUP-NEXT:    [[TMP53:%.*]] = load i32, ptr addrspace(32) [[TMP74]], align 4
; CLEANUP-NEXT:    [[TMP76:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 25
; CLEANUP-NEXT:    [[TMP55:%.*]] = load i32, ptr addrspace(32) [[TMP76]], align 4
; CLEANUP-NEXT:    [[TMP78:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP3]], i32 26
; CLEANUP-NEXT:    [[TMP57:%.*]] = load i32, ptr addrspace(32) [[TMP78]], align 4
; CLEANUP-NEXT:    [[TMP82:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; CLEANUP-NEXT:    [[ADDR_I:%.*]] = getelementptr [[STRUCT_SYSTEMDATA:%.*]], ptr [[TMP82]], i32 0, i32 1
; CLEANUP-NEXT:    [[VAL_I_FCA_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]], ptr [[ADDR_I]], i32 0, i32 0
; CLEANUP-NEXT:    [[VAL_I_FCA_0_LOAD:%.*]] = load <2 x float>, ptr [[VAL_I_FCA_0_GEP]], align 4
; CLEANUP-NEXT:    [[VAL_I_FCA_0_INSERT:%.*]] = insertvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] poison, <2 x float> [[VAL_I_FCA_0_LOAD]], 0
; CLEANUP-NEXT:    [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[VAL_I_FCA_0_INSERT]], 0
; CLEANUP-NEXT:    [[DOTSROA_035_0_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT]], i32 0
; CLEANUP-NEXT:    [[TMP81:%.*]] = bitcast float [[DOTSROA_035_0_VEC_EXTRACT]] to i32
; CLEANUP-NEXT:    [[DOTSROA_035_4_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT]], i32 1
; CLEANUP-NEXT:    [[TMP83:%.*]] = bitcast float [[DOTSROA_035_4_VEC_EXTRACT]] to i32
; CLEANUP-NEXT:    [[DOTFCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[TMP1]], 0
; CLEANUP-NEXT:    call void @amd.dx.setLocalRootIndex(i32 5)
; CLEANUP-NEXT:    call void @_cont_AcceptHit(ptr [[SYSTEM_DATA_ALLOCA]])
; CLEANUP-NEXT:    [[TMP85:%.*]] = inttoptr i32 [[PAYLOAD_FCA_0_EXTRACT]] to ptr addrspace(32)
; CLEANUP-NEXT:    store i32 [[TMP4]], ptr addrspace(32) [[TMP85]], align 4
; CLEANUP-NEXT:    [[TMP110:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 1
; CLEANUP-NEXT:    store i32 [[TMP6]], ptr addrspace(32) [[TMP110]], align 4
; CLEANUP-NEXT:    [[TMP111:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 2
; CLEANUP-NEXT:    store i32 [[TMP8]], ptr addrspace(32) [[TMP111]], align 4
; CLEANUP-NEXT:    [[TMP86:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 3
; CLEANUP-NEXT:    store i32 [[TMP10]], ptr addrspace(32) [[TMP86]], align 4
; CLEANUP-NEXT:    [[TMP87:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 4
; CLEANUP-NEXT:    store i32 [[TMP12]], ptr addrspace(32) [[TMP87]], align 4
; CLEANUP-NEXT:    [[TMP88:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 5
; CLEANUP-NEXT:    store i32 [[TMP14]], ptr addrspace(32) [[TMP88]], align 4
; CLEANUP-NEXT:    [[TMP89:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 6
; CLEANUP-NEXT:    store i32 [[TMP16]], ptr addrspace(32) [[TMP89]], align 4
; CLEANUP-NEXT:    [[TMP90:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 7
; CLEANUP-NEXT:    store i32 [[TMP18]], ptr addrspace(32) [[TMP90]], align 4
; CLEANUP-NEXT:    [[TMP91:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 8
; CLEANUP-NEXT:    store i32 [[TMP20]], ptr addrspace(32) [[TMP91]], align 4
; CLEANUP-NEXT:    [[TMP92:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 9
; CLEANUP-NEXT:    store i32 [[TMP22]], ptr addrspace(32) [[TMP92]], align 4
; CLEANUP-NEXT:    [[TMP93:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 10
; CLEANUP-NEXT:    store i32 [[TMP24]], ptr addrspace(32) [[TMP93]], align 4
; CLEANUP-NEXT:    [[TMP94:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 11
; CLEANUP-NEXT:    store i32 [[TMP26]], ptr addrspace(32) [[TMP94]], align 4
; CLEANUP-NEXT:    [[TMP95:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 12
; CLEANUP-NEXT:    store i32 [[TMP29]], ptr addrspace(32) [[TMP95]], align 4
; CLEANUP-NEXT:    [[TMP96:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 13
; CLEANUP-NEXT:    store i32 [[TMP31]], ptr addrspace(32) [[TMP96]], align 4
; CLEANUP-NEXT:    [[TMP97:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 14
; CLEANUP-NEXT:    store i32 [[TMP33]], ptr addrspace(32) [[TMP97]], align 4
; CLEANUP-NEXT:    [[TMP98:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 15
; CLEANUP-NEXT:    store i32 [[TMP35]], ptr addrspace(32) [[TMP98]], align 4
; CLEANUP-NEXT:    [[TMP99:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 16
; CLEANUP-NEXT:    store i32 [[TMP37]], ptr addrspace(32) [[TMP99]], align 4
; CLEANUP-NEXT:    [[TMP100:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 17
; CLEANUP-NEXT:    store i32 [[TMP39]], ptr addrspace(32) [[TMP100]], align 4
; CLEANUP-NEXT:    [[TMP101:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 18
; CLEANUP-NEXT:    store i32 [[TMP41]], ptr addrspace(32) [[TMP101]], align 4
; CLEANUP-NEXT:    [[TMP102:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 19
; CLEANUP-NEXT:    store i32 [[TMP43]], ptr addrspace(32) [[TMP102]], align 4
; CLEANUP-NEXT:    [[TMP103:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 20
; CLEANUP-NEXT:    store i32 [[TMP45]], ptr addrspace(32) [[TMP103]], align 4
; CLEANUP-NEXT:    [[TMP104:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 21
; CLEANUP-NEXT:    store i32 [[TMP47]], ptr addrspace(32) [[TMP104]], align 4
; CLEANUP-NEXT:    [[TMP105:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 22
; CLEANUP-NEXT:    store i32 [[TMP49]], ptr addrspace(32) [[TMP105]], align 4
; CLEANUP-NEXT:    [[TMP106:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 23
; CLEANUP-NEXT:    store i32 [[TMP51]], ptr addrspace(32) [[TMP106]], align 4
; CLEANUP-NEXT:    [[TMP107:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 24
; CLEANUP-NEXT:    store i32 [[TMP53]], ptr addrspace(32) [[TMP107]], align 4
; CLEANUP-NEXT:    [[TMP108:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 25
; CLEANUP-NEXT:    store i32 [[TMP55]], ptr addrspace(32) [[TMP108]], align 4
; CLEANUP-NEXT:    [[TMP109:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP85]], i32 26
; CLEANUP-NEXT:    store i32 [[TMP57]], ptr addrspace(32) [[TMP109]], align 4
; CLEANUP-NEXT:    [[HITATTRSALLOCA_SROA_0_0_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[DOTFCA_0_EXTRACT]], i32 0
; CLEANUP-NEXT:    [[TMP112:%.*]] = bitcast float [[HITATTRSALLOCA_SROA_0_0_VEC_EXTRACT]] to i32
; CLEANUP-NEXT:    [[TMP113:%.*]] = bitcast i32 [[TMP112]] to float
; CLEANUP-NEXT:    [[DOTSROA_037_0_VEC_INSERT:%.*]] = insertelement <2 x float> undef, float [[TMP113]], i32 0
; CLEANUP-NEXT:    [[HITATTRSALLOCA_SROA_0_4_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[DOTFCA_0_EXTRACT]], i32 1
; CLEANUP-NEXT:    [[TMP114:%.*]] = bitcast float [[HITATTRSALLOCA_SROA_0_4_VEC_EXTRACT]] to i32
; CLEANUP-NEXT:    [[TMP115:%.*]] = bitcast i32 [[TMP114]] to float
; CLEANUP-NEXT:    [[DOTSROA_037_4_VEC_INSERT:%.*]] = insertelement <2 x float> [[DOTSROA_037_0_VEC_INSERT]], float [[TMP115]], i32 1
; CLEANUP-NEXT:    [[DOTFCA_0_INSERT36:%.*]] = insertvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] poison, <2 x float> [[DOTSROA_037_4_VEC_INSERT]], 0
; CLEANUP-NEXT:    [[TMP116:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; CLEANUP-NEXT:    call void @_cont_SetTriangleHitAttributes(ptr [[TMP116]], [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[DOTFCA_0_INSERT36]])
; CLEANUP-NEXT:    [[DOTFCA_0_0_0_0_GEP25:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0, i32 0, i32 0
; CLEANUP-NEXT:    [[DOTFCA_0_0_0_0_LOAD:%.*]] = load <3 x i32>, ptr [[DOTFCA_0_0_0_0_GEP25]], align 4
; CLEANUP-NEXT:    [[DOTFCA_0_0_0_0_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] poison, <3 x i32> [[DOTFCA_0_0_0_0_LOAD]], 0, 0, 0, 0
; CLEANUP-NEXT:    [[DOTFCA_0_0_1_0_GEP26:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0, i32 1, i32 0
; CLEANUP-NEXT:    [[DOTFCA_0_0_1_0_LOAD:%.*]] = load <2 x float>, ptr [[DOTFCA_0_0_1_0_GEP26]], align 4
; CLEANUP-NEXT:    [[DOTFCA_0_0_1_0_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_0_0_0_INSERT]], <2 x float> [[DOTFCA_0_0_1_0_LOAD]], 0, 0, 1, 0
; CLEANUP-NEXT:    [[DOTFCA_0_1_0_GEP27:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 1, i32 0
; CLEANUP-NEXT:    [[DOTFCA_0_1_0_LOAD:%.*]] = load float, ptr [[DOTFCA_0_1_0_GEP27]], align 4
; CLEANUP-NEXT:    [[DOTFCA_0_1_0_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_0_1_0_INSERT]], float [[DOTFCA_0_1_0_LOAD]], 0, 1, 0
; CLEANUP-NEXT:    [[DOTFCA_0_1_1_GEP28:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 1, i32 1
; CLEANUP-NEXT:    [[DOTFCA_0_1_1_LOAD:%.*]] = load i32, ptr [[DOTFCA_0_1_1_GEP28]], align 4
; CLEANUP-NEXT:    [[DOTFCA_0_1_1_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_1_0_INSERT]], i32 [[DOTFCA_0_1_1_LOAD]], 0, 1, 1
; CLEANUP-NEXT:    [[DOTFCA_0_2_GEP29:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 2
; CLEANUP-NEXT:    [[DOTFCA_0_2_LOAD:%.*]] = load <3 x float>, ptr [[DOTFCA_0_2_GEP29]], align 4
; CLEANUP-NEXT:    [[DOTFCA_0_2_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_1_1_INSERT]], <3 x float> [[DOTFCA_0_2_LOAD]], 0, 2
; CLEANUP-NEXT:    [[DOTFCA_0_3_GEP30:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 3
; CLEANUP-NEXT:    [[DOTFCA_0_3_LOAD:%.*]] = load <3 x float>, ptr [[DOTFCA_0_3_GEP30]], align 4
; CLEANUP-NEXT:    [[DOTFCA_0_3_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_2_INSERT]], <3 x float> [[DOTFCA_0_3_LOAD]], 0, 3
; CLEANUP-NEXT:    [[DOTFCA_0_4_GEP31:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 4
; CLEANUP-NEXT:    [[DOTFCA_0_4_LOAD:%.*]] = load float, ptr [[DOTFCA_0_4_GEP31]], align 4
; CLEANUP-NEXT:    [[DOTFCA_0_4_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_3_INSERT]], float [[DOTFCA_0_4_LOAD]], 0, 4
; CLEANUP-NEXT:    [[DOTFCA_0_5_GEP32:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 5
; CLEANUP-NEXT:    [[DOTFCA_0_5_LOAD:%.*]] = load i64, ptr [[DOTFCA_0_5_GEP32]], align 4
; CLEANUP-NEXT:    [[DOTFCA_0_5_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_4_INSERT]], i64 [[DOTFCA_0_5_LOAD]], 0, 5
; CLEANUP-NEXT:    [[DOTFCA_1_0_GEP33:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1, i32 0
; CLEANUP-NEXT:    [[DOTFCA_1_0_LOAD:%.*]] = load float, ptr [[DOTFCA_1_0_GEP33]], align 4
; CLEANUP-NEXT:    [[DOTFCA_1_0_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_5_INSERT]], float [[DOTFCA_1_0_LOAD]], 1, 0
; CLEANUP-NEXT:    [[DOTFCA_1_1_GEP34:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1, i32 1
; CLEANUP-NEXT:    [[DOTFCA_1_1_LOAD:%.*]] = load i32, ptr [[DOTFCA_1_1_GEP34]], align 4
; CLEANUP-NEXT:    [[DOTFCA_1_1_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_1_0_INSERT]], i32 [[DOTFCA_1_1_LOAD]], 1, 1
; CLEANUP-NEXT:    [[DOTFCA_0_INSERT:%.*]] = insertvalue [30 x i32] poison, i32 [[PAYLOAD_FCA_0_EXTRACT]], 0
; CLEANUP-NEXT:    [[DOTFCA_1_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_0_INSERT]], i32 [[PAYLOAD_FCA_1_EXTRACT]], 1
; CLEANUP-NEXT:    [[DOTFCA_2_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_1_INSERT]], i32 [[PAYLOAD_FCA_2_EXTRACT]], 2
; CLEANUP-NEXT:    [[DOTFCA_3_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_2_INSERT]], i32 [[PAYLOAD_FCA_3_EXTRACT]], 3
; CLEANUP-NEXT:    [[DOTFCA_4_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_3_INSERT]], i32 [[PAYLOAD_FCA_4_EXTRACT]], 4
; CLEANUP-NEXT:    [[DOTFCA_5_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_4_INSERT]], i32 [[PAYLOAD_FCA_5_EXTRACT]], 5
; CLEANUP-NEXT:    [[DOTFCA_6_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_5_INSERT]], i32 [[PAYLOAD_FCA_6_EXTRACT]], 6
; CLEANUP-NEXT:    [[DOTFCA_7_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_6_INSERT]], i32 [[PAYLOAD_FCA_7_EXTRACT]], 7
; CLEANUP-NEXT:    [[DOTFCA_8_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_7_INSERT]], i32 [[PAYLOAD_FCA_8_EXTRACT]], 8
; CLEANUP-NEXT:    [[DOTFCA_9_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_8_INSERT]], i32 [[PAYLOAD_FCA_9_EXTRACT]], 9
; CLEANUP-NEXT:    [[DOTFCA_10_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_9_INSERT]], i32 [[PAYLOAD_FCA_10_EXTRACT]], 10
; CLEANUP-NEXT:    [[DOTFCA_11_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_10_INSERT]], i32 [[PAYLOAD_FCA_11_EXTRACT]], 11
; CLEANUP-NEXT:    [[DOTFCA_12_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_11_INSERT]], i32 [[PAYLOAD_FCA_12_EXTRACT]], 12
; CLEANUP-NEXT:    [[DOTFCA_13_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_12_INSERT]], i32 [[PAYLOAD_FCA_13_EXTRACT]], 13
; CLEANUP-NEXT:    [[DOTFCA_14_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_13_INSERT]], i32 [[PAYLOAD_FCA_14_EXTRACT]], 14
; CLEANUP-NEXT:    [[DOTFCA_15_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_14_INSERT]], i32 [[PAYLOAD_FCA_15_EXTRACT]], 15
; CLEANUP-NEXT:    [[DOTFCA_16_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_15_INSERT]], i32 [[PAYLOAD_FCA_16_EXTRACT]], 16
; CLEANUP-NEXT:    [[DOTFCA_17_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_16_INSERT]], i32 [[PAYLOAD_FCA_17_EXTRACT]], 17
; CLEANUP-NEXT:    [[DOTFCA_18_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_17_INSERT]], i32 [[PAYLOAD_FCA_18_EXTRACT]], 18
; CLEANUP-NEXT:    [[DOTFCA_19_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_18_INSERT]], i32 [[PAYLOAD_FCA_19_EXTRACT]], 19
; CLEANUP-NEXT:    [[DOTFCA_20_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_19_INSERT]], i32 [[PAYLOAD_FCA_20_EXTRACT]], 20
; CLEANUP-NEXT:    [[DOTFCA_21_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_20_INSERT]], i32 [[PAYLOAD_FCA_21_EXTRACT]], 21
; CLEANUP-NEXT:    [[DOTFCA_22_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_21_INSERT]], i32 [[PAYLOAD_FCA_22_EXTRACT]], 22
; CLEANUP-NEXT:    [[DOTFCA_23_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_22_INSERT]], i32 [[PAYLOAD_FCA_23_EXTRACT]], 23
; CLEANUP-NEXT:    [[DOTFCA_24_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_23_INSERT]], i32 [[PAYLOAD_FCA_24_EXTRACT]], 24
; CLEANUP-NEXT:    [[DOTFCA_25_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_24_INSERT]], i32 [[PAYLOAD_FCA_25_EXTRACT]], 25
; CLEANUP-NEXT:    [[DOTFCA_26_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_25_INSERT]], i32 [[PAYLOAD_FCA_26_EXTRACT]], 26
; CLEANUP-NEXT:    [[DOTFCA_27_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_26_INSERT]], i32 [[PAYLOAD_FCA_27_EXTRACT]], 27
; CLEANUP-NEXT:    [[DOTFCA_28_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_27_INSERT]], i32 [[PAYLOAD_FCA_28_EXTRACT]], 28
; CLEANUP-NEXT:    [[DOTFCA_29_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_28_INSERT]], i32 [[PAYLOAD_FCA_29_EXTRACT]], 29
; CLEANUP-NEXT:    call void (...) @lgc.ilcps.continue(i64 [[RETURNADDR]], i32 poison, i64 poison, [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_1_1_INSERT]], [8 x i32] poison, [30 x i32] [[DOTFCA_29_INSERT]]), !continuation.registercount [[META17]]
; CLEANUP-NEXT:    unreachable
;
;
; CLEANUP-LABEL: define void @ClosestHit(
; CLEANUP-SAME: i64 [[RETURNADDR:%.*]], [[STRUCT_SYSTEMDATA:%.*]] [[TMP0:%.*]], [21 x i32] [[PADDING:%.*]], [30 x i32] [[PAYLOAD:%.*]]) #[[ATTR3]] !lgc.rt.shaderstage [[META25:![0-9]+]] !continuation.registercount [[META17]] !continuation [[META26:![0-9]+]] !continuation.stacksize [[META27:![0-9]+]] !continuation.state [[META28:![0-9]+]] {
; CLEANUP-NEXT:  AllocaSpillBB:
; CLEANUP-NEXT:    [[CONT_STATE_STACK_SEGMENT:%.*]] = call ptr addrspace(32) @lgc.cps.alloc(i32 120)
; CLEANUP-NEXT:    [[PAYLOAD_SPILL_ALLOCA:%.*]] = getelementptr inbounds [[CLOSESTHIT_FRAME:%.*]], ptr addrspace(32) [[CONT_STATE_STACK_SEGMENT]], i32 0, i32 0
; CLEANUP-NEXT:    [[RETURNADDR_SPILL_ADDR:%.*]] = getelementptr inbounds [[CLOSESTHIT_FRAME]], ptr addrspace(32) [[CONT_STATE_STACK_SEGMENT]], i32 0, i32 1
; CLEANUP-NEXT:    store i64 [[RETURNADDR]], ptr addrspace(32) [[RETURNADDR_SPILL_ADDR]], align 4
; CLEANUP-NEXT:    [[PAYLOAD_FCA_0_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 0
; CLEANUP-NEXT:    [[PAYLOAD_FCA_0_EXTRACT_SPILL_ADDR:%.*]] = getelementptr inbounds [[CLOSESTHIT_FRAME]], ptr addrspace(32) [[CONT_STATE_STACK_SEGMENT]], i32 0, i32 2
; CLEANUP-NEXT:    store i32 [[PAYLOAD_FCA_0_EXTRACT]], ptr addrspace(32) [[PAYLOAD_FCA_0_EXTRACT_SPILL_ADDR]], align 4
; CLEANUP-NEXT:    [[PAYLOAD_FCA_1_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 1
; CLEANUP-NEXT:    [[PAYLOAD_FCA_2_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 2
; CLEANUP-NEXT:    [[PAYLOAD_FCA_3_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 3
; CLEANUP-NEXT:    [[PAYLOAD_FCA_4_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 4
; CLEANUP-NEXT:    [[PAYLOAD_FCA_5_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 5
; CLEANUP-NEXT:    [[PAYLOAD_FCA_6_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 6
; CLEANUP-NEXT:    [[PAYLOAD_FCA_7_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 7
; CLEANUP-NEXT:    [[PAYLOAD_FCA_8_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 8
; CLEANUP-NEXT:    [[PAYLOAD_FCA_9_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 9
; CLEANUP-NEXT:    [[PAYLOAD_FCA_10_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 10
; CLEANUP-NEXT:    [[PAYLOAD_FCA_11_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 11
; CLEANUP-NEXT:    [[PAYLOAD_FCA_12_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 12
; CLEANUP-NEXT:    [[PAYLOAD_FCA_13_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 13
; CLEANUP-NEXT:    [[PAYLOAD_FCA_14_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 14
; CLEANUP-NEXT:    [[PAYLOAD_FCA_15_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 15
; CLEANUP-NEXT:    [[PAYLOAD_FCA_16_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 16
; CLEANUP-NEXT:    [[PAYLOAD_FCA_17_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 17
; CLEANUP-NEXT:    [[PAYLOAD_FCA_18_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 18
; CLEANUP-NEXT:    [[PAYLOAD_FCA_19_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 19
; CLEANUP-NEXT:    [[PAYLOAD_FCA_20_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 20
; CLEANUP-NEXT:    [[PAYLOAD_FCA_21_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 21
; CLEANUP-NEXT:    [[PAYLOAD_FCA_22_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 22
; CLEANUP-NEXT:    [[PAYLOAD_FCA_23_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 23
; CLEANUP-NEXT:    [[PAYLOAD_FCA_24_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 24
; CLEANUP-NEXT:    [[PAYLOAD_FCA_25_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 25
; CLEANUP-NEXT:    [[PAYLOAD_FCA_26_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 26
; CLEANUP-NEXT:    [[PAYLOAD_FCA_27_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 27
; CLEANUP-NEXT:    [[PAYLOAD_FCA_28_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 28
; CLEANUP-NEXT:    [[PAYLOAD_FCA_29_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 29
; CLEANUP-NEXT:    [[DOTFCA_0_0_EXTRACT:%.*]] = extractvalue [[STRUCT_SYSTEMDATA]] [[TMP0]], 0, 0
; CLEANUP-NEXT:    [[DOTFCA_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_SYSTEMDATA]] [[TMP0]], 1, 0
; CLEANUP-NEXT:    [[TMP1:%.*]] = inttoptr i32 [[PAYLOAD_FCA_0_EXTRACT]] to ptr addrspace(32)
; CLEANUP-NEXT:    [[TMP2:%.*]] = load i32, ptr addrspace(32) [[TMP1]], align 4
; CLEANUP-NEXT:    [[TMP26:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 1
; CLEANUP-NEXT:    [[TMP4:%.*]] = load i32, ptr addrspace(32) [[TMP26]], align 4
; CLEANUP-NEXT:    [[TMP28:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 2
; CLEANUP-NEXT:    [[TMP6:%.*]] = load i32, ptr addrspace(32) [[TMP28]], align 4
; CLEANUP-NEXT:    [[TMP30:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 3
; CLEANUP-NEXT:    [[TMP8:%.*]] = load i32, ptr addrspace(32) [[TMP30]], align 4
; CLEANUP-NEXT:    [[TMP32:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 4
; CLEANUP-NEXT:    [[TMP10:%.*]] = load i32, ptr addrspace(32) [[TMP32]], align 4
; CLEANUP-NEXT:    [[TMP34:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 5
; CLEANUP-NEXT:    [[TMP12:%.*]] = load i32, ptr addrspace(32) [[TMP34]], align 4
; CLEANUP-NEXT:    [[TMP36:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 6
; CLEANUP-NEXT:    [[TMP14:%.*]] = load i32, ptr addrspace(32) [[TMP36]], align 4
; CLEANUP-NEXT:    [[TMP38:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 7
; CLEANUP-NEXT:    [[TMP16:%.*]] = load i32, ptr addrspace(32) [[TMP38]], align 4
; CLEANUP-NEXT:    [[TMP40:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 8
; CLEANUP-NEXT:    [[TMP18:%.*]] = load i32, ptr addrspace(32) [[TMP40]], align 4
; CLEANUP-NEXT:    [[TMP42:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 9
; CLEANUP-NEXT:    [[TMP20:%.*]] = load i32, ptr addrspace(32) [[TMP42]], align 4
; CLEANUP-NEXT:    [[TMP44:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 10
; CLEANUP-NEXT:    [[TMP22:%.*]] = load i32, ptr addrspace(32) [[TMP44]], align 4
; CLEANUP-NEXT:    [[TMP46:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 11
; CLEANUP-NEXT:    [[TMP24:%.*]] = load i32, ptr addrspace(32) [[TMP46]], align 4
; CLEANUP-NEXT:    [[TMP48:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 12
; CLEANUP-NEXT:    [[TMP27:%.*]] = load i32, ptr addrspace(32) [[TMP48]], align 4
; CLEANUP-NEXT:    [[TMP50:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 13
; CLEANUP-NEXT:    [[TMP29:%.*]] = load i32, ptr addrspace(32) [[TMP50]], align 4
; CLEANUP-NEXT:    [[TMP52:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 14
; CLEANUP-NEXT:    [[TMP31:%.*]] = load i32, ptr addrspace(32) [[TMP52]], align 4
; CLEANUP-NEXT:    [[TMP54:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 15
; CLEANUP-NEXT:    [[TMP33:%.*]] = load i32, ptr addrspace(32) [[TMP54]], align 4
; CLEANUP-NEXT:    [[TMP56:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 16
; CLEANUP-NEXT:    [[TMP35:%.*]] = load i32, ptr addrspace(32) [[TMP56]], align 4
; CLEANUP-NEXT:    [[TMP58:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 17
; CLEANUP-NEXT:    [[TMP37:%.*]] = load i32, ptr addrspace(32) [[TMP58]], align 4
; CLEANUP-NEXT:    [[TMP60:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 18
; CLEANUP-NEXT:    [[TMP39:%.*]] = load i32, ptr addrspace(32) [[TMP60]], align 4
; CLEANUP-NEXT:    [[TMP62:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 19
; CLEANUP-NEXT:    [[TMP41:%.*]] = load i32, ptr addrspace(32) [[TMP62]], align 4
; CLEANUP-NEXT:    [[TMP64:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 20
; CLEANUP-NEXT:    [[TMP43:%.*]] = load i32, ptr addrspace(32) [[TMP64]], align 4
; CLEANUP-NEXT:    [[TMP66:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 21
; CLEANUP-NEXT:    [[TMP45:%.*]] = load i32, ptr addrspace(32) [[TMP66]], align 4
; CLEANUP-NEXT:    [[TMP68:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 22
; CLEANUP-NEXT:    [[TMP47:%.*]] = load i32, ptr addrspace(32) [[TMP68]], align 4
; CLEANUP-NEXT:    [[TMP70:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 23
; CLEANUP-NEXT:    [[TMP49:%.*]] = load i32, ptr addrspace(32) [[TMP70]], align 4
; CLEANUP-NEXT:    [[TMP72:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 24
; CLEANUP-NEXT:    [[TMP51:%.*]] = load i32, ptr addrspace(32) [[TMP72]], align 4
; CLEANUP-NEXT:    [[TMP74:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 25
; CLEANUP-NEXT:    [[TMP53:%.*]] = load i32, ptr addrspace(32) [[TMP74]], align 4
; CLEANUP-NEXT:    [[TMP76:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP1]], i32 26
; CLEANUP-NEXT:    [[TMP55:%.*]] = load i32, ptr addrspace(32) [[TMP76]], align 4
; CLEANUP-NEXT:    [[VAL_I_FCA_0_INSERT:%.*]] = insertvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]] poison, <2 x float> [[DOTFCA_1_0_EXTRACT]], 0
; CLEANUP-NEXT:    [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[VAL_I_FCA_0_INSERT]], 0
; CLEANUP-NEXT:    [[DOTSROA_0256_0_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT]], i32 0
; CLEANUP-NEXT:    [[TMP57:%.*]] = bitcast float [[DOTSROA_0256_0_VEC_EXTRACT]] to i32
; CLEANUP-NEXT:    [[DOTSROA_0256_4_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT]], i32 1
; CLEANUP-NEXT:    [[TMP63:%.*]] = bitcast float [[DOTSROA_0256_4_VEC_EXTRACT]] to i32
; CLEANUP-NEXT:    call void @amd.dx.setLocalRootIndex(i32 5)
; CLEANUP-NEXT:    [[TMP59:%.*]] = load [[DX_TYPES_HANDLE:%.*]], ptr @"\01?Scene@@3URaytracingAccelerationStructure@@A", align 4
; CLEANUP-NEXT:    [[TMP65:%.*]] = load [[DX_TYPES_HANDLE]], ptr @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A", align 4
; CLEANUP-NEXT:    [[TMP67:%.*]] = call [[DX_TYPES_HANDLE]] [[DX_OP_CREATEHANDLEFORLIB_DX_TYPES_HANDLE:@[a-zA-Z0-9_$\"\\.-]*[a-zA-Z_$\"\\.-][a-zA-Z0-9_$\"\\.-]*]](i32 160, [[DX_TYPES_HANDLE]] [[TMP59]])
; CLEANUP-NEXT:    [[TMP69:%.*]] = call [[DX_TYPES_HANDLE]] [[DX_OP_ANNOTATEHANDLE:@[a-zA-Z0-9_$\"\\.-]*[a-zA-Z_$\"\\.-][a-zA-Z0-9_$\"\\.-]*]](i32 216, [[DX_TYPES_HANDLE]] [[TMP67]], [[DX_TYPES_RESOURCEPROPERTIES:%.*]] { i32 16, i32 0 })
; CLEANUP-NEXT:    [[TMP61:%.*]] = call i64 @amd.dx.getAccelStructAddr([[DX_TYPES_HANDLE]] [[TMP69]])
; CLEANUP-NEXT:    [[DIS_DATA_I_FCA_0_INSERT:%.*]] = insertvalue [[STRUCT_DISPATCHSYSTEMDATA:%.*]] poison, <3 x i32> [[DOTFCA_0_0_EXTRACT]], 0
; CLEANUP-NEXT:    [[SYS_DATA_I:%.*]] = insertvalue [[STRUCT_SYSTEMDATA]] undef, [[STRUCT_DISPATCHSYSTEMDATA]] [[DIS_DATA_I_FCA_0_INSERT]], 0
; CLEANUP-NEXT:    [[TRAV_DATA_I:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA:%.*]] undef, [[STRUCT_SYSTEMDATA]] [[SYS_DATA_I]], 0
; CLEANUP-NEXT:    [[ADDR_I1:%.*]] = call i64 @_AmdGetResumePointAddr() #[[ATTR3]]
; CLEANUP-NEXT:    [[TRAV_DATA2_I:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I]], i64 [[ADDR_I1]], 5
; CLEANUP-NEXT:    [[TMP88:%.*]] = ptrtoint ptr addrspace(32) [[PAYLOAD_SPILL_ALLOCA]] to i32
; CLEANUP-NEXT:    [[TMP89:%.*]] = inttoptr i32 [[TMP88]] to ptr addrspace(32)
; CLEANUP-NEXT:    store i32 [[TMP2]], ptr addrspace(32) [[TMP89]], align 4
; CLEANUP-NEXT:    [[TMP114:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 1
; CLEANUP-NEXT:    store i32 [[TMP4]], ptr addrspace(32) [[TMP114]], align 4
; CLEANUP-NEXT:    [[TMP115:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 2
; CLEANUP-NEXT:    store i32 [[TMP6]], ptr addrspace(32) [[TMP115]], align 4
; CLEANUP-NEXT:    [[TMP90:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 3
; CLEANUP-NEXT:    store i32 [[TMP8]], ptr addrspace(32) [[TMP90]], align 4
; CLEANUP-NEXT:    [[TMP91:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 4
; CLEANUP-NEXT:    store i32 [[TMP10]], ptr addrspace(32) [[TMP91]], align 4
; CLEANUP-NEXT:    [[TMP92:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 5
; CLEANUP-NEXT:    store i32 [[TMP12]], ptr addrspace(32) [[TMP92]], align 4
; CLEANUP-NEXT:    [[TMP93:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 6
; CLEANUP-NEXT:    store i32 [[TMP14]], ptr addrspace(32) [[TMP93]], align 4
; CLEANUP-NEXT:    [[TMP94:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 7
; CLEANUP-NEXT:    store i32 [[TMP16]], ptr addrspace(32) [[TMP94]], align 4
; CLEANUP-NEXT:    [[TMP95:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 8
; CLEANUP-NEXT:    store i32 [[TMP18]], ptr addrspace(32) [[TMP95]], align 4
; CLEANUP-NEXT:    [[TMP96:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 9
; CLEANUP-NEXT:    store i32 [[TMP20]], ptr addrspace(32) [[TMP96]], align 4
; CLEANUP-NEXT:    [[TMP97:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 10
; CLEANUP-NEXT:    store i32 [[TMP22]], ptr addrspace(32) [[TMP97]], align 4
; CLEANUP-NEXT:    [[TMP98:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 11
; CLEANUP-NEXT:    store i32 [[TMP24]], ptr addrspace(32) [[TMP98]], align 4
; CLEANUP-NEXT:    [[TMP99:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 12
; CLEANUP-NEXT:    store i32 [[TMP27]], ptr addrspace(32) [[TMP99]], align 4
; CLEANUP-NEXT:    [[TMP100:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 13
; CLEANUP-NEXT:    store i32 [[TMP29]], ptr addrspace(32) [[TMP100]], align 4
; CLEANUP-NEXT:    [[TMP101:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 14
; CLEANUP-NEXT:    store i32 [[TMP31]], ptr addrspace(32) [[TMP101]], align 4
; CLEANUP-NEXT:    [[TMP102:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 15
; CLEANUP-NEXT:    store i32 [[TMP33]], ptr addrspace(32) [[TMP102]], align 4
; CLEANUP-NEXT:    [[TMP103:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 16
; CLEANUP-NEXT:    store i32 [[TMP35]], ptr addrspace(32) [[TMP103]], align 4
; CLEANUP-NEXT:    [[TMP104:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 17
; CLEANUP-NEXT:    store i32 [[TMP37]], ptr addrspace(32) [[TMP104]], align 4
; CLEANUP-NEXT:    [[TMP105:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 18
; CLEANUP-NEXT:    store i32 [[TMP39]], ptr addrspace(32) [[TMP105]], align 4
; CLEANUP-NEXT:    [[TMP106:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 19
; CLEANUP-NEXT:    store i32 [[TMP41]], ptr addrspace(32) [[TMP106]], align 4
; CLEANUP-NEXT:    [[TMP107:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 20
; CLEANUP-NEXT:    store i32 [[TMP43]], ptr addrspace(32) [[TMP107]], align 4
; CLEANUP-NEXT:    [[TMP108:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 21
; CLEANUP-NEXT:    store i32 [[TMP45]], ptr addrspace(32) [[TMP108]], align 4
; CLEANUP-NEXT:    [[TMP109:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 22
; CLEANUP-NEXT:    store i32 [[TMP47]], ptr addrspace(32) [[TMP109]], align 4
; CLEANUP-NEXT:    [[TMP110:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 23
; CLEANUP-NEXT:    store i32 [[TMP49]], ptr addrspace(32) [[TMP110]], align 4
; CLEANUP-NEXT:    [[TMP111:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 24
; CLEANUP-NEXT:    store i32 [[TMP51]], ptr addrspace(32) [[TMP111]], align 4
; CLEANUP-NEXT:    [[TMP112:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 25
; CLEANUP-NEXT:    store i32 [[TMP53]], ptr addrspace(32) [[TMP112]], align 4
; CLEANUP-NEXT:    [[TMP113:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP89]], i32 26
; CLEANUP-NEXT:    store i32 [[TMP55]], ptr addrspace(32) [[TMP113]], align 4
; CLEANUP-NEXT:    [[DOTFCA_0_INSERT54:%.*]] = insertvalue [30 x i32] poison, i32 [[TMP88]], 0
; CLEANUP-NEXT:    [[DOTFCA_1_INSERT57:%.*]] = insertvalue [30 x i32] [[DOTFCA_0_INSERT54]], i32 [[PAYLOAD_FCA_1_EXTRACT]], 1
; CLEANUP-NEXT:    [[DOTFCA_2_INSERT60:%.*]] = insertvalue [30 x i32] [[DOTFCA_1_INSERT57]], i32 [[PAYLOAD_FCA_2_EXTRACT]], 2
; CLEANUP-NEXT:    [[DOTFCA_3_INSERT63:%.*]] = insertvalue [30 x i32] [[DOTFCA_2_INSERT60]], i32 [[PAYLOAD_FCA_3_EXTRACT]], 3
; CLEANUP-NEXT:    [[DOTFCA_4_INSERT66:%.*]] = insertvalue [30 x i32] [[DOTFCA_3_INSERT63]], i32 [[PAYLOAD_FCA_4_EXTRACT]], 4
; CLEANUP-NEXT:    [[DOTFCA_5_INSERT69:%.*]] = insertvalue [30 x i32] [[DOTFCA_4_INSERT66]], i32 [[PAYLOAD_FCA_5_EXTRACT]], 5
; CLEANUP-NEXT:    [[DOTFCA_6_INSERT72:%.*]] = insertvalue [30 x i32] [[DOTFCA_5_INSERT69]], i32 [[PAYLOAD_FCA_6_EXTRACT]], 6
; CLEANUP-NEXT:    [[DOTFCA_7_INSERT75:%.*]] = insertvalue [30 x i32] [[DOTFCA_6_INSERT72]], i32 [[PAYLOAD_FCA_7_EXTRACT]], 7
; CLEANUP-NEXT:    [[DOTFCA_8_INSERT78:%.*]] = insertvalue [30 x i32] [[DOTFCA_7_INSERT75]], i32 [[PAYLOAD_FCA_8_EXTRACT]], 8
; CLEANUP-NEXT:    [[DOTFCA_9_INSERT81:%.*]] = insertvalue [30 x i32] [[DOTFCA_8_INSERT78]], i32 [[PAYLOAD_FCA_9_EXTRACT]], 9
; CLEANUP-NEXT:    [[DOTFCA_10_INSERT84:%.*]] = insertvalue [30 x i32] [[DOTFCA_9_INSERT81]], i32 [[PAYLOAD_FCA_10_EXTRACT]], 10
; CLEANUP-NEXT:    [[DOTFCA_11_INSERT87:%.*]] = insertvalue [30 x i32] [[DOTFCA_10_INSERT84]], i32 [[PAYLOAD_FCA_11_EXTRACT]], 11
; CLEANUP-NEXT:    [[DOTFCA_12_INSERT90:%.*]] = insertvalue [30 x i32] [[DOTFCA_11_INSERT87]], i32 [[PAYLOAD_FCA_12_EXTRACT]], 12
; CLEANUP-NEXT:    [[DOTFCA_13_INSERT93:%.*]] = insertvalue [30 x i32] [[DOTFCA_12_INSERT90]], i32 [[PAYLOAD_FCA_13_EXTRACT]], 13
; CLEANUP-NEXT:    [[DOTFCA_14_INSERT96:%.*]] = insertvalue [30 x i32] [[DOTFCA_13_INSERT93]], i32 [[PAYLOAD_FCA_14_EXTRACT]], 14
; CLEANUP-NEXT:    [[DOTFCA_15_INSERT99:%.*]] = insertvalue [30 x i32] [[DOTFCA_14_INSERT96]], i32 [[PAYLOAD_FCA_15_EXTRACT]], 15
; CLEANUP-NEXT:    [[DOTFCA_16_INSERT102:%.*]] = insertvalue [30 x i32] [[DOTFCA_15_INSERT99]], i32 [[PAYLOAD_FCA_16_EXTRACT]], 16
; CLEANUP-NEXT:    [[DOTFCA_17_INSERT105:%.*]] = insertvalue [30 x i32] [[DOTFCA_16_INSERT102]], i32 [[PAYLOAD_FCA_17_EXTRACT]], 17
; CLEANUP-NEXT:    [[DOTFCA_18_INSERT108:%.*]] = insertvalue [30 x i32] [[DOTFCA_17_INSERT105]], i32 [[PAYLOAD_FCA_18_EXTRACT]], 18
; CLEANUP-NEXT:    [[DOTFCA_19_INSERT111:%.*]] = insertvalue [30 x i32] [[DOTFCA_18_INSERT108]], i32 [[PAYLOAD_FCA_19_EXTRACT]], 19
; CLEANUP-NEXT:    [[DOTFCA_20_INSERT114:%.*]] = insertvalue [30 x i32] [[DOTFCA_19_INSERT111]], i32 [[PAYLOAD_FCA_20_EXTRACT]], 20
; CLEANUP-NEXT:    [[DOTFCA_21_INSERT117:%.*]] = insertvalue [30 x i32] [[DOTFCA_20_INSERT114]], i32 [[PAYLOAD_FCA_21_EXTRACT]], 21
; CLEANUP-NEXT:    [[DOTFCA_22_INSERT120:%.*]] = insertvalue [30 x i32] [[DOTFCA_21_INSERT117]], i32 [[PAYLOAD_FCA_22_EXTRACT]], 22
; CLEANUP-NEXT:    [[DOTFCA_23_INSERT123:%.*]] = insertvalue [30 x i32] [[DOTFCA_22_INSERT120]], i32 [[PAYLOAD_FCA_23_EXTRACT]], 23
; CLEANUP-NEXT:    [[DOTFCA_24_INSERT126:%.*]] = insertvalue [30 x i32] [[DOTFCA_23_INSERT123]], i32 [[PAYLOAD_FCA_24_EXTRACT]], 24
; CLEANUP-NEXT:    [[DOTFCA_25_INSERT129:%.*]] = insertvalue [30 x i32] [[DOTFCA_24_INSERT126]], i32 [[PAYLOAD_FCA_25_EXTRACT]], 25
; CLEANUP-NEXT:    [[DOTFCA_26_INSERT132:%.*]] = insertvalue [30 x i32] [[DOTFCA_25_INSERT129]], i32 [[PAYLOAD_FCA_26_EXTRACT]], 26
; CLEANUP-NEXT:    [[DOTFCA_27_INSERT135:%.*]] = insertvalue [30 x i32] [[DOTFCA_26_INSERT132]], i32 [[PAYLOAD_FCA_27_EXTRACT]], 27
; CLEANUP-NEXT:    [[DOTFCA_28_INSERT138:%.*]] = insertvalue [30 x i32] [[DOTFCA_27_INSERT135]], i32 [[PAYLOAD_FCA_28_EXTRACT]], 28
; CLEANUP-NEXT:    [[DOTFCA_29_INSERT141:%.*]] = insertvalue [30 x i32] [[DOTFCA_28_INSERT138]], i32 [[PAYLOAD_FCA_29_EXTRACT]], 29
; CLEANUP-NEXT:    [[TMP116:%.*]] = call i64 (...) @lgc.cps.as.continuation.reference__i64(ptr @ClosestHit.resume.0)
; CLEANUP-NEXT:    call void (...) @lgc.cps.jump(i64 4, i32 -1, {} poison, i64 [[TMP116]], i64 poison, [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA2_I]], [10 x i32] poison, [30 x i32] [[DOTFCA_29_INSERT141]]), !continuation.registercount [[META17]], !continuation.returnedRegistercount [[META17]], !waitmask [[META22]]
; CLEANUP-NEXT:    unreachable
;
;
; CLEANUP-LABEL: define dso_local void @ClosestHit.resume.0(
; CLEANUP-SAME: i64 [[TMP0:%.*]], { [[STRUCT_DISPATCHSYSTEMDATA:%.*]], [23 x i32], [30 x i32] } [[TMP1:%.*]]) !lgc.rt.shaderstage [[META25]] !continuation.registercount [[META17]] !continuation [[META26]] {
; CLEANUP-NEXT:  entryresume.0:
; CLEANUP-NEXT:    [[CONT_STATE_STACK_SEGMENT:%.*]] = call ptr addrspace(32) @lgc.cps.peek(i32 120)
; CLEANUP-NEXT:    [[PAYLOAD_SPILL_ALLOCA:%.*]] = getelementptr inbounds [[CLOSESTHIT_FRAME:%.*]], ptr addrspace(32) [[CONT_STATE_STACK_SEGMENT]], i32 0, i32 0
; CLEANUP-NEXT:    [[TMP3:%.*]] = extractvalue { [[STRUCT_DISPATCHSYSTEMDATA]], [23 x i32], [30 x i32] } [[TMP1]], 2
; CLEANUP-NEXT:    [[DOTFCA_0_EXTRACT1:%.*]] = extractvalue [30 x i32] [[TMP3]], 0
; CLEANUP-NEXT:    [[DOTFCA_1_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 1
; CLEANUP-NEXT:    [[DOTFCA_2_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 2
; CLEANUP-NEXT:    [[DOTFCA_3_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 3
; CLEANUP-NEXT:    [[DOTFCA_4_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 4
; CLEANUP-NEXT:    [[DOTFCA_5_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 5
; CLEANUP-NEXT:    [[DOTFCA_6_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 6
; CLEANUP-NEXT:    [[DOTFCA_7_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 7
; CLEANUP-NEXT:    [[DOTFCA_8_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 8
; CLEANUP-NEXT:    [[DOTFCA_9_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 9
; CLEANUP-NEXT:    [[DOTFCA_10_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 10
; CLEANUP-NEXT:    [[DOTFCA_11_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 11
; CLEANUP-NEXT:    [[DOTFCA_12_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 12
; CLEANUP-NEXT:    [[DOTFCA_13_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 13
; CLEANUP-NEXT:    [[DOTFCA_14_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 14
; CLEANUP-NEXT:    [[DOTFCA_15_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 15
; CLEANUP-NEXT:    [[DOTFCA_16_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 16
; CLEANUP-NEXT:    [[DOTFCA_17_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 17
; CLEANUP-NEXT:    [[DOTFCA_18_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 18
; CLEANUP-NEXT:    [[DOTFCA_19_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 19
; CLEANUP-NEXT:    [[DOTFCA_20_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 20
; CLEANUP-NEXT:    [[DOTFCA_21_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 21
; CLEANUP-NEXT:    [[DOTFCA_22_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 22
; CLEANUP-NEXT:    [[DOTFCA_23_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 23
; CLEANUP-NEXT:    [[DOTFCA_24_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 24
; CLEANUP-NEXT:    [[DOTFCA_25_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 25
; CLEANUP-NEXT:    [[DOTFCA_26_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 26
; CLEANUP-NEXT:    [[DOTFCA_27_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 27
; CLEANUP-NEXT:    [[TMP23:%.*]] = extractvalue [30 x i32] [[TMP3]], 28
; CLEANUP-NEXT:    [[DOTFCA_29_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP3]], 29
; CLEANUP-NEXT:    [[TMP2:%.*]] = inttoptr i32 [[DOTFCA_0_EXTRACT1]] to ptr addrspace(32)
; CLEANUP-NEXT:    [[TMP4:%.*]] = load i32, ptr addrspace(32) [[TMP2]], align 4
; CLEANUP-NEXT:    [[TMP27:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 1
; CLEANUP-NEXT:    [[TMP6:%.*]] = load i32, ptr addrspace(32) [[TMP27]], align 4
; CLEANUP-NEXT:    [[TMP29:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 2
; CLEANUP-NEXT:    [[TMP8:%.*]] = load i32, ptr addrspace(32) [[TMP29]], align 4
; CLEANUP-NEXT:    [[TMP31:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 3
; CLEANUP-NEXT:    [[TMP10:%.*]] = load i32, ptr addrspace(32) [[TMP31]], align 4
; CLEANUP-NEXT:    [[TMP33:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 4
; CLEANUP-NEXT:    [[TMP12:%.*]] = load i32, ptr addrspace(32) [[TMP33]], align 4
; CLEANUP-NEXT:    [[TMP35:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 5
; CLEANUP-NEXT:    [[TMP14:%.*]] = load i32, ptr addrspace(32) [[TMP35]], align 4
; CLEANUP-NEXT:    [[TMP37:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 6
; CLEANUP-NEXT:    [[TMP16:%.*]] = load i32, ptr addrspace(32) [[TMP37]], align 4
; CLEANUP-NEXT:    [[TMP39:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 7
; CLEANUP-NEXT:    [[TMP18:%.*]] = load i32, ptr addrspace(32) [[TMP39]], align 4
; CLEANUP-NEXT:    [[TMP41:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 8
; CLEANUP-NEXT:    [[TMP20:%.*]] = load i32, ptr addrspace(32) [[TMP41]], align 4
; CLEANUP-NEXT:    [[TMP43:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 9
; CLEANUP-NEXT:    [[TMP22:%.*]] = load i32, ptr addrspace(32) [[TMP43]], align 4
; CLEANUP-NEXT:    [[TMP45:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 10
; CLEANUP-NEXT:    [[TMP24:%.*]] = load i32, ptr addrspace(32) [[TMP45]], align 4
; CLEANUP-NEXT:    [[TMP47:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 11
; CLEANUP-NEXT:    [[TMP26:%.*]] = load i32, ptr addrspace(32) [[TMP47]], align 4
; CLEANUP-NEXT:    [[TMP49:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 12
; CLEANUP-NEXT:    [[TMP28:%.*]] = load i32, ptr addrspace(32) [[TMP49]], align 4
; CLEANUP-NEXT:    [[TMP51:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 13
; CLEANUP-NEXT:    [[TMP30:%.*]] = load i32, ptr addrspace(32) [[TMP51]], align 4
; CLEANUP-NEXT:    [[TMP53:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 14
; CLEANUP-NEXT:    [[TMP32:%.*]] = load i32, ptr addrspace(32) [[TMP53]], align 4
; CLEANUP-NEXT:    [[TMP55:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 15
; CLEANUP-NEXT:    [[TMP34:%.*]] = load i32, ptr addrspace(32) [[TMP55]], align 4
; CLEANUP-NEXT:    [[TMP57:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 16
; CLEANUP-NEXT:    [[TMP36:%.*]] = load i32, ptr addrspace(32) [[TMP57]], align 4
; CLEANUP-NEXT:    [[TMP59:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 17
; CLEANUP-NEXT:    [[TMP38:%.*]] = load i32, ptr addrspace(32) [[TMP59]], align 4
; CLEANUP-NEXT:    [[TMP61:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 18
; CLEANUP-NEXT:    [[TMP40:%.*]] = load i32, ptr addrspace(32) [[TMP61]], align 4
; CLEANUP-NEXT:    [[TMP63:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 19
; CLEANUP-NEXT:    [[TMP42:%.*]] = load i32, ptr addrspace(32) [[TMP63]], align 4
; CLEANUP-NEXT:    [[TMP65:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 20
; CLEANUP-NEXT:    [[TMP44:%.*]] = load i32, ptr addrspace(32) [[TMP65]], align 4
; CLEANUP-NEXT:    [[TMP67:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 21
; CLEANUP-NEXT:    [[TMP46:%.*]] = load i32, ptr addrspace(32) [[TMP67]], align 4
; CLEANUP-NEXT:    [[TMP69:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 22
; CLEANUP-NEXT:    [[TMP48:%.*]] = load i32, ptr addrspace(32) [[TMP69]], align 4
; CLEANUP-NEXT:    [[TMP71:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 23
; CLEANUP-NEXT:    [[TMP50:%.*]] = load i32, ptr addrspace(32) [[TMP71]], align 4
; CLEANUP-NEXT:    [[TMP73:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 24
; CLEANUP-NEXT:    [[TMP52:%.*]] = load i32, ptr addrspace(32) [[TMP73]], align 4
; CLEANUP-NEXT:    [[TMP75:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 25
; CLEANUP-NEXT:    [[TMP54:%.*]] = load i32, ptr addrspace(32) [[TMP75]], align 4
; CLEANUP-NEXT:    [[TMP77:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP2]], i32 26
; CLEANUP-NEXT:    [[TMP56:%.*]] = load i32, ptr addrspace(32) [[TMP77]], align 4
; CLEANUP-NEXT:    [[TMP60:%.*]] = inttoptr i32 [[DOTFCA_0_EXTRACT1]] to ptr addrspace(32)
; CLEANUP-NEXT:    [[TMP58:%.*]] = extractvalue { [[STRUCT_DISPATCHSYSTEMDATA]], [23 x i32], [30 x i32] } [[TMP1]], 0
; CLEANUP-NEXT:    [[DOTFCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_DISPATCHSYSTEMDATA]] [[TMP58]], 0
; CLEANUP-NEXT:    call void @amd.dx.setLocalRootIndex(i32 5)
; CLEANUP-NEXT:    [[PAYLOAD_FCA_0_EXTRACT_RELOAD_ADDR:%.*]] = getelementptr inbounds [[CLOSESTHIT_FRAME]], ptr addrspace(32) [[CONT_STATE_STACK_SEGMENT]], i32 0, i32 2
; CLEANUP-NEXT:    [[PAYLOAD_FCA_0_EXTRACT_RELOAD:%.*]] = load i32, ptr addrspace(32) [[PAYLOAD_FCA_0_EXTRACT_RELOAD_ADDR]], align 4
; CLEANUP-NEXT:    [[RETURNADDR_RELOAD_ADDR:%.*]] = getelementptr inbounds [[CLOSESTHIT_FRAME]], ptr addrspace(32) [[CONT_STATE_STACK_SEGMENT]], i32 0, i32 1
; CLEANUP-NEXT:    [[RETURNADDR_RELOAD:%.*]] = load i64, ptr addrspace(32) [[RETURNADDR_RELOAD_ADDR]], align 4
; CLEANUP-NEXT:    [[TMP81:%.*]] = inttoptr i32 [[PAYLOAD_FCA_0_EXTRACT_RELOAD]] to ptr addrspace(32)
; CLEANUP-NEXT:    store i32 [[TMP4]], ptr addrspace(32) [[TMP81]], align 4
; CLEANUP-NEXT:    [[TMP106:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 1
; CLEANUP-NEXT:    store i32 [[TMP6]], ptr addrspace(32) [[TMP106]], align 4
; CLEANUP-NEXT:    [[TMP107:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 2
; CLEANUP-NEXT:    store i32 [[TMP8]], ptr addrspace(32) [[TMP107]], align 4
; CLEANUP-NEXT:    [[TMP82:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 3
; CLEANUP-NEXT:    store i32 [[TMP10]], ptr addrspace(32) [[TMP82]], align 4
; CLEANUP-NEXT:    [[TMP83:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 4
; CLEANUP-NEXT:    store i32 [[TMP12]], ptr addrspace(32) [[TMP83]], align 4
; CLEANUP-NEXT:    [[TMP84:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 5
; CLEANUP-NEXT:    store i32 [[TMP14]], ptr addrspace(32) [[TMP84]], align 4
; CLEANUP-NEXT:    [[TMP85:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 6
; CLEANUP-NEXT:    store i32 [[TMP16]], ptr addrspace(32) [[TMP85]], align 4
; CLEANUP-NEXT:    [[TMP86:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 7
; CLEANUP-NEXT:    store i32 [[TMP18]], ptr addrspace(32) [[TMP86]], align 4
; CLEANUP-NEXT:    [[TMP87:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 8
; CLEANUP-NEXT:    store i32 [[TMP20]], ptr addrspace(32) [[TMP87]], align 4
; CLEANUP-NEXT:    [[TMP88:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 9
; CLEANUP-NEXT:    store i32 [[TMP22]], ptr addrspace(32) [[TMP88]], align 4
; CLEANUP-NEXT:    [[TMP89:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 10
; CLEANUP-NEXT:    store i32 [[TMP24]], ptr addrspace(32) [[TMP89]], align 4
; CLEANUP-NEXT:    [[TMP90:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 11
; CLEANUP-NEXT:    store i32 [[TMP26]], ptr addrspace(32) [[TMP90]], align 4
; CLEANUP-NEXT:    [[TMP91:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 12
; CLEANUP-NEXT:    store i32 [[TMP28]], ptr addrspace(32) [[TMP91]], align 4
; CLEANUP-NEXT:    [[TMP92:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 13
; CLEANUP-NEXT:    store i32 [[TMP30]], ptr addrspace(32) [[TMP92]], align 4
; CLEANUP-NEXT:    [[TMP93:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 14
; CLEANUP-NEXT:    store i32 [[TMP32]], ptr addrspace(32) [[TMP93]], align 4
; CLEANUP-NEXT:    [[TMP94:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 15
; CLEANUP-NEXT:    store i32 [[TMP34]], ptr addrspace(32) [[TMP94]], align 4
; CLEANUP-NEXT:    [[TMP95:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 16
; CLEANUP-NEXT:    store i32 [[TMP36]], ptr addrspace(32) [[TMP95]], align 4
; CLEANUP-NEXT:    [[TMP96:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 17
; CLEANUP-NEXT:    store i32 [[TMP38]], ptr addrspace(32) [[TMP96]], align 4
; CLEANUP-NEXT:    [[TMP97:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 18
; CLEANUP-NEXT:    store i32 [[TMP40]], ptr addrspace(32) [[TMP97]], align 4
; CLEANUP-NEXT:    [[TMP98:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 19
; CLEANUP-NEXT:    store i32 [[TMP42]], ptr addrspace(32) [[TMP98]], align 4
; CLEANUP-NEXT:    [[TMP99:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 20
; CLEANUP-NEXT:    store i32 [[TMP44]], ptr addrspace(32) [[TMP99]], align 4
; CLEANUP-NEXT:    [[TMP100:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 21
; CLEANUP-NEXT:    store i32 [[TMP46]], ptr addrspace(32) [[TMP100]], align 4
; CLEANUP-NEXT:    [[TMP101:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 22
; CLEANUP-NEXT:    store i32 [[TMP48]], ptr addrspace(32) [[TMP101]], align 4
; CLEANUP-NEXT:    [[TMP102:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 23
; CLEANUP-NEXT:    store i32 [[TMP50]], ptr addrspace(32) [[TMP102]], align 4
; CLEANUP-NEXT:    [[TMP103:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 24
; CLEANUP-NEXT:    store i32 [[TMP52]], ptr addrspace(32) [[TMP103]], align 4
; CLEANUP-NEXT:    [[TMP104:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 25
; CLEANUP-NEXT:    store i32 [[TMP54]], ptr addrspace(32) [[TMP104]], align 4
; CLEANUP-NEXT:    [[TMP105:%.*]] = getelementptr inbounds i32, ptr addrspace(32) [[TMP81]], i32 26
; CLEANUP-NEXT:    store i32 [[TMP56]], ptr addrspace(32) [[TMP105]], align 4
; CLEANUP-NEXT:    [[DOTFCA_0_INSERT:%.*]] = insertvalue [[STRUCT_DISPATCHSYSTEMDATA]] poison, <3 x i32> [[DOTFCA_0_EXTRACT]], 0
; CLEANUP-NEXT:    [[DOTFCA_0_INSERT1:%.*]] = insertvalue [30 x i32] poison, i32 [[PAYLOAD_FCA_0_EXTRACT_RELOAD]], 0
; CLEANUP-NEXT:    [[DOTFCA_1_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_0_INSERT1]], i32 [[DOTFCA_1_EXTRACT]], 1
; CLEANUP-NEXT:    [[DOTFCA_2_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_1_INSERT]], i32 [[DOTFCA_2_EXTRACT]], 2
; CLEANUP-NEXT:    [[DOTFCA_3_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_2_INSERT]], i32 [[DOTFCA_3_EXTRACT]], 3
; CLEANUP-NEXT:    [[DOTFCA_4_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_3_INSERT]], i32 [[DOTFCA_4_EXTRACT]], 4
; CLEANUP-NEXT:    [[DOTFCA_5_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_4_INSERT]], i32 [[DOTFCA_5_EXTRACT]], 5
; CLEANUP-NEXT:    [[DOTFCA_6_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_5_INSERT]], i32 [[DOTFCA_6_EXTRACT]], 6
; CLEANUP-NEXT:    [[DOTFCA_7_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_6_INSERT]], i32 [[DOTFCA_7_EXTRACT]], 7
; CLEANUP-NEXT:    [[DOTFCA_8_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_7_INSERT]], i32 [[DOTFCA_8_EXTRACT]], 8
; CLEANUP-NEXT:    [[DOTFCA_9_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_8_INSERT]], i32 [[DOTFCA_9_EXTRACT]], 9
; CLEANUP-NEXT:    [[DOTFCA_10_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_9_INSERT]], i32 [[DOTFCA_10_EXTRACT]], 10
; CLEANUP-NEXT:    [[DOTFCA_11_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_10_INSERT]], i32 [[DOTFCA_11_EXTRACT]], 11
; CLEANUP-NEXT:    [[DOTFCA_12_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_11_INSERT]], i32 [[DOTFCA_12_EXTRACT]], 12
; CLEANUP-NEXT:    [[DOTFCA_13_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_12_INSERT]], i32 [[DOTFCA_13_EXTRACT]], 13
; CLEANUP-NEXT:    [[DOTFCA_14_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_13_INSERT]], i32 [[DOTFCA_14_EXTRACT]], 14
; CLEANUP-NEXT:    [[DOTFCA_15_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_14_INSERT]], i32 [[DOTFCA_15_EXTRACT]], 15
; CLEANUP-NEXT:    [[DOTFCA_16_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_15_INSERT]], i32 [[DOTFCA_16_EXTRACT]], 16
; CLEANUP-NEXT:    [[DOTFCA_17_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_16_INSERT]], i32 [[DOTFCA_17_EXTRACT]], 17
; CLEANUP-NEXT:    [[DOTFCA_18_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_17_INSERT]], i32 [[DOTFCA_18_EXTRACT]], 18
; CLEANUP-NEXT:    [[DOTFCA_19_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_18_INSERT]], i32 [[DOTFCA_19_EXTRACT]], 19
; CLEANUP-NEXT:    [[DOTFCA_20_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_19_INSERT]], i32 [[DOTFCA_20_EXTRACT]], 20
; CLEANUP-NEXT:    [[DOTFCA_21_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_20_INSERT]], i32 [[DOTFCA_21_EXTRACT]], 21
; CLEANUP-NEXT:    [[DOTFCA_22_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_21_INSERT]], i32 [[DOTFCA_22_EXTRACT]], 22
; CLEANUP-NEXT:    [[DOTFCA_23_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_22_INSERT]], i32 [[DOTFCA_23_EXTRACT]], 23
; CLEANUP-NEXT:    [[DOTFCA_24_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_23_INSERT]], i32 [[DOTFCA_24_EXTRACT]], 24
; CLEANUP-NEXT:    [[DOTFCA_25_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_24_INSERT]], i32 [[DOTFCA_25_EXTRACT]], 25
; CLEANUP-NEXT:    [[DOTFCA_26_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_25_INSERT]], i32 [[DOTFCA_26_EXTRACT]], 26
; CLEANUP-NEXT:    [[DOTFCA_27_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_26_INSERT]], i32 [[DOTFCA_27_EXTRACT]], 27
; CLEANUP-NEXT:    [[DOTFCA_28_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_27_INSERT]], i32 [[TMP23]], 28
; CLEANUP-NEXT:    [[DOTFCA_29_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_28_INSERT]], i32 [[DOTFCA_29_EXTRACT]], 29
; CLEANUP-NEXT:    call void @lgc.cps.free(i32 120)
; CLEANUP-NEXT:    call void (...) @lgc.ilcps.continue(i64 [[RETURNADDR_RELOAD]], i32 poison, i64 poison, [[STRUCT_DISPATCHSYSTEMDATA]] [[DOTFCA_0_INSERT]], [23 x i32] poison, [30 x i32] [[DOTFCA_29_INSERT]]), !continuation.registercount [[META17]]
; CLEANUP-NEXT:    unreachable
;
;
; POST-PROCESS-LABEL: define %struct.BuiltInTriangleIntersectionAttributes @_cont_GetTriangleHitAttributes(
; POST-PROCESS-SAME: ptr [[DATA:%.*]]) #[[ATTR0:[0-9]+]] {
; POST-PROCESS-NEXT:    [[ADDR:%.*]] = getelementptr [[STRUCT_SYSTEMDATA:%.*]], ptr [[DATA]], i32 0, i32 1
; POST-PROCESS-NEXT:    [[VAL:%.*]] = load [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]], ptr [[ADDR]], align 4
; POST-PROCESS-NEXT:    ret [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[VAL]]
;
;
; POST-PROCESS-LABEL: define i32 @_cont_GetLocalRootIndex(
; POST-PROCESS-SAME: ptr [[DATA:%.*]]) #[[ATTR0]] {
; POST-PROCESS-NEXT:    ret i32 5
;
;
; POST-PROCESS-LABEL: define void @main(
; POST-PROCESS-SAME: i32 [[CSPINIT:%.*]], i64 [[RETURNADDR:%.*]], [[STRUCT_DISPATCHSYSTEMDATA:%.*]] [[TMP0:%.*]]) !lgc.rt.shaderstage [[META8:![0-9]+]] !continuation.entry [[META19:![0-9]+]] !continuation [[META20:![0-9]+]] !continuation.stacksize [[META21:![0-9]+]] {
; POST-PROCESS-NEXT:  AllocaSpillBB:
; POST-PROCESS-NEXT:    [[CSP:%.*]] = alloca i32, align 4
; POST-PROCESS-NEXT:    store i32 [[CSPINIT]], ptr [[CSP]], align 4
; POST-PROCESS-NEXT:    [[TMP1:%.*]] = load i32, ptr [[CSP]], align 4
; POST-PROCESS-NEXT:    [[TMP2:%.*]] = add i32 [[TMP1]], 108
; POST-PROCESS-NEXT:    store i32 [[TMP2]], ptr [[CSP]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_0_EXTRACT56:%.*]] = extractvalue [[STRUCT_DISPATCHSYSTEMDATA]] [[TMP0]], 0
; POST-PROCESS-NEXT:    call void @amd.dx.setLocalRootIndex(i32 0)
; POST-PROCESS-NEXT:    [[TMP3:%.*]] = load [[DX_TYPES_HANDLE:%.*]], ptr @"\01?Scene@@3URaytracingAccelerationStructure@@A", align 4
; POST-PROCESS-NEXT:    [[TMP4:%.*]] = load [[DX_TYPES_HANDLE]], ptr @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A", align 4
; POST-PROCESS-NEXT:    [[TMP5:%.*]] = call [[DX_TYPES_HANDLE]] [[DX_OP_CREATEHANDLEFORLIB_DX_TYPES_HANDLE:@[a-zA-Z0-9_$\"\\.-]*[a-zA-Z_$\"\\.-][a-zA-Z0-9_$\"\\.-]*]](i32 160, [[DX_TYPES_HANDLE]] [[TMP3]])
; POST-PROCESS-NEXT:    [[TMP6:%.*]] = call [[DX_TYPES_HANDLE]] [[DX_OP_ANNOTATEHANDLE:@[a-zA-Z0-9_$\"\\.-]*[a-zA-Z_$\"\\.-][a-zA-Z0-9_$\"\\.-]*]](i32 216, [[DX_TYPES_HANDLE]] [[TMP5]], [[DX_TYPES_RESOURCEPROPERTIES:%.*]] { i32 16, i32 0 })
; POST-PROCESS-NEXT:    [[TMP7:%.*]] = call i64 @amd.dx.getAccelStructAddr([[DX_TYPES_HANDLE]] [[TMP6]])
; POST-PROCESS-NEXT:    [[DIS_DATA_I_FCA_0_INSERT:%.*]] = insertvalue [[STRUCT_DISPATCHSYSTEMDATA]] poison, <3 x i32> [[DOTFCA_0_EXTRACT56]], 0
; POST-PROCESS-NEXT:    [[SYS_DATA_I:%.*]] = insertvalue [[STRUCT_SYSTEMDATA:%.*]] undef, [[STRUCT_DISPATCHSYSTEMDATA]] [[DIS_DATA_I_FCA_0_INSERT]], 0
; POST-PROCESS-NEXT:    [[TRAV_DATA_I:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA:%.*]] undef, [[STRUCT_SYSTEMDATA]] [[SYS_DATA_I]], 0
; POST-PROCESS-NEXT:    [[TMP9:%.*]] = call i64 @continuation.getAddrAndMD(ptr @main.resume.0)
; POST-PROCESS-NEXT:    [[TRAV_DATA2_I:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I]], i64 [[TMP9]], 5
; POST-PROCESS-NEXT:    [[TMP11:%.*]] = inttoptr i32 [[TMP1]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP10:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP11]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP10]], align 4
; POST-PROCESS-NEXT:    [[TMP12:%.*]] = add i32 [[TMP1]], 4
; POST-PROCESS-NEXT:    [[TMP14:%.*]] = inttoptr i32 [[TMP12]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP13:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP14]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP13]], align 4
; POST-PROCESS-NEXT:    [[TMP15:%.*]] = add i32 [[TMP1]], 8
; POST-PROCESS-NEXT:    [[TMP17:%.*]] = inttoptr i32 [[TMP15]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP16:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP17]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP16]], align 4
; POST-PROCESS-NEXT:    [[TMP18:%.*]] = add i32 [[TMP1]], 12
; POST-PROCESS-NEXT:    [[TMP20:%.*]] = inttoptr i32 [[TMP18]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP19:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP20]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP19]], align 4
; POST-PROCESS-NEXT:    [[TMP21:%.*]] = add i32 [[TMP1]], 16
; POST-PROCESS-NEXT:    [[TMP23:%.*]] = inttoptr i32 [[TMP21]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP22:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP23]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP22]], align 4
; POST-PROCESS-NEXT:    [[TMP24:%.*]] = add i32 [[TMP1]], 20
; POST-PROCESS-NEXT:    [[TMP26:%.*]] = inttoptr i32 [[TMP24]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP25:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP26]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP25]], align 4
; POST-PROCESS-NEXT:    [[TMP27:%.*]] = add i32 [[TMP1]], 24
; POST-PROCESS-NEXT:    [[TMP29:%.*]] = inttoptr i32 [[TMP27]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP28:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP29]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP28]], align 4
; POST-PROCESS-NEXT:    [[TMP30:%.*]] = add i32 [[TMP1]], 28
; POST-PROCESS-NEXT:    [[TMP32:%.*]] = inttoptr i32 [[TMP30]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP31:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP32]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP31]], align 4
; POST-PROCESS-NEXT:    [[TMP33:%.*]] = add i32 [[TMP1]], 32
; POST-PROCESS-NEXT:    [[TMP35:%.*]] = inttoptr i32 [[TMP33]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP34:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP35]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP34]], align 4
; POST-PROCESS-NEXT:    [[TMP36:%.*]] = add i32 [[TMP1]], 36
; POST-PROCESS-NEXT:    [[TMP38:%.*]] = inttoptr i32 [[TMP36]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP37:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP38]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP37]], align 4
; POST-PROCESS-NEXT:    [[TMP39:%.*]] = add i32 [[TMP1]], 40
; POST-PROCESS-NEXT:    [[TMP41:%.*]] = inttoptr i32 [[TMP39]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP40:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP41]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP40]], align 4
; POST-PROCESS-NEXT:    [[TMP42:%.*]] = add i32 [[TMP1]], 44
; POST-PROCESS-NEXT:    [[TMP44:%.*]] = inttoptr i32 [[TMP42]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP43:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP44]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP43]], align 4
; POST-PROCESS-NEXT:    [[TMP45:%.*]] = add i32 [[TMP1]], 48
; POST-PROCESS-NEXT:    [[TMP47:%.*]] = inttoptr i32 [[TMP45]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP46:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP47]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP46]], align 4
; POST-PROCESS-NEXT:    [[TMP48:%.*]] = add i32 [[TMP1]], 52
; POST-PROCESS-NEXT:    [[TMP50:%.*]] = inttoptr i32 [[TMP48]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP49:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP50]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP49]], align 4
; POST-PROCESS-NEXT:    [[TMP51:%.*]] = add i32 [[TMP1]], 56
; POST-PROCESS-NEXT:    [[TMP53:%.*]] = inttoptr i32 [[TMP51]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP52:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP53]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP52]], align 4
; POST-PROCESS-NEXT:    [[TMP54:%.*]] = add i32 [[TMP1]], 60
; POST-PROCESS-NEXT:    [[TMP56:%.*]] = inttoptr i32 [[TMP54]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP55:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP56]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP55]], align 4
; POST-PROCESS-NEXT:    [[TMP57:%.*]] = add i32 [[TMP1]], 64
; POST-PROCESS-NEXT:    [[TMP59:%.*]] = inttoptr i32 [[TMP57]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP58:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP59]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP58]], align 4
; POST-PROCESS-NEXT:    [[TMP60:%.*]] = add i32 [[TMP1]], 68
; POST-PROCESS-NEXT:    [[TMP62:%.*]] = inttoptr i32 [[TMP60]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP61:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP62]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP61]], align 4
; POST-PROCESS-NEXT:    [[TMP63:%.*]] = add i32 [[TMP1]], 72
; POST-PROCESS-NEXT:    [[TMP65:%.*]] = inttoptr i32 [[TMP63]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP64:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP65]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP64]], align 4
; POST-PROCESS-NEXT:    [[TMP66:%.*]] = add i32 [[TMP1]], 76
; POST-PROCESS-NEXT:    [[TMP68:%.*]] = inttoptr i32 [[TMP66]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP67:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP68]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP67]], align 4
; POST-PROCESS-NEXT:    [[TMP69:%.*]] = add i32 [[TMP1]], 80
; POST-PROCESS-NEXT:    [[TMP71:%.*]] = inttoptr i32 [[TMP69]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP70:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP71]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP70]], align 4
; POST-PROCESS-NEXT:    [[TMP72:%.*]] = add i32 [[TMP1]], 84
; POST-PROCESS-NEXT:    [[TMP74:%.*]] = inttoptr i32 [[TMP72]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP73:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP74]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP73]], align 4
; POST-PROCESS-NEXT:    [[TMP75:%.*]] = add i32 [[TMP1]], 88
; POST-PROCESS-NEXT:    [[TMP77:%.*]] = inttoptr i32 [[TMP75]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP76:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP77]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP76]], align 4
; POST-PROCESS-NEXT:    [[TMP78:%.*]] = add i32 [[TMP1]], 92
; POST-PROCESS-NEXT:    [[TMP80:%.*]] = inttoptr i32 [[TMP78]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP79:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP80]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP79]], align 4
; POST-PROCESS-NEXT:    [[TMP81:%.*]] = add i32 [[TMP1]], 96
; POST-PROCESS-NEXT:    [[TMP83:%.*]] = inttoptr i32 [[TMP81]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP82:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP83]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP82]], align 4
; POST-PROCESS-NEXT:    [[TMP84:%.*]] = add i32 [[TMP1]], 100
; POST-PROCESS-NEXT:    [[TMP86:%.*]] = inttoptr i32 [[TMP84]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP85:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP86]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP85]], align 4
; POST-PROCESS-NEXT:    [[TMP87:%.*]] = add i32 [[TMP1]], 104
; POST-PROCESS-NEXT:    [[TMP90:%.*]] = inttoptr i32 [[TMP87]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP88:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP90]], i32 0
; POST-PROCESS-NEXT:    store i32 undef, ptr addrspace(21) [[TMP88]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_0_INSERT:%.*]] = insertvalue [30 x i32] poison, i32 [[TMP1]], 0
; POST-PROCESS-NEXT:    [[DOTFCA_1_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_0_INSERT]], i32 undef, 1
; POST-PROCESS-NEXT:    [[DOTFCA_2_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_1_INSERT]], i32 undef, 2
; POST-PROCESS-NEXT:    [[DOTFCA_3_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_2_INSERT]], i32 undef, 3
; POST-PROCESS-NEXT:    [[DOTFCA_4_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_3_INSERT]], i32 undef, 4
; POST-PROCESS-NEXT:    [[DOTFCA_5_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_4_INSERT]], i32 undef, 5
; POST-PROCESS-NEXT:    [[DOTFCA_6_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_5_INSERT]], i32 undef, 6
; POST-PROCESS-NEXT:    [[DOTFCA_7_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_6_INSERT]], i32 undef, 7
; POST-PROCESS-NEXT:    [[DOTFCA_8_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_7_INSERT]], i32 undef, 8
; POST-PROCESS-NEXT:    [[DOTFCA_9_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_8_INSERT]], i32 undef, 9
; POST-PROCESS-NEXT:    [[DOTFCA_10_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_9_INSERT]], i32 undef, 10
; POST-PROCESS-NEXT:    [[DOTFCA_11_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_10_INSERT]], i32 undef, 11
; POST-PROCESS-NEXT:    [[DOTFCA_12_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_11_INSERT]], i32 undef, 12
; POST-PROCESS-NEXT:    [[DOTFCA_13_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_12_INSERT]], i32 undef, 13
; POST-PROCESS-NEXT:    [[DOTFCA_14_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_13_INSERT]], i32 undef, 14
; POST-PROCESS-NEXT:    [[DOTFCA_15_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_14_INSERT]], i32 undef, 15
; POST-PROCESS-NEXT:    [[DOTFCA_16_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_15_INSERT]], i32 undef, 16
; POST-PROCESS-NEXT:    [[DOTFCA_17_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_16_INSERT]], i32 undef, 17
; POST-PROCESS-NEXT:    [[DOTFCA_18_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_17_INSERT]], i32 undef, 18
; POST-PROCESS-NEXT:    [[DOTFCA_19_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_18_INSERT]], i32 undef, 19
; POST-PROCESS-NEXT:    [[DOTFCA_20_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_19_INSERT]], i32 undef, 20
; POST-PROCESS-NEXT:    [[DOTFCA_21_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_20_INSERT]], i32 undef, 21
; POST-PROCESS-NEXT:    [[DOTFCA_22_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_21_INSERT]], i32 undef, 22
; POST-PROCESS-NEXT:    [[DOTFCA_23_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_22_INSERT]], i32 undef, 23
; POST-PROCESS-NEXT:    [[DOTFCA_24_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_23_INSERT]], i32 undef, 24
; POST-PROCESS-NEXT:    [[DOTFCA_25_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_24_INSERT]], i32 undef, 25
; POST-PROCESS-NEXT:    [[DOTFCA_26_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_25_INSERT]], i32 undef, 26
; POST-PROCESS-NEXT:    [[DOTFCA_27_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_26_INSERT]], i32 undef, 27
; POST-PROCESS-NEXT:    [[DOTFCA_28_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_27_INSERT]], i32 undef, 28
; POST-PROCESS-NEXT:    [[DOTFCA_29_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_28_INSERT]], i32 undef, 29
; POST-PROCESS-NEXT:    [[TMP89:%.*]] = load i32, ptr [[CSP]], align 4
; POST-PROCESS-NEXT:    call void (...) @lgc.ilcps.waitContinue(i64 4, i64 -1, i32 [[TMP89]], i64 poison, [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA2_I]], [10 x i32] poison, [30 x i32] [[DOTFCA_29_INSERT]])
; POST-PROCESS-NEXT:    unreachable
;
;
; POST-PROCESS-LABEL: define dso_local void @main.resume.0(
; POST-PROCESS-SAME: i32 [[CSPINIT:%.*]], i64 [[TMP0:%.*]], { [[STRUCT_DISPATCHSYSTEMDATA:%.*]], [23 x i32], [30 x i32] } [[TMP1:%.*]]) !lgc.rt.shaderstage [[META8]] !continuation [[META20]] {
; POST-PROCESS-NEXT:  entryresume.0:
; POST-PROCESS-NEXT:    [[CSP:%.*]] = alloca i32, align 4
; POST-PROCESS-NEXT:    store i32 [[CSPINIT]], ptr [[CSP]], align 4
; POST-PROCESS-NEXT:    [[TMP2:%.*]] = load i32, ptr [[CSP]], align 4
; POST-PROCESS-NEXT:    [[TMP27:%.*]] = add i32 [[TMP2]], -108
; POST-PROCESS-NEXT:    [[TMP4:%.*]] = extractvalue { [[STRUCT_DISPATCHSYSTEMDATA]], [23 x i32], [30 x i32] } [[TMP1]], 2
; POST-PROCESS-NEXT:    [[TMP3:%.*]] = extractvalue [30 x i32] [[TMP4]], 0
; POST-PROCESS-NEXT:    [[DOTFCA_1_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 1
; POST-PROCESS-NEXT:    [[DOTFCA_2_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 2
; POST-PROCESS-NEXT:    [[DOTFCA_3_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 3
; POST-PROCESS-NEXT:    [[DOTFCA_4_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 4
; POST-PROCESS-NEXT:    [[DOTFCA_5_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 5
; POST-PROCESS-NEXT:    [[DOTFCA_6_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 6
; POST-PROCESS-NEXT:    [[DOTFCA_7_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 7
; POST-PROCESS-NEXT:    [[DOTFCA_8_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 8
; POST-PROCESS-NEXT:    [[DOTFCA_9_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 9
; POST-PROCESS-NEXT:    [[DOTFCA_10_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 10
; POST-PROCESS-NEXT:    [[DOTFCA_11_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 11
; POST-PROCESS-NEXT:    [[DOTFCA_12_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 12
; POST-PROCESS-NEXT:    [[DOTFCA_13_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 13
; POST-PROCESS-NEXT:    [[DOTFCA_14_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 14
; POST-PROCESS-NEXT:    [[DOTFCA_15_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 15
; POST-PROCESS-NEXT:    [[DOTFCA_16_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 16
; POST-PROCESS-NEXT:    [[DOTFCA_17_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 17
; POST-PROCESS-NEXT:    [[DOTFCA_18_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 18
; POST-PROCESS-NEXT:    [[DOTFCA_19_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 19
; POST-PROCESS-NEXT:    [[DOTFCA_20_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 20
; POST-PROCESS-NEXT:    [[DOTFCA_21_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 21
; POST-PROCESS-NEXT:    [[DOTFCA_22_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 22
; POST-PROCESS-NEXT:    [[DOTFCA_23_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 23
; POST-PROCESS-NEXT:    [[DOTFCA_24_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 24
; POST-PROCESS-NEXT:    [[TMP22:%.*]] = extractvalue [30 x i32] [[TMP4]], 25
; POST-PROCESS-NEXT:    [[TMP23:%.*]] = extractvalue [30 x i32] [[TMP4]], 26
; POST-PROCESS-NEXT:    [[TMP24:%.*]] = extractvalue [30 x i32] [[TMP4]], 27
; POST-PROCESS-NEXT:    [[DOTFCA_28_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 28
; POST-PROCESS-NEXT:    [[DOTFCA_29_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 29
; POST-PROCESS-NEXT:    [[TMP5:%.*]] = inttoptr i32 [[TMP3]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP6:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP5]], i32 0
; POST-PROCESS-NEXT:    [[TMP7:%.*]] = load i32, ptr addrspace(21) [[TMP6]], align 4
; POST-PROCESS-NEXT:    [[TMP30:%.*]] = add i32 [[TMP3]], 4
; POST-PROCESS-NEXT:    [[TMP9:%.*]] = inttoptr i32 [[TMP30]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP10:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP9]], i32 0
; POST-PROCESS-NEXT:    [[TMP11:%.*]] = load i32, ptr addrspace(21) [[TMP10]], align 4
; POST-PROCESS-NEXT:    [[TMP34:%.*]] = add i32 [[TMP3]], 8
; POST-PROCESS-NEXT:    [[TMP13:%.*]] = inttoptr i32 [[TMP34]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP14:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP13]], i32 0
; POST-PROCESS-NEXT:    [[TMP15:%.*]] = load i32, ptr addrspace(21) [[TMP14]], align 4
; POST-PROCESS-NEXT:    [[TMP38:%.*]] = add i32 [[TMP3]], 12
; POST-PROCESS-NEXT:    [[TMP17:%.*]] = inttoptr i32 [[TMP38]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP18:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP17]], i32 0
; POST-PROCESS-NEXT:    [[TMP19:%.*]] = load i32, ptr addrspace(21) [[TMP18]], align 4
; POST-PROCESS-NEXT:    [[TMP42:%.*]] = add i32 [[TMP3]], 16
; POST-PROCESS-NEXT:    [[TMP21:%.*]] = inttoptr i32 [[TMP42]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP28:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP21]], i32 0
; POST-PROCESS-NEXT:    [[TMP32:%.*]] = load i32, ptr addrspace(21) [[TMP28]], align 4
; POST-PROCESS-NEXT:    [[TMP46:%.*]] = add i32 [[TMP3]], 20
; POST-PROCESS-NEXT:    [[TMP25:%.*]] = inttoptr i32 [[TMP46]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP26:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP25]], i32 0
; POST-PROCESS-NEXT:    [[TMP36:%.*]] = load i32, ptr addrspace(21) [[TMP26]], align 4
; POST-PROCESS-NEXT:    [[TMP50:%.*]] = add i32 [[TMP3]], 24
; POST-PROCESS-NEXT:    [[TMP29:%.*]] = inttoptr i32 [[TMP50]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP40:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP29]], i32 0
; POST-PROCESS-NEXT:    [[TMP31:%.*]] = load i32, ptr addrspace(21) [[TMP40]], align 4
; POST-PROCESS-NEXT:    [[TMP54:%.*]] = add i32 [[TMP3]], 28
; POST-PROCESS-NEXT:    [[TMP33:%.*]] = inttoptr i32 [[TMP54]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP44:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP33]], i32 0
; POST-PROCESS-NEXT:    [[TMP35:%.*]] = load i32, ptr addrspace(21) [[TMP44]], align 4
; POST-PROCESS-NEXT:    [[TMP58:%.*]] = add i32 [[TMP3]], 32
; POST-PROCESS-NEXT:    [[TMP37:%.*]] = inttoptr i32 [[TMP58]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP48:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP37]], i32 0
; POST-PROCESS-NEXT:    [[TMP39:%.*]] = load i32, ptr addrspace(21) [[TMP48]], align 4
; POST-PROCESS-NEXT:    [[TMP62:%.*]] = add i32 [[TMP3]], 36
; POST-PROCESS-NEXT:    [[TMP41:%.*]] = inttoptr i32 [[TMP62]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP52:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP41]], i32 0
; POST-PROCESS-NEXT:    [[TMP43:%.*]] = load i32, ptr addrspace(21) [[TMP52]], align 4
; POST-PROCESS-NEXT:    [[TMP66:%.*]] = add i32 [[TMP3]], 40
; POST-PROCESS-NEXT:    [[TMP45:%.*]] = inttoptr i32 [[TMP66]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP56:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP45]], i32 0
; POST-PROCESS-NEXT:    [[TMP47:%.*]] = load i32, ptr addrspace(21) [[TMP56]], align 4
; POST-PROCESS-NEXT:    [[TMP70:%.*]] = add i32 [[TMP3]], 44
; POST-PROCESS-NEXT:    [[TMP49:%.*]] = inttoptr i32 [[TMP70]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP60:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP49]], i32 0
; POST-PROCESS-NEXT:    [[TMP51:%.*]] = load i32, ptr addrspace(21) [[TMP60]], align 4
; POST-PROCESS-NEXT:    [[TMP74:%.*]] = add i32 [[TMP3]], 48
; POST-PROCESS-NEXT:    [[TMP53:%.*]] = inttoptr i32 [[TMP74]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP64:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP53]], i32 0
; POST-PROCESS-NEXT:    [[TMP55:%.*]] = load i32, ptr addrspace(21) [[TMP64]], align 4
; POST-PROCESS-NEXT:    [[TMP78:%.*]] = add i32 [[TMP3]], 52
; POST-PROCESS-NEXT:    [[TMP57:%.*]] = inttoptr i32 [[TMP78]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP68:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP57]], i32 0
; POST-PROCESS-NEXT:    [[TMP59:%.*]] = load i32, ptr addrspace(21) [[TMP68]], align 4
; POST-PROCESS-NEXT:    [[TMP82:%.*]] = add i32 [[TMP3]], 56
; POST-PROCESS-NEXT:    [[TMP61:%.*]] = inttoptr i32 [[TMP82]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP72:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP61]], i32 0
; POST-PROCESS-NEXT:    [[TMP63:%.*]] = load i32, ptr addrspace(21) [[TMP72]], align 4
; POST-PROCESS-NEXT:    [[TMP86:%.*]] = add i32 [[TMP3]], 60
; POST-PROCESS-NEXT:    [[TMP65:%.*]] = inttoptr i32 [[TMP86]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP76:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP65]], i32 0
; POST-PROCESS-NEXT:    [[TMP67:%.*]] = load i32, ptr addrspace(21) [[TMP76]], align 4
; POST-PROCESS-NEXT:    [[TMP90:%.*]] = add i32 [[TMP3]], 64
; POST-PROCESS-NEXT:    [[TMP69:%.*]] = inttoptr i32 [[TMP90]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP80:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP69]], i32 0
; POST-PROCESS-NEXT:    [[TMP71:%.*]] = load i32, ptr addrspace(21) [[TMP80]], align 4
; POST-PROCESS-NEXT:    [[TMP94:%.*]] = add i32 [[TMP3]], 68
; POST-PROCESS-NEXT:    [[TMP73:%.*]] = inttoptr i32 [[TMP94]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP84:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP73]], i32 0
; POST-PROCESS-NEXT:    [[TMP75:%.*]] = load i32, ptr addrspace(21) [[TMP84]], align 4
; POST-PROCESS-NEXT:    [[TMP98:%.*]] = add i32 [[TMP3]], 72
; POST-PROCESS-NEXT:    [[TMP77:%.*]] = inttoptr i32 [[TMP98]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP88:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP77]], i32 0
; POST-PROCESS-NEXT:    [[TMP79:%.*]] = load i32, ptr addrspace(21) [[TMP88]], align 4
; POST-PROCESS-NEXT:    [[TMP102:%.*]] = add i32 [[TMP3]], 76
; POST-PROCESS-NEXT:    [[TMP81:%.*]] = inttoptr i32 [[TMP102]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP92:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP81]], i32 0
; POST-PROCESS-NEXT:    [[TMP83:%.*]] = load i32, ptr addrspace(21) [[TMP92]], align 4
; POST-PROCESS-NEXT:    [[TMP106:%.*]] = add i32 [[TMP3]], 80
; POST-PROCESS-NEXT:    [[TMP85:%.*]] = inttoptr i32 [[TMP106]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP96:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP85]], i32 0
; POST-PROCESS-NEXT:    [[TMP87:%.*]] = load i32, ptr addrspace(21) [[TMP96]], align 4
; POST-PROCESS-NEXT:    [[TMP110:%.*]] = add i32 [[TMP3]], 84
; POST-PROCESS-NEXT:    [[TMP89:%.*]] = inttoptr i32 [[TMP110]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP100:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP89]], i32 0
; POST-PROCESS-NEXT:    [[TMP91:%.*]] = load i32, ptr addrspace(21) [[TMP100]], align 4
; POST-PROCESS-NEXT:    [[TMP114:%.*]] = add i32 [[TMP3]], 88
; POST-PROCESS-NEXT:    [[TMP93:%.*]] = inttoptr i32 [[TMP114]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP104:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP93]], i32 0
; POST-PROCESS-NEXT:    [[TMP95:%.*]] = load i32, ptr addrspace(21) [[TMP104]], align 4
; POST-PROCESS-NEXT:    [[TMP118:%.*]] = add i32 [[TMP3]], 92
; POST-PROCESS-NEXT:    [[TMP97:%.*]] = inttoptr i32 [[TMP118]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP108:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP97]], i32 0
; POST-PROCESS-NEXT:    [[TMP99:%.*]] = load i32, ptr addrspace(21) [[TMP108]], align 4
; POST-PROCESS-NEXT:    [[TMP122:%.*]] = add i32 [[TMP3]], 96
; POST-PROCESS-NEXT:    [[TMP101:%.*]] = inttoptr i32 [[TMP122]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP115:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP101]], i32 0
; POST-PROCESS-NEXT:    [[TMP103:%.*]] = load i32, ptr addrspace(21) [[TMP115]], align 4
; POST-PROCESS-NEXT:    [[TMP126:%.*]] = add i32 [[TMP3]], 100
; POST-PROCESS-NEXT:    [[TMP105:%.*]] = inttoptr i32 [[TMP126]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP116:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP105]], i32 0
; POST-PROCESS-NEXT:    [[TMP107:%.*]] = load i32, ptr addrspace(21) [[TMP116]], align 4
; POST-PROCESS-NEXT:    [[TMP130:%.*]] = add i32 [[TMP3]], 104
; POST-PROCESS-NEXT:    [[TMP109:%.*]] = inttoptr i32 [[TMP130]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP117:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP109]], i32 0
; POST-PROCESS-NEXT:    [[TMP111:%.*]] = load i32, ptr addrspace(21) [[TMP117]], align 4
; POST-PROCESS-NEXT:    [[TMP119:%.*]] = extractvalue { [[STRUCT_DISPATCHSYSTEMDATA]], [23 x i32], [30 x i32] } [[TMP1]], 0
; POST-PROCESS-NEXT:    [[DOTFCA_0_EXTRACT57:%.*]] = extractvalue [[STRUCT_DISPATCHSYSTEMDATA]] [[TMP119]], 0
; POST-PROCESS-NEXT:    call void @amd.dx.setLocalRootIndex(i32 0)
; POST-PROCESS-NEXT:    [[TMP112:%.*]] = load i32, ptr [[CSP]], align 4
; POST-PROCESS-NEXT:    [[TMP113:%.*]] = add i32 [[TMP112]], -108
; POST-PROCESS-NEXT:    store i32 [[TMP113]], ptr [[CSP]], align 4
; POST-PROCESS-NEXT:    ret void
; POST-PROCESS:       entryresume.0.split:
; POST-PROCESS-NEXT:    unreachable
;
;
; POST-PROCESS-LABEL: define void @AnyHit(
; POST-PROCESS-SAME: i32 [[CSPINIT:%.*]], i64 [[RETURNADDR:%.*]], [[STRUCT_ANYHITTRAVERSALDATA:%.*]] [[TMP0:%.*]], [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]] [[TMP1:%.*]], [6 x i32] [[PADDING:%.*]], [30 x i32] [[PAYLOAD:%.*]]) #[[ATTR2:[0-9]+]] !lgc.rt.shaderstage [[META22:![0-9]+]] !continuation [[META23:![0-9]+]] {
; POST-PROCESS-NEXT:  AllocaSpillBB:
; POST-PROCESS-NEXT:    [[SYSTEM_DATA_ALLOCA:%.*]] = alloca [[STRUCT_ANYHITTRAVERSALDATA]], align 8
; POST-PROCESS-NEXT:    [[CSP:%.*]] = alloca i32, align 4
; POST-PROCESS-NEXT:    store i32 [[CSPINIT]], ptr [[CSP]], align 4
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_0_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 0
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_1_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 1
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_2_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 2
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_3_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 3
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_4_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 4
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_5_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 5
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_6_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 6
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_7_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 7
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_8_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 8
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_9_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 9
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_10_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 10
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_11_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 11
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_12_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 12
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_13_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 13
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_14_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 14
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_15_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 15
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_16_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 16
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_17_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 17
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_18_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 18
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_19_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 19
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_20_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 20
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_21_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 21
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_22_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 22
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_23_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 23
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_24_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 24
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_25_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 25
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_26_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 26
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_27_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 27
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_28_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 28
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_29_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 29
; POST-PROCESS-NEXT:    [[DOTFCA_0_0_0_0_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 0, 0, 0
; POST-PROCESS-NEXT:    [[DOTFCA_0_0_0_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0, i32 0, i32 0
; POST-PROCESS-NEXT:    store <3 x i32> [[DOTFCA_0_0_0_0_EXTRACT]], ptr [[DOTFCA_0_0_0_0_GEP]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_0_0_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 0, 1, 0
; POST-PROCESS-NEXT:    [[DOTFCA_0_0_1_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0, i32 1, i32 0
; POST-PROCESS-NEXT:    store <2 x float> [[DOTFCA_0_0_1_0_EXTRACT]], ptr [[DOTFCA_0_0_1_0_GEP]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_0_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 1, 0
; POST-PROCESS-NEXT:    [[DOTFCA_0_1_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 1, i32 0
; POST-PROCESS-NEXT:    store float [[DOTFCA_0_1_0_EXTRACT]], ptr [[DOTFCA_0_1_0_GEP]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_0_1_1_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 1, 1
; POST-PROCESS-NEXT:    [[DOTFCA_0_1_1_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 1, i32 1
; POST-PROCESS-NEXT:    store i32 [[DOTFCA_0_1_1_EXTRACT]], ptr [[DOTFCA_0_1_1_GEP]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_0_2_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 2
; POST-PROCESS-NEXT:    [[DOTFCA_0_2_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 2
; POST-PROCESS-NEXT:    store <3 x float> [[DOTFCA_0_2_EXTRACT]], ptr [[DOTFCA_0_2_GEP]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_0_3_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 3
; POST-PROCESS-NEXT:    [[DOTFCA_0_3_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 3
; POST-PROCESS-NEXT:    store <3 x float> [[DOTFCA_0_3_EXTRACT]], ptr [[DOTFCA_0_3_GEP]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_0_4_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 4
; POST-PROCESS-NEXT:    [[DOTFCA_0_4_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 4
; POST-PROCESS-NEXT:    store float [[DOTFCA_0_4_EXTRACT]], ptr [[DOTFCA_0_4_GEP]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_0_5_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 5
; POST-PROCESS-NEXT:    [[DOTFCA_0_5_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 5
; POST-PROCESS-NEXT:    store i64 [[DOTFCA_0_5_EXTRACT]], ptr [[DOTFCA_0_5_GEP]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 1, 0
; POST-PROCESS-NEXT:    [[DOTFCA_1_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1, i32 0
; POST-PROCESS-NEXT:    store float [[DOTFCA_1_0_EXTRACT]], ptr [[DOTFCA_1_0_GEP]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_1_1_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 1, 1
; POST-PROCESS-NEXT:    [[DOTFCA_1_1_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1, i32 1
; POST-PROCESS-NEXT:    store i32 [[DOTFCA_1_1_EXTRACT]], ptr [[DOTFCA_1_1_GEP]], align 4
; POST-PROCESS-NEXT:    [[TMP2:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0, i32 0
; POST-PROCESS-NEXT:    [[TMP3:%.*]] = inttoptr i32 [[PAYLOAD_FCA_0_EXTRACT]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP4:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP3]], i32 0
; POST-PROCESS-NEXT:    [[TMP5:%.*]] = load i32, ptr addrspace(21) [[TMP4]], align 4
; POST-PROCESS-NEXT:    [[TMP6:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 4
; POST-PROCESS-NEXT:    [[TMP7:%.*]] = inttoptr i32 [[TMP6]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP8:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP7]], i32 0
; POST-PROCESS-NEXT:    [[TMP9:%.*]] = load i32, ptr addrspace(21) [[TMP8]], align 4
; POST-PROCESS-NEXT:    [[TMP10:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 8
; POST-PROCESS-NEXT:    [[TMP11:%.*]] = inttoptr i32 [[TMP10]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP12:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP11]], i32 0
; POST-PROCESS-NEXT:    [[TMP13:%.*]] = load i32, ptr addrspace(21) [[TMP12]], align 4
; POST-PROCESS-NEXT:    [[TMP14:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 12
; POST-PROCESS-NEXT:    [[TMP15:%.*]] = inttoptr i32 [[TMP14]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP16:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP15]], i32 0
; POST-PROCESS-NEXT:    [[TMP17:%.*]] = load i32, ptr addrspace(21) [[TMP16]], align 4
; POST-PROCESS-NEXT:    [[TMP18:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 16
; POST-PROCESS-NEXT:    [[TMP19:%.*]] = inttoptr i32 [[TMP18]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP20:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP19]], i32 0
; POST-PROCESS-NEXT:    [[TMP21:%.*]] = load i32, ptr addrspace(21) [[TMP20]], align 4
; POST-PROCESS-NEXT:    [[TMP22:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 20
; POST-PROCESS-NEXT:    [[TMP23:%.*]] = inttoptr i32 [[TMP22]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP24:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP23]], i32 0
; POST-PROCESS-NEXT:    [[TMP25:%.*]] = load i32, ptr addrspace(21) [[TMP24]], align 4
; POST-PROCESS-NEXT:    [[TMP26:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 24
; POST-PROCESS-NEXT:    [[TMP27:%.*]] = inttoptr i32 [[TMP26]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP28:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP27]], i32 0
; POST-PROCESS-NEXT:    [[TMP29:%.*]] = load i32, ptr addrspace(21) [[TMP28]], align 4
; POST-PROCESS-NEXT:    [[TMP30:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 28
; POST-PROCESS-NEXT:    [[TMP31:%.*]] = inttoptr i32 [[TMP30]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP32:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP31]], i32 0
; POST-PROCESS-NEXT:    [[TMP33:%.*]] = load i32, ptr addrspace(21) [[TMP32]], align 4
; POST-PROCESS-NEXT:    [[TMP34:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 32
; POST-PROCESS-NEXT:    [[TMP35:%.*]] = inttoptr i32 [[TMP34]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP36:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP35]], i32 0
; POST-PROCESS-NEXT:    [[TMP37:%.*]] = load i32, ptr addrspace(21) [[TMP36]], align 4
; POST-PROCESS-NEXT:    [[TMP38:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 36
; POST-PROCESS-NEXT:    [[TMP39:%.*]] = inttoptr i32 [[TMP38]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP40:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP39]], i32 0
; POST-PROCESS-NEXT:    [[TMP41:%.*]] = load i32, ptr addrspace(21) [[TMP40]], align 4
; POST-PROCESS-NEXT:    [[TMP42:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 40
; POST-PROCESS-NEXT:    [[TMP43:%.*]] = inttoptr i32 [[TMP42]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP44:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP43]], i32 0
; POST-PROCESS-NEXT:    [[TMP45:%.*]] = load i32, ptr addrspace(21) [[TMP44]], align 4
; POST-PROCESS-NEXT:    [[TMP46:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 44
; POST-PROCESS-NEXT:    [[TMP47:%.*]] = inttoptr i32 [[TMP46]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP48:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP47]], i32 0
; POST-PROCESS-NEXT:    [[TMP49:%.*]] = load i32, ptr addrspace(21) [[TMP48]], align 4
; POST-PROCESS-NEXT:    [[TMP50:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 48
; POST-PROCESS-NEXT:    [[TMP51:%.*]] = inttoptr i32 [[TMP50]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP52:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP51]], i32 0
; POST-PROCESS-NEXT:    [[TMP53:%.*]] = load i32, ptr addrspace(21) [[TMP52]], align 4
; POST-PROCESS-NEXT:    [[TMP54:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 52
; POST-PROCESS-NEXT:    [[TMP55:%.*]] = inttoptr i32 [[TMP54]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP56:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP55]], i32 0
; POST-PROCESS-NEXT:    [[TMP57:%.*]] = load i32, ptr addrspace(21) [[TMP56]], align 4
; POST-PROCESS-NEXT:    [[TMP58:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 56
; POST-PROCESS-NEXT:    [[TMP59:%.*]] = inttoptr i32 [[TMP58]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP60:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP59]], i32 0
; POST-PROCESS-NEXT:    [[TMP61:%.*]] = load i32, ptr addrspace(21) [[TMP60]], align 4
; POST-PROCESS-NEXT:    [[TMP62:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 60
; POST-PROCESS-NEXT:    [[TMP63:%.*]] = inttoptr i32 [[TMP62]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP64:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP63]], i32 0
; POST-PROCESS-NEXT:    [[TMP65:%.*]] = load i32, ptr addrspace(21) [[TMP64]], align 4
; POST-PROCESS-NEXT:    [[TMP66:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 64
; POST-PROCESS-NEXT:    [[TMP67:%.*]] = inttoptr i32 [[TMP66]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP68:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP67]], i32 0
; POST-PROCESS-NEXT:    [[TMP69:%.*]] = load i32, ptr addrspace(21) [[TMP68]], align 4
; POST-PROCESS-NEXT:    [[TMP70:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 68
; POST-PROCESS-NEXT:    [[TMP71:%.*]] = inttoptr i32 [[TMP70]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP72:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP71]], i32 0
; POST-PROCESS-NEXT:    [[TMP73:%.*]] = load i32, ptr addrspace(21) [[TMP72]], align 4
; POST-PROCESS-NEXT:    [[TMP74:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 72
; POST-PROCESS-NEXT:    [[TMP75:%.*]] = inttoptr i32 [[TMP74]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP76:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP75]], i32 0
; POST-PROCESS-NEXT:    [[TMP77:%.*]] = load i32, ptr addrspace(21) [[TMP76]], align 4
; POST-PROCESS-NEXT:    [[TMP78:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 76
; POST-PROCESS-NEXT:    [[TMP79:%.*]] = inttoptr i32 [[TMP78]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP80:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP79]], i32 0
; POST-PROCESS-NEXT:    [[TMP81:%.*]] = load i32, ptr addrspace(21) [[TMP80]], align 4
; POST-PROCESS-NEXT:    [[TMP82:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 80
; POST-PROCESS-NEXT:    [[TMP83:%.*]] = inttoptr i32 [[TMP82]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP84:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP83]], i32 0
; POST-PROCESS-NEXT:    [[TMP85:%.*]] = load i32, ptr addrspace(21) [[TMP84]], align 4
; POST-PROCESS-NEXT:    [[TMP86:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 84
; POST-PROCESS-NEXT:    [[TMP87:%.*]] = inttoptr i32 [[TMP86]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP88:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP87]], i32 0
; POST-PROCESS-NEXT:    [[TMP89:%.*]] = load i32, ptr addrspace(21) [[TMP88]], align 4
; POST-PROCESS-NEXT:    [[TMP90:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 88
; POST-PROCESS-NEXT:    [[TMP91:%.*]] = inttoptr i32 [[TMP90]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP92:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP91]], i32 0
; POST-PROCESS-NEXT:    [[TMP93:%.*]] = load i32, ptr addrspace(21) [[TMP92]], align 4
; POST-PROCESS-NEXT:    [[TMP94:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 92
; POST-PROCESS-NEXT:    [[TMP95:%.*]] = inttoptr i32 [[TMP94]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP96:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP95]], i32 0
; POST-PROCESS-NEXT:    [[TMP97:%.*]] = load i32, ptr addrspace(21) [[TMP96]], align 4
; POST-PROCESS-NEXT:    [[TMP98:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 96
; POST-PROCESS-NEXT:    [[TMP99:%.*]] = inttoptr i32 [[TMP98]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP100:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP99]], i32 0
; POST-PROCESS-NEXT:    [[TMP101:%.*]] = load i32, ptr addrspace(21) [[TMP100]], align 4
; POST-PROCESS-NEXT:    [[TMP102:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 100
; POST-PROCESS-NEXT:    [[TMP103:%.*]] = inttoptr i32 [[TMP102]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP104:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP103]], i32 0
; POST-PROCESS-NEXT:    [[TMP105:%.*]] = load i32, ptr addrspace(21) [[TMP104]], align 4
; POST-PROCESS-NEXT:    [[TMP106:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 104
; POST-PROCESS-NEXT:    [[TMP107:%.*]] = inttoptr i32 [[TMP106]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP108:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP107]], i32 0
; POST-PROCESS-NEXT:    [[TMP109:%.*]] = load i32, ptr addrspace(21) [[TMP108]], align 4
; POST-PROCESS-NEXT:    [[TMP110:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; POST-PROCESS-NEXT:    [[ADDR_I:%.*]] = getelementptr [[STRUCT_SYSTEMDATA:%.*]], ptr [[TMP110]], i32 0, i32 1
; POST-PROCESS-NEXT:    [[VAL_I_FCA_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]], ptr [[ADDR_I]], i32 0, i32 0
; POST-PROCESS-NEXT:    [[VAL_I_FCA_0_LOAD:%.*]] = load <2 x float>, ptr [[VAL_I_FCA_0_GEP]], align 4
; POST-PROCESS-NEXT:    [[VAL_I_FCA_0_INSERT:%.*]] = insertvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] poison, <2 x float> [[VAL_I_FCA_0_LOAD]], 0
; POST-PROCESS-NEXT:    [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[VAL_I_FCA_0_INSERT]], 0
; POST-PROCESS-NEXT:    [[DOTSROA_035_0_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT]], i32 0
; POST-PROCESS-NEXT:    [[TMP111:%.*]] = bitcast float [[DOTSROA_035_0_VEC_EXTRACT]] to i32
; POST-PROCESS-NEXT:    [[DOTSROA_035_4_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT]], i32 1
; POST-PROCESS-NEXT:    [[TMP112:%.*]] = bitcast float [[DOTSROA_035_4_VEC_EXTRACT]] to i32
; POST-PROCESS-NEXT:    [[DOTFCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[TMP1]], 0
; POST-PROCESS-NEXT:    call void @amd.dx.setLocalRootIndex(i32 5)
; POST-PROCESS-NEXT:    call void @_cont_AcceptHit(ptr [[SYSTEM_DATA_ALLOCA]])
; POST-PROCESS-NEXT:    [[TMP113:%.*]] = inttoptr i32 [[PAYLOAD_FCA_0_EXTRACT]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP114:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP113]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP5]], ptr addrspace(21) [[TMP114]], align 4
; POST-PROCESS-NEXT:    [[TMP115:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 4
; POST-PROCESS-NEXT:    [[TMP116:%.*]] = inttoptr i32 [[TMP115]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP117:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP116]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP9]], ptr addrspace(21) [[TMP117]], align 4
; POST-PROCESS-NEXT:    [[TMP118:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 8
; POST-PROCESS-NEXT:    [[TMP119:%.*]] = inttoptr i32 [[TMP118]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP120:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP119]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP13]], ptr addrspace(21) [[TMP120]], align 4
; POST-PROCESS-NEXT:    [[TMP121:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 12
; POST-PROCESS-NEXT:    [[TMP122:%.*]] = inttoptr i32 [[TMP121]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP123:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP122]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP17]], ptr addrspace(21) [[TMP123]], align 4
; POST-PROCESS-NEXT:    [[TMP124:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 16
; POST-PROCESS-NEXT:    [[TMP125:%.*]] = inttoptr i32 [[TMP124]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP126:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP125]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP21]], ptr addrspace(21) [[TMP126]], align 4
; POST-PROCESS-NEXT:    [[TMP127:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 20
; POST-PROCESS-NEXT:    [[TMP128:%.*]] = inttoptr i32 [[TMP127]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP129:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP128]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP25]], ptr addrspace(21) [[TMP129]], align 4
; POST-PROCESS-NEXT:    [[TMP130:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 24
; POST-PROCESS-NEXT:    [[TMP131:%.*]] = inttoptr i32 [[TMP130]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP132:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP131]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP29]], ptr addrspace(21) [[TMP132]], align 4
; POST-PROCESS-NEXT:    [[TMP133:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 28
; POST-PROCESS-NEXT:    [[TMP134:%.*]] = inttoptr i32 [[TMP133]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP135:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP134]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP33]], ptr addrspace(21) [[TMP135]], align 4
; POST-PROCESS-NEXT:    [[TMP136:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 32
; POST-PROCESS-NEXT:    [[TMP137:%.*]] = inttoptr i32 [[TMP136]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP138:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP137]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP37]], ptr addrspace(21) [[TMP138]], align 4
; POST-PROCESS-NEXT:    [[TMP139:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 36
; POST-PROCESS-NEXT:    [[TMP140:%.*]] = inttoptr i32 [[TMP139]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP141:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP140]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP41]], ptr addrspace(21) [[TMP141]], align 4
; POST-PROCESS-NEXT:    [[TMP142:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 40
; POST-PROCESS-NEXT:    [[TMP143:%.*]] = inttoptr i32 [[TMP142]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP144:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP143]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP45]], ptr addrspace(21) [[TMP144]], align 4
; POST-PROCESS-NEXT:    [[TMP145:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 44
; POST-PROCESS-NEXT:    [[TMP146:%.*]] = inttoptr i32 [[TMP145]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP147:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP146]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP49]], ptr addrspace(21) [[TMP147]], align 4
; POST-PROCESS-NEXT:    [[TMP148:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 48
; POST-PROCESS-NEXT:    [[TMP149:%.*]] = inttoptr i32 [[TMP148]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP150:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP149]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP53]], ptr addrspace(21) [[TMP150]], align 4
; POST-PROCESS-NEXT:    [[TMP151:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 52
; POST-PROCESS-NEXT:    [[TMP152:%.*]] = inttoptr i32 [[TMP151]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP153:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP152]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP57]], ptr addrspace(21) [[TMP153]], align 4
; POST-PROCESS-NEXT:    [[TMP154:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 56
; POST-PROCESS-NEXT:    [[TMP155:%.*]] = inttoptr i32 [[TMP154]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP156:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP155]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP61]], ptr addrspace(21) [[TMP156]], align 4
; POST-PROCESS-NEXT:    [[TMP157:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 60
; POST-PROCESS-NEXT:    [[TMP158:%.*]] = inttoptr i32 [[TMP157]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP159:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP158]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP65]], ptr addrspace(21) [[TMP159]], align 4
; POST-PROCESS-NEXT:    [[TMP160:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 64
; POST-PROCESS-NEXT:    [[TMP161:%.*]] = inttoptr i32 [[TMP160]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP162:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP161]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP69]], ptr addrspace(21) [[TMP162]], align 4
; POST-PROCESS-NEXT:    [[TMP163:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 68
; POST-PROCESS-NEXT:    [[TMP164:%.*]] = inttoptr i32 [[TMP163]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP165:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP164]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP73]], ptr addrspace(21) [[TMP165]], align 4
; POST-PROCESS-NEXT:    [[TMP166:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 72
; POST-PROCESS-NEXT:    [[TMP167:%.*]] = inttoptr i32 [[TMP166]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP168:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP167]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP77]], ptr addrspace(21) [[TMP168]], align 4
; POST-PROCESS-NEXT:    [[TMP169:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 76
; POST-PROCESS-NEXT:    [[TMP170:%.*]] = inttoptr i32 [[TMP169]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP171:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP170]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP81]], ptr addrspace(21) [[TMP171]], align 4
; POST-PROCESS-NEXT:    [[TMP172:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 80
; POST-PROCESS-NEXT:    [[TMP173:%.*]] = inttoptr i32 [[TMP172]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP174:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP173]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP85]], ptr addrspace(21) [[TMP174]], align 4
; POST-PROCESS-NEXT:    [[TMP175:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 84
; POST-PROCESS-NEXT:    [[TMP176:%.*]] = inttoptr i32 [[TMP175]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP177:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP176]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP89]], ptr addrspace(21) [[TMP177]], align 4
; POST-PROCESS-NEXT:    [[TMP178:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 88
; POST-PROCESS-NEXT:    [[TMP179:%.*]] = inttoptr i32 [[TMP178]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP180:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP179]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP93]], ptr addrspace(21) [[TMP180]], align 4
; POST-PROCESS-NEXT:    [[TMP181:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 92
; POST-PROCESS-NEXT:    [[TMP182:%.*]] = inttoptr i32 [[TMP181]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP183:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP182]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP97]], ptr addrspace(21) [[TMP183]], align 4
; POST-PROCESS-NEXT:    [[TMP184:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 96
; POST-PROCESS-NEXT:    [[TMP185:%.*]] = inttoptr i32 [[TMP184]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP186:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP185]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP101]], ptr addrspace(21) [[TMP186]], align 4
; POST-PROCESS-NEXT:    [[TMP187:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 100
; POST-PROCESS-NEXT:    [[TMP188:%.*]] = inttoptr i32 [[TMP187]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP189:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP188]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP105]], ptr addrspace(21) [[TMP189]], align 4
; POST-PROCESS-NEXT:    [[TMP190:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 104
; POST-PROCESS-NEXT:    [[TMP191:%.*]] = inttoptr i32 [[TMP190]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP192:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP191]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP109]], ptr addrspace(21) [[TMP192]], align 4
; POST-PROCESS-NEXT:    [[HITATTRSALLOCA_SROA_0_0_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[DOTFCA_0_EXTRACT]], i32 0
; POST-PROCESS-NEXT:    [[TMP193:%.*]] = bitcast float [[HITATTRSALLOCA_SROA_0_0_VEC_EXTRACT]] to i32
; POST-PROCESS-NEXT:    [[TMP194:%.*]] = bitcast i32 [[TMP193]] to float
; POST-PROCESS-NEXT:    [[DOTSROA_037_0_VEC_INSERT:%.*]] = insertelement <2 x float> undef, float [[TMP194]], i32 0
; POST-PROCESS-NEXT:    [[HITATTRSALLOCA_SROA_0_4_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[DOTFCA_0_EXTRACT]], i32 1
; POST-PROCESS-NEXT:    [[TMP195:%.*]] = bitcast float [[HITATTRSALLOCA_SROA_0_4_VEC_EXTRACT]] to i32
; POST-PROCESS-NEXT:    [[TMP196:%.*]] = bitcast i32 [[TMP195]] to float
; POST-PROCESS-NEXT:    [[DOTSROA_037_4_VEC_INSERT:%.*]] = insertelement <2 x float> [[DOTSROA_037_0_VEC_INSERT]], float [[TMP196]], i32 1
; POST-PROCESS-NEXT:    [[DOTFCA_0_INSERT36:%.*]] = insertvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] poison, <2 x float> [[DOTSROA_037_4_VEC_INSERT]], 0
; POST-PROCESS-NEXT:    [[TMP197:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; POST-PROCESS-NEXT:    call void @_cont_SetTriangleHitAttributes(ptr [[TMP197]], [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[DOTFCA_0_INSERT36]])
; POST-PROCESS-NEXT:    [[DOTFCA_0_0_0_0_GEP25:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0, i32 0, i32 0
; POST-PROCESS-NEXT:    [[DOTFCA_0_0_0_0_LOAD:%.*]] = load <3 x i32>, ptr [[DOTFCA_0_0_0_0_GEP25]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_0_0_0_0_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] poison, <3 x i32> [[DOTFCA_0_0_0_0_LOAD]], 0, 0, 0, 0
; POST-PROCESS-NEXT:    [[DOTFCA_0_0_1_0_GEP26:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0, i32 1, i32 0
; POST-PROCESS-NEXT:    [[DOTFCA_0_0_1_0_LOAD:%.*]] = load <2 x float>, ptr [[DOTFCA_0_0_1_0_GEP26]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_0_0_1_0_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_0_0_0_INSERT]], <2 x float> [[DOTFCA_0_0_1_0_LOAD]], 0, 0, 1, 0
; POST-PROCESS-NEXT:    [[DOTFCA_0_1_0_GEP27:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 1, i32 0
; POST-PROCESS-NEXT:    [[DOTFCA_0_1_0_LOAD:%.*]] = load float, ptr [[DOTFCA_0_1_0_GEP27]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_0_1_0_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_0_1_0_INSERT]], float [[DOTFCA_0_1_0_LOAD]], 0, 1, 0
; POST-PROCESS-NEXT:    [[DOTFCA_0_1_1_GEP28:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 1, i32 1
; POST-PROCESS-NEXT:    [[DOTFCA_0_1_1_LOAD:%.*]] = load i32, ptr [[DOTFCA_0_1_1_GEP28]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_0_1_1_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_1_0_INSERT]], i32 [[DOTFCA_0_1_1_LOAD]], 0, 1, 1
; POST-PROCESS-NEXT:    [[DOTFCA_0_2_GEP29:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 2
; POST-PROCESS-NEXT:    [[DOTFCA_0_2_LOAD:%.*]] = load <3 x float>, ptr [[DOTFCA_0_2_GEP29]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_0_2_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_1_1_INSERT]], <3 x float> [[DOTFCA_0_2_LOAD]], 0, 2
; POST-PROCESS-NEXT:    [[DOTFCA_0_3_GEP30:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 3
; POST-PROCESS-NEXT:    [[DOTFCA_0_3_LOAD:%.*]] = load <3 x float>, ptr [[DOTFCA_0_3_GEP30]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_0_3_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_2_INSERT]], <3 x float> [[DOTFCA_0_3_LOAD]], 0, 3
; POST-PROCESS-NEXT:    [[DOTFCA_0_4_GEP31:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 4
; POST-PROCESS-NEXT:    [[DOTFCA_0_4_LOAD:%.*]] = load float, ptr [[DOTFCA_0_4_GEP31]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_0_4_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_3_INSERT]], float [[DOTFCA_0_4_LOAD]], 0, 4
; POST-PROCESS-NEXT:    [[DOTFCA_0_5_GEP32:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 5
; POST-PROCESS-NEXT:    [[DOTFCA_0_5_LOAD:%.*]] = load i64, ptr [[DOTFCA_0_5_GEP32]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_0_5_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_4_INSERT]], i64 [[DOTFCA_0_5_LOAD]], 0, 5
; POST-PROCESS-NEXT:    [[DOTFCA_1_0_GEP33:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1, i32 0
; POST-PROCESS-NEXT:    [[DOTFCA_1_0_LOAD:%.*]] = load float, ptr [[DOTFCA_1_0_GEP33]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_1_0_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_5_INSERT]], float [[DOTFCA_1_0_LOAD]], 1, 0
; POST-PROCESS-NEXT:    [[DOTFCA_1_1_GEP34:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1, i32 1
; POST-PROCESS-NEXT:    [[DOTFCA_1_1_LOAD:%.*]] = load i32, ptr [[DOTFCA_1_1_GEP34]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_1_1_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_1_0_INSERT]], i32 [[DOTFCA_1_1_LOAD]], 1, 1
; POST-PROCESS-NEXT:    [[DOTFCA_0_INSERT:%.*]] = insertvalue [30 x i32] poison, i32 [[PAYLOAD_FCA_0_EXTRACT]], 0
; POST-PROCESS-NEXT:    [[DOTFCA_1_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_0_INSERT]], i32 [[PAYLOAD_FCA_1_EXTRACT]], 1
; POST-PROCESS-NEXT:    [[DOTFCA_2_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_1_INSERT]], i32 [[PAYLOAD_FCA_2_EXTRACT]], 2
; POST-PROCESS-NEXT:    [[DOTFCA_3_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_2_INSERT]], i32 [[PAYLOAD_FCA_3_EXTRACT]], 3
; POST-PROCESS-NEXT:    [[DOTFCA_4_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_3_INSERT]], i32 [[PAYLOAD_FCA_4_EXTRACT]], 4
; POST-PROCESS-NEXT:    [[DOTFCA_5_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_4_INSERT]], i32 [[PAYLOAD_FCA_5_EXTRACT]], 5
; POST-PROCESS-NEXT:    [[DOTFCA_6_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_5_INSERT]], i32 [[PAYLOAD_FCA_6_EXTRACT]], 6
; POST-PROCESS-NEXT:    [[DOTFCA_7_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_6_INSERT]], i32 [[PAYLOAD_FCA_7_EXTRACT]], 7
; POST-PROCESS-NEXT:    [[DOTFCA_8_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_7_INSERT]], i32 [[PAYLOAD_FCA_8_EXTRACT]], 8
; POST-PROCESS-NEXT:    [[DOTFCA_9_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_8_INSERT]], i32 [[PAYLOAD_FCA_9_EXTRACT]], 9
; POST-PROCESS-NEXT:    [[DOTFCA_10_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_9_INSERT]], i32 [[PAYLOAD_FCA_10_EXTRACT]], 10
; POST-PROCESS-NEXT:    [[DOTFCA_11_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_10_INSERT]], i32 [[PAYLOAD_FCA_11_EXTRACT]], 11
; POST-PROCESS-NEXT:    [[DOTFCA_12_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_11_INSERT]], i32 [[PAYLOAD_FCA_12_EXTRACT]], 12
; POST-PROCESS-NEXT:    [[DOTFCA_13_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_12_INSERT]], i32 [[PAYLOAD_FCA_13_EXTRACT]], 13
; POST-PROCESS-NEXT:    [[DOTFCA_14_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_13_INSERT]], i32 [[PAYLOAD_FCA_14_EXTRACT]], 14
; POST-PROCESS-NEXT:    [[DOTFCA_15_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_14_INSERT]], i32 [[PAYLOAD_FCA_15_EXTRACT]], 15
; POST-PROCESS-NEXT:    [[DOTFCA_16_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_15_INSERT]], i32 [[PAYLOAD_FCA_16_EXTRACT]], 16
; POST-PROCESS-NEXT:    [[DOTFCA_17_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_16_INSERT]], i32 [[PAYLOAD_FCA_17_EXTRACT]], 17
; POST-PROCESS-NEXT:    [[DOTFCA_18_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_17_INSERT]], i32 [[PAYLOAD_FCA_18_EXTRACT]], 18
; POST-PROCESS-NEXT:    [[DOTFCA_19_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_18_INSERT]], i32 [[PAYLOAD_FCA_19_EXTRACT]], 19
; POST-PROCESS-NEXT:    [[DOTFCA_20_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_19_INSERT]], i32 [[PAYLOAD_FCA_20_EXTRACT]], 20
; POST-PROCESS-NEXT:    [[DOTFCA_21_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_20_INSERT]], i32 [[PAYLOAD_FCA_21_EXTRACT]], 21
; POST-PROCESS-NEXT:    [[DOTFCA_22_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_21_INSERT]], i32 [[PAYLOAD_FCA_22_EXTRACT]], 22
; POST-PROCESS-NEXT:    [[DOTFCA_23_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_22_INSERT]], i32 [[PAYLOAD_FCA_23_EXTRACT]], 23
; POST-PROCESS-NEXT:    [[DOTFCA_24_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_23_INSERT]], i32 [[PAYLOAD_FCA_24_EXTRACT]], 24
; POST-PROCESS-NEXT:    [[DOTFCA_25_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_24_INSERT]], i32 [[PAYLOAD_FCA_25_EXTRACT]], 25
; POST-PROCESS-NEXT:    [[DOTFCA_26_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_25_INSERT]], i32 [[PAYLOAD_FCA_26_EXTRACT]], 26
; POST-PROCESS-NEXT:    [[DOTFCA_27_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_26_INSERT]], i32 [[PAYLOAD_FCA_27_EXTRACT]], 27
; POST-PROCESS-NEXT:    [[DOTFCA_28_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_27_INSERT]], i32 [[PAYLOAD_FCA_28_EXTRACT]], 28
; POST-PROCESS-NEXT:    [[DOTFCA_29_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_28_INSERT]], i32 [[PAYLOAD_FCA_29_EXTRACT]], 29
; POST-PROCESS-NEXT:    [[TMP223:%.*]] = load i32, ptr [[CSP]], align 4
; POST-PROCESS-NEXT:    call void (...) @lgc.ilcps.continue(i64 [[RETURNADDR]], i32 [[TMP223]], i64 poison, [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_1_1_INSERT]], [8 x i32] poison, [30 x i32] [[DOTFCA_29_INSERT]])
; POST-PROCESS-NEXT:    unreachable
;
;
; POST-PROCESS-LABEL: define void @ClosestHit(
; POST-PROCESS-SAME: i32 [[CSPINIT:%.*]], i64 [[RETURNADDR:%.*]], [[STRUCT_SYSTEMDATA:%.*]] [[TMP0:%.*]], [21 x i32] [[PADDING:%.*]], [30 x i32] [[PAYLOAD:%.*]]) #[[ATTR2]] !lgc.rt.shaderstage [[META24:![0-9]+]] !continuation [[META25:![0-9]+]] !continuation.stacksize [[META26:![0-9]+]] {
; POST-PROCESS-NEXT:  AllocaSpillBB:
; POST-PROCESS-NEXT:    [[CSP:%.*]] = alloca i32, align 4
; POST-PROCESS-NEXT:    store i32 [[CSPINIT]], ptr [[CSP]], align 4
; POST-PROCESS-NEXT:    [[TMP1:%.*]] = load i32, ptr [[CSP]], align 4
; POST-PROCESS-NEXT:    [[TMP2:%.*]] = add i32 [[TMP1]], 120
; POST-PROCESS-NEXT:    store i32 [[TMP2]], ptr [[CSP]], align 4
; POST-PROCESS-NEXT:    [[TMP3:%.*]] = add i32 [[TMP1]], 108
; POST-PROCESS-NEXT:    [[TMP4:%.*]] = inttoptr i32 [[TMP3]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP5:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP4]], i32 0
; POST-PROCESS-NEXT:    store i64 [[RETURNADDR]], ptr addrspace(21) [[TMP5]], align 4
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_0_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 0
; POST-PROCESS-NEXT:    [[TMP6:%.*]] = add i32 [[TMP1]], 116
; POST-PROCESS-NEXT:    [[TMP7:%.*]] = inttoptr i32 [[TMP6]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP8:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP7]], i32 0
; POST-PROCESS-NEXT:    store i32 [[PAYLOAD_FCA_0_EXTRACT]], ptr addrspace(21) [[TMP8]], align 4
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_1_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 1
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_2_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 2
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_3_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 3
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_4_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 4
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_5_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 5
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_6_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 6
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_7_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 7
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_8_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 8
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_9_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 9
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_10_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 10
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_11_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 11
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_12_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 12
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_13_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 13
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_14_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 14
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_15_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 15
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_16_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 16
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_17_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 17
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_18_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 18
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_19_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 19
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_20_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 20
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_21_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 21
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_22_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 22
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_23_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 23
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_24_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 24
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_25_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 25
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_26_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 26
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_27_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 27
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_28_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 28
; POST-PROCESS-NEXT:    [[PAYLOAD_FCA_29_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 29
; POST-PROCESS-NEXT:    [[DOTFCA_0_0_EXTRACT:%.*]] = extractvalue [[STRUCT_SYSTEMDATA]] [[TMP0]], 0, 0
; POST-PROCESS-NEXT:    [[DOTFCA_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_SYSTEMDATA]] [[TMP0]], 1, 0
; POST-PROCESS-NEXT:    [[TMP9:%.*]] = inttoptr i32 [[PAYLOAD_FCA_0_EXTRACT]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP10:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP9]], i32 0
; POST-PROCESS-NEXT:    [[TMP11:%.*]] = load i32, ptr addrspace(21) [[TMP10]], align 4
; POST-PROCESS-NEXT:    [[TMP12:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 4
; POST-PROCESS-NEXT:    [[TMP13:%.*]] = inttoptr i32 [[TMP12]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP14:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP13]], i32 0
; POST-PROCESS-NEXT:    [[TMP15:%.*]] = load i32, ptr addrspace(21) [[TMP14]], align 4
; POST-PROCESS-NEXT:    [[TMP16:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 8
; POST-PROCESS-NEXT:    [[TMP17:%.*]] = inttoptr i32 [[TMP16]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP18:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP17]], i32 0
; POST-PROCESS-NEXT:    [[TMP19:%.*]] = load i32, ptr addrspace(21) [[TMP18]], align 4
; POST-PROCESS-NEXT:    [[TMP20:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 12
; POST-PROCESS-NEXT:    [[TMP21:%.*]] = inttoptr i32 [[TMP20]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP22:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP21]], i32 0
; POST-PROCESS-NEXT:    [[TMP23:%.*]] = load i32, ptr addrspace(21) [[TMP22]], align 4
; POST-PROCESS-NEXT:    [[TMP24:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 16
; POST-PROCESS-NEXT:    [[TMP25:%.*]] = inttoptr i32 [[TMP24]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP26:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP25]], i32 0
; POST-PROCESS-NEXT:    [[TMP27:%.*]] = load i32, ptr addrspace(21) [[TMP26]], align 4
; POST-PROCESS-NEXT:    [[TMP28:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 20
; POST-PROCESS-NEXT:    [[TMP29:%.*]] = inttoptr i32 [[TMP28]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP30:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP29]], i32 0
; POST-PROCESS-NEXT:    [[TMP31:%.*]] = load i32, ptr addrspace(21) [[TMP30]], align 4
; POST-PROCESS-NEXT:    [[TMP32:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 24
; POST-PROCESS-NEXT:    [[TMP33:%.*]] = inttoptr i32 [[TMP32]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP34:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP33]], i32 0
; POST-PROCESS-NEXT:    [[TMP35:%.*]] = load i32, ptr addrspace(21) [[TMP34]], align 4
; POST-PROCESS-NEXT:    [[TMP36:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 28
; POST-PROCESS-NEXT:    [[TMP37:%.*]] = inttoptr i32 [[TMP36]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP38:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP37]], i32 0
; POST-PROCESS-NEXT:    [[TMP39:%.*]] = load i32, ptr addrspace(21) [[TMP38]], align 4
; POST-PROCESS-NEXT:    [[TMP40:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 32
; POST-PROCESS-NEXT:    [[TMP41:%.*]] = inttoptr i32 [[TMP40]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP42:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP41]], i32 0
; POST-PROCESS-NEXT:    [[TMP43:%.*]] = load i32, ptr addrspace(21) [[TMP42]], align 4
; POST-PROCESS-NEXT:    [[TMP44:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 36
; POST-PROCESS-NEXT:    [[TMP45:%.*]] = inttoptr i32 [[TMP44]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP46:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP45]], i32 0
; POST-PROCESS-NEXT:    [[TMP47:%.*]] = load i32, ptr addrspace(21) [[TMP46]], align 4
; POST-PROCESS-NEXT:    [[TMP48:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 40
; POST-PROCESS-NEXT:    [[TMP49:%.*]] = inttoptr i32 [[TMP48]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP50:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP49]], i32 0
; POST-PROCESS-NEXT:    [[TMP51:%.*]] = load i32, ptr addrspace(21) [[TMP50]], align 4
; POST-PROCESS-NEXT:    [[TMP52:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 44
; POST-PROCESS-NEXT:    [[TMP53:%.*]] = inttoptr i32 [[TMP52]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP54:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP53]], i32 0
; POST-PROCESS-NEXT:    [[TMP55:%.*]] = load i32, ptr addrspace(21) [[TMP54]], align 4
; POST-PROCESS-NEXT:    [[TMP56:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 48
; POST-PROCESS-NEXT:    [[TMP57:%.*]] = inttoptr i32 [[TMP56]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP58:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP57]], i32 0
; POST-PROCESS-NEXT:    [[TMP59:%.*]] = load i32, ptr addrspace(21) [[TMP58]], align 4
; POST-PROCESS-NEXT:    [[TMP60:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 52
; POST-PROCESS-NEXT:    [[TMP61:%.*]] = inttoptr i32 [[TMP60]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP62:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP61]], i32 0
; POST-PROCESS-NEXT:    [[TMP63:%.*]] = load i32, ptr addrspace(21) [[TMP62]], align 4
; POST-PROCESS-NEXT:    [[TMP64:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 56
; POST-PROCESS-NEXT:    [[TMP65:%.*]] = inttoptr i32 [[TMP64]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP66:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP65]], i32 0
; POST-PROCESS-NEXT:    [[TMP67:%.*]] = load i32, ptr addrspace(21) [[TMP66]], align 4
; POST-PROCESS-NEXT:    [[TMP68:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 60
; POST-PROCESS-NEXT:    [[TMP69:%.*]] = inttoptr i32 [[TMP68]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP70:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP69]], i32 0
; POST-PROCESS-NEXT:    [[TMP71:%.*]] = load i32, ptr addrspace(21) [[TMP70]], align 4
; POST-PROCESS-NEXT:    [[TMP72:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 64
; POST-PROCESS-NEXT:    [[TMP73:%.*]] = inttoptr i32 [[TMP72]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP74:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP73]], i32 0
; POST-PROCESS-NEXT:    [[TMP75:%.*]] = load i32, ptr addrspace(21) [[TMP74]], align 4
; POST-PROCESS-NEXT:    [[TMP76:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 68
; POST-PROCESS-NEXT:    [[TMP77:%.*]] = inttoptr i32 [[TMP76]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP78:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP77]], i32 0
; POST-PROCESS-NEXT:    [[TMP79:%.*]] = load i32, ptr addrspace(21) [[TMP78]], align 4
; POST-PROCESS-NEXT:    [[TMP80:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 72
; POST-PROCESS-NEXT:    [[TMP81:%.*]] = inttoptr i32 [[TMP80]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP82:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP81]], i32 0
; POST-PROCESS-NEXT:    [[TMP83:%.*]] = load i32, ptr addrspace(21) [[TMP82]], align 4
; POST-PROCESS-NEXT:    [[TMP84:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 76
; POST-PROCESS-NEXT:    [[TMP85:%.*]] = inttoptr i32 [[TMP84]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP86:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP85]], i32 0
; POST-PROCESS-NEXT:    [[TMP87:%.*]] = load i32, ptr addrspace(21) [[TMP86]], align 4
; POST-PROCESS-NEXT:    [[TMP88:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 80
; POST-PROCESS-NEXT:    [[TMP89:%.*]] = inttoptr i32 [[TMP88]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP90:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP89]], i32 0
; POST-PROCESS-NEXT:    [[TMP91:%.*]] = load i32, ptr addrspace(21) [[TMP90]], align 4
; POST-PROCESS-NEXT:    [[TMP92:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 84
; POST-PROCESS-NEXT:    [[TMP93:%.*]] = inttoptr i32 [[TMP92]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP94:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP93]], i32 0
; POST-PROCESS-NEXT:    [[TMP95:%.*]] = load i32, ptr addrspace(21) [[TMP94]], align 4
; POST-PROCESS-NEXT:    [[TMP96:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 88
; POST-PROCESS-NEXT:    [[TMP97:%.*]] = inttoptr i32 [[TMP96]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP98:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP97]], i32 0
; POST-PROCESS-NEXT:    [[TMP99:%.*]] = load i32, ptr addrspace(21) [[TMP98]], align 4
; POST-PROCESS-NEXT:    [[TMP100:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 92
; POST-PROCESS-NEXT:    [[TMP101:%.*]] = inttoptr i32 [[TMP100]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP102:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP101]], i32 0
; POST-PROCESS-NEXT:    [[TMP103:%.*]] = load i32, ptr addrspace(21) [[TMP102]], align 4
; POST-PROCESS-NEXT:    [[TMP104:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 96
; POST-PROCESS-NEXT:    [[TMP105:%.*]] = inttoptr i32 [[TMP104]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP106:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP105]], i32 0
; POST-PROCESS-NEXT:    [[TMP107:%.*]] = load i32, ptr addrspace(21) [[TMP106]], align 4
; POST-PROCESS-NEXT:    [[TMP108:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 100
; POST-PROCESS-NEXT:    [[TMP109:%.*]] = inttoptr i32 [[TMP108]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP110:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP109]], i32 0
; POST-PROCESS-NEXT:    [[TMP111:%.*]] = load i32, ptr addrspace(21) [[TMP110]], align 4
; POST-PROCESS-NEXT:    [[TMP112:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 104
; POST-PROCESS-NEXT:    [[TMP113:%.*]] = inttoptr i32 [[TMP112]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP114:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP113]], i32 0
; POST-PROCESS-NEXT:    [[TMP115:%.*]] = load i32, ptr addrspace(21) [[TMP114]], align 4
; POST-PROCESS-NEXT:    [[VAL_I_FCA_0_INSERT:%.*]] = insertvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]] poison, <2 x float> [[DOTFCA_1_0_EXTRACT]], 0
; POST-PROCESS-NEXT:    [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[VAL_I_FCA_0_INSERT]], 0
; POST-PROCESS-NEXT:    [[DOTSROA_0256_0_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT]], i32 0
; POST-PROCESS-NEXT:    [[TMP116:%.*]] = bitcast float [[DOTSROA_0256_0_VEC_EXTRACT]] to i32
; POST-PROCESS-NEXT:    [[DOTSROA_0256_4_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT]], i32 1
; POST-PROCESS-NEXT:    [[TMP117:%.*]] = bitcast float [[DOTSROA_0256_4_VEC_EXTRACT]] to i32
; POST-PROCESS-NEXT:    call void @amd.dx.setLocalRootIndex(i32 5)
; POST-PROCESS-NEXT:    [[TMP118:%.*]] = load [[DX_TYPES_HANDLE:%.*]], ptr @"\01?Scene@@3URaytracingAccelerationStructure@@A", align 4
; POST-PROCESS-NEXT:    [[TMP119:%.*]] = load [[DX_TYPES_HANDLE]], ptr @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A", align 4
; POST-PROCESS-NEXT:    [[TMP120:%.*]] = call [[DX_TYPES_HANDLE]] [[DX_OP_CREATEHANDLEFORLIB_DX_TYPES_HANDLE:@[a-zA-Z0-9_$\"\\.-]*[a-zA-Z_$\"\\.-][a-zA-Z0-9_$\"\\.-]*]](i32 160, [[DX_TYPES_HANDLE]] [[TMP118]])
; POST-PROCESS-NEXT:    [[TMP121:%.*]] = call [[DX_TYPES_HANDLE]] [[DX_OP_ANNOTATEHANDLE:@[a-zA-Z0-9_$\"\\.-]*[a-zA-Z_$\"\\.-][a-zA-Z0-9_$\"\\.-]*]](i32 216, [[DX_TYPES_HANDLE]] [[TMP120]], [[DX_TYPES_RESOURCEPROPERTIES:%.*]] { i32 16, i32 0 })
; POST-PROCESS-NEXT:    [[TMP122:%.*]] = call i64 @amd.dx.getAccelStructAddr([[DX_TYPES_HANDLE]] [[TMP121]])
; POST-PROCESS-NEXT:    [[DIS_DATA_I_FCA_0_INSERT:%.*]] = insertvalue [[STRUCT_DISPATCHSYSTEMDATA:%.*]] poison, <3 x i32> [[DOTFCA_0_0_EXTRACT]], 0
; POST-PROCESS-NEXT:    [[SYS_DATA_I:%.*]] = insertvalue [[STRUCT_SYSTEMDATA]] undef, [[STRUCT_DISPATCHSYSTEMDATA]] [[DIS_DATA_I_FCA_0_INSERT]], 0
; POST-PROCESS-NEXT:    [[TRAV_DATA_I:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA:%.*]] undef, [[STRUCT_SYSTEMDATA]] [[SYS_DATA_I]], 0
; POST-PROCESS-NEXT:    [[TMP149:%.*]] = call i64 @continuation.getAddrAndMD(ptr @ClosestHit.resume.0)
; POST-PROCESS-NEXT:    [[TRAV_DATA2_I:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I]], i64 [[TMP149]], 5
; POST-PROCESS-NEXT:    [[TMP124:%.*]] = inttoptr i32 [[TMP1]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP125:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP124]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP11]], ptr addrspace(21) [[TMP125]], align 4
; POST-PROCESS-NEXT:    [[TMP126:%.*]] = add i32 [[TMP1]], 4
; POST-PROCESS-NEXT:    [[TMP127:%.*]] = inttoptr i32 [[TMP126]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP128:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP127]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP15]], ptr addrspace(21) [[TMP128]], align 4
; POST-PROCESS-NEXT:    [[TMP129:%.*]] = add i32 [[TMP1]], 8
; POST-PROCESS-NEXT:    [[TMP130:%.*]] = inttoptr i32 [[TMP129]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP131:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP130]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP19]], ptr addrspace(21) [[TMP131]], align 4
; POST-PROCESS-NEXT:    [[TMP132:%.*]] = add i32 [[TMP1]], 12
; POST-PROCESS-NEXT:    [[TMP133:%.*]] = inttoptr i32 [[TMP132]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP134:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP133]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP23]], ptr addrspace(21) [[TMP134]], align 4
; POST-PROCESS-NEXT:    [[TMP135:%.*]] = add i32 [[TMP1]], 16
; POST-PROCESS-NEXT:    [[TMP136:%.*]] = inttoptr i32 [[TMP135]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP137:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP136]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP27]], ptr addrspace(21) [[TMP137]], align 4
; POST-PROCESS-NEXT:    [[TMP138:%.*]] = add i32 [[TMP1]], 20
; POST-PROCESS-NEXT:    [[TMP139:%.*]] = inttoptr i32 [[TMP138]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP140:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP139]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP31]], ptr addrspace(21) [[TMP140]], align 4
; POST-PROCESS-NEXT:    [[TMP141:%.*]] = add i32 [[TMP1]], 24
; POST-PROCESS-NEXT:    [[TMP142:%.*]] = inttoptr i32 [[TMP141]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP143:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP142]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP35]], ptr addrspace(21) [[TMP143]], align 4
; POST-PROCESS-NEXT:    [[TMP144:%.*]] = add i32 [[TMP1]], 28
; POST-PROCESS-NEXT:    [[TMP145:%.*]] = inttoptr i32 [[TMP144]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP146:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP145]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP39]], ptr addrspace(21) [[TMP146]], align 4
; POST-PROCESS-NEXT:    [[TMP147:%.*]] = add i32 [[TMP1]], 32
; POST-PROCESS-NEXT:    [[TMP148:%.*]] = inttoptr i32 [[TMP147]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP204:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP148]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP43]], ptr addrspace(21) [[TMP204]], align 4
; POST-PROCESS-NEXT:    [[TMP150:%.*]] = add i32 [[TMP1]], 36
; POST-PROCESS-NEXT:    [[TMP151:%.*]] = inttoptr i32 [[TMP150]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP152:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP151]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP47]], ptr addrspace(21) [[TMP152]], align 4
; POST-PROCESS-NEXT:    [[TMP153:%.*]] = add i32 [[TMP1]], 40
; POST-PROCESS-NEXT:    [[TMP154:%.*]] = inttoptr i32 [[TMP153]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP155:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP154]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP51]], ptr addrspace(21) [[TMP155]], align 4
; POST-PROCESS-NEXT:    [[TMP156:%.*]] = add i32 [[TMP1]], 44
; POST-PROCESS-NEXT:    [[TMP157:%.*]] = inttoptr i32 [[TMP156]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP158:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP157]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP55]], ptr addrspace(21) [[TMP158]], align 4
; POST-PROCESS-NEXT:    [[TMP159:%.*]] = add i32 [[TMP1]], 48
; POST-PROCESS-NEXT:    [[TMP160:%.*]] = inttoptr i32 [[TMP159]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP161:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP160]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP59]], ptr addrspace(21) [[TMP161]], align 4
; POST-PROCESS-NEXT:    [[TMP162:%.*]] = add i32 [[TMP1]], 52
; POST-PROCESS-NEXT:    [[TMP163:%.*]] = inttoptr i32 [[TMP162]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP164:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP163]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP63]], ptr addrspace(21) [[TMP164]], align 4
; POST-PROCESS-NEXT:    [[TMP165:%.*]] = add i32 [[TMP1]], 56
; POST-PROCESS-NEXT:    [[TMP166:%.*]] = inttoptr i32 [[TMP165]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP167:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP166]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP67]], ptr addrspace(21) [[TMP167]], align 4
; POST-PROCESS-NEXT:    [[TMP168:%.*]] = add i32 [[TMP1]], 60
; POST-PROCESS-NEXT:    [[TMP169:%.*]] = inttoptr i32 [[TMP168]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP170:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP169]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP71]], ptr addrspace(21) [[TMP170]], align 4
; POST-PROCESS-NEXT:    [[TMP171:%.*]] = add i32 [[TMP1]], 64
; POST-PROCESS-NEXT:    [[TMP172:%.*]] = inttoptr i32 [[TMP171]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP173:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP172]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP75]], ptr addrspace(21) [[TMP173]], align 4
; POST-PROCESS-NEXT:    [[TMP174:%.*]] = add i32 [[TMP1]], 68
; POST-PROCESS-NEXT:    [[TMP175:%.*]] = inttoptr i32 [[TMP174]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP176:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP175]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP79]], ptr addrspace(21) [[TMP176]], align 4
; POST-PROCESS-NEXT:    [[TMP177:%.*]] = add i32 [[TMP1]], 72
; POST-PROCESS-NEXT:    [[TMP178:%.*]] = inttoptr i32 [[TMP177]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP179:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP178]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP83]], ptr addrspace(21) [[TMP179]], align 4
; POST-PROCESS-NEXT:    [[TMP180:%.*]] = add i32 [[TMP1]], 76
; POST-PROCESS-NEXT:    [[TMP181:%.*]] = inttoptr i32 [[TMP180]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP182:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP181]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP87]], ptr addrspace(21) [[TMP182]], align 4
; POST-PROCESS-NEXT:    [[TMP183:%.*]] = add i32 [[TMP1]], 80
; POST-PROCESS-NEXT:    [[TMP184:%.*]] = inttoptr i32 [[TMP183]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP185:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP184]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP91]], ptr addrspace(21) [[TMP185]], align 4
; POST-PROCESS-NEXT:    [[TMP186:%.*]] = add i32 [[TMP1]], 84
; POST-PROCESS-NEXT:    [[TMP187:%.*]] = inttoptr i32 [[TMP186]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP188:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP187]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP95]], ptr addrspace(21) [[TMP188]], align 4
; POST-PROCESS-NEXT:    [[TMP189:%.*]] = add i32 [[TMP1]], 88
; POST-PROCESS-NEXT:    [[TMP190:%.*]] = inttoptr i32 [[TMP189]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP191:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP190]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP99]], ptr addrspace(21) [[TMP191]], align 4
; POST-PROCESS-NEXT:    [[TMP192:%.*]] = add i32 [[TMP1]], 92
; POST-PROCESS-NEXT:    [[TMP193:%.*]] = inttoptr i32 [[TMP192]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP194:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP193]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP103]], ptr addrspace(21) [[TMP194]], align 4
; POST-PROCESS-NEXT:    [[TMP195:%.*]] = add i32 [[TMP1]], 96
; POST-PROCESS-NEXT:    [[TMP196:%.*]] = inttoptr i32 [[TMP195]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP197:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP196]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP107]], ptr addrspace(21) [[TMP197]], align 4
; POST-PROCESS-NEXT:    [[TMP198:%.*]] = add i32 [[TMP1]], 100
; POST-PROCESS-NEXT:    [[TMP199:%.*]] = inttoptr i32 [[TMP198]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP200:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP199]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP111]], ptr addrspace(21) [[TMP200]], align 4
; POST-PROCESS-NEXT:    [[TMP201:%.*]] = add i32 [[TMP1]], 104
; POST-PROCESS-NEXT:    [[TMP202:%.*]] = inttoptr i32 [[TMP201]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP203:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP202]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP115]], ptr addrspace(21) [[TMP203]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_0_INSERT54:%.*]] = insertvalue [30 x i32] poison, i32 [[TMP1]], 0
; POST-PROCESS-NEXT:    [[DOTFCA_1_INSERT57:%.*]] = insertvalue [30 x i32] [[DOTFCA_0_INSERT54]], i32 [[PAYLOAD_FCA_1_EXTRACT]], 1
; POST-PROCESS-NEXT:    [[DOTFCA_2_INSERT60:%.*]] = insertvalue [30 x i32] [[DOTFCA_1_INSERT57]], i32 [[PAYLOAD_FCA_2_EXTRACT]], 2
; POST-PROCESS-NEXT:    [[DOTFCA_3_INSERT63:%.*]] = insertvalue [30 x i32] [[DOTFCA_2_INSERT60]], i32 [[PAYLOAD_FCA_3_EXTRACT]], 3
; POST-PROCESS-NEXT:    [[DOTFCA_4_INSERT66:%.*]] = insertvalue [30 x i32] [[DOTFCA_3_INSERT63]], i32 [[PAYLOAD_FCA_4_EXTRACT]], 4
; POST-PROCESS-NEXT:    [[DOTFCA_5_INSERT69:%.*]] = insertvalue [30 x i32] [[DOTFCA_4_INSERT66]], i32 [[PAYLOAD_FCA_5_EXTRACT]], 5
; POST-PROCESS-NEXT:    [[DOTFCA_6_INSERT72:%.*]] = insertvalue [30 x i32] [[DOTFCA_5_INSERT69]], i32 [[PAYLOAD_FCA_6_EXTRACT]], 6
; POST-PROCESS-NEXT:    [[DOTFCA_7_INSERT75:%.*]] = insertvalue [30 x i32] [[DOTFCA_6_INSERT72]], i32 [[PAYLOAD_FCA_7_EXTRACT]], 7
; POST-PROCESS-NEXT:    [[DOTFCA_8_INSERT78:%.*]] = insertvalue [30 x i32] [[DOTFCA_7_INSERT75]], i32 [[PAYLOAD_FCA_8_EXTRACT]], 8
; POST-PROCESS-NEXT:    [[DOTFCA_9_INSERT81:%.*]] = insertvalue [30 x i32] [[DOTFCA_8_INSERT78]], i32 [[PAYLOAD_FCA_9_EXTRACT]], 9
; POST-PROCESS-NEXT:    [[DOTFCA_10_INSERT84:%.*]] = insertvalue [30 x i32] [[DOTFCA_9_INSERT81]], i32 [[PAYLOAD_FCA_10_EXTRACT]], 10
; POST-PROCESS-NEXT:    [[DOTFCA_11_INSERT87:%.*]] = insertvalue [30 x i32] [[DOTFCA_10_INSERT84]], i32 [[PAYLOAD_FCA_11_EXTRACT]], 11
; POST-PROCESS-NEXT:    [[DOTFCA_12_INSERT90:%.*]] = insertvalue [30 x i32] [[DOTFCA_11_INSERT87]], i32 [[PAYLOAD_FCA_12_EXTRACT]], 12
; POST-PROCESS-NEXT:    [[DOTFCA_13_INSERT93:%.*]] = insertvalue [30 x i32] [[DOTFCA_12_INSERT90]], i32 [[PAYLOAD_FCA_13_EXTRACT]], 13
; POST-PROCESS-NEXT:    [[DOTFCA_14_INSERT96:%.*]] = insertvalue [30 x i32] [[DOTFCA_13_INSERT93]], i32 [[PAYLOAD_FCA_14_EXTRACT]], 14
; POST-PROCESS-NEXT:    [[DOTFCA_15_INSERT99:%.*]] = insertvalue [30 x i32] [[DOTFCA_14_INSERT96]], i32 [[PAYLOAD_FCA_15_EXTRACT]], 15
; POST-PROCESS-NEXT:    [[DOTFCA_16_INSERT102:%.*]] = insertvalue [30 x i32] [[DOTFCA_15_INSERT99]], i32 [[PAYLOAD_FCA_16_EXTRACT]], 16
; POST-PROCESS-NEXT:    [[DOTFCA_17_INSERT105:%.*]] = insertvalue [30 x i32] [[DOTFCA_16_INSERT102]], i32 [[PAYLOAD_FCA_17_EXTRACT]], 17
; POST-PROCESS-NEXT:    [[DOTFCA_18_INSERT108:%.*]] = insertvalue [30 x i32] [[DOTFCA_17_INSERT105]], i32 [[PAYLOAD_FCA_18_EXTRACT]], 18
; POST-PROCESS-NEXT:    [[DOTFCA_19_INSERT111:%.*]] = insertvalue [30 x i32] [[DOTFCA_18_INSERT108]], i32 [[PAYLOAD_FCA_19_EXTRACT]], 19
; POST-PROCESS-NEXT:    [[DOTFCA_20_INSERT114:%.*]] = insertvalue [30 x i32] [[DOTFCA_19_INSERT111]], i32 [[PAYLOAD_FCA_20_EXTRACT]], 20
; POST-PROCESS-NEXT:    [[DOTFCA_21_INSERT117:%.*]] = insertvalue [30 x i32] [[DOTFCA_20_INSERT114]], i32 [[PAYLOAD_FCA_21_EXTRACT]], 21
; POST-PROCESS-NEXT:    [[DOTFCA_22_INSERT120:%.*]] = insertvalue [30 x i32] [[DOTFCA_21_INSERT117]], i32 [[PAYLOAD_FCA_22_EXTRACT]], 22
; POST-PROCESS-NEXT:    [[DOTFCA_23_INSERT123:%.*]] = insertvalue [30 x i32] [[DOTFCA_22_INSERT120]], i32 [[PAYLOAD_FCA_23_EXTRACT]], 23
; POST-PROCESS-NEXT:    [[DOTFCA_24_INSERT126:%.*]] = insertvalue [30 x i32] [[DOTFCA_23_INSERT123]], i32 [[PAYLOAD_FCA_24_EXTRACT]], 24
; POST-PROCESS-NEXT:    [[DOTFCA_25_INSERT129:%.*]] = insertvalue [30 x i32] [[DOTFCA_24_INSERT126]], i32 [[PAYLOAD_FCA_25_EXTRACT]], 25
; POST-PROCESS-NEXT:    [[DOTFCA_26_INSERT132:%.*]] = insertvalue [30 x i32] [[DOTFCA_25_INSERT129]], i32 [[PAYLOAD_FCA_26_EXTRACT]], 26
; POST-PROCESS-NEXT:    [[DOTFCA_27_INSERT135:%.*]] = insertvalue [30 x i32] [[DOTFCA_26_INSERT132]], i32 [[PAYLOAD_FCA_27_EXTRACT]], 27
; POST-PROCESS-NEXT:    [[DOTFCA_28_INSERT138:%.*]] = insertvalue [30 x i32] [[DOTFCA_27_INSERT135]], i32 [[PAYLOAD_FCA_28_EXTRACT]], 28
; POST-PROCESS-NEXT:    [[DOTFCA_29_INSERT141:%.*]] = insertvalue [30 x i32] [[DOTFCA_28_INSERT138]], i32 [[PAYLOAD_FCA_29_EXTRACT]], 29
; POST-PROCESS-NEXT:    [[TMP229:%.*]] = load i32, ptr [[CSP]], align 4
; POST-PROCESS-NEXT:    call void (...) @lgc.ilcps.waitContinue(i64 4, i64 -1, i32 [[TMP229]], i64 poison, [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA2_I]], [10 x i32] poison, [30 x i32] [[DOTFCA_29_INSERT141]])
; POST-PROCESS-NEXT:    unreachable
;
;
; POST-PROCESS-LABEL: define dso_local void @ClosestHit.resume.0(
; POST-PROCESS-SAME: i32 [[CSPINIT:%.*]], i64 [[TMP0:%.*]], { [[STRUCT_DISPATCHSYSTEMDATA:%.*]], [23 x i32], [30 x i32] } [[TMP1:%.*]]) !lgc.rt.shaderstage [[META24]] !continuation [[META25]] {
; POST-PROCESS-NEXT:  entryresume.0:
; POST-PROCESS-NEXT:    [[CSP:%.*]] = alloca i32, align 4
; POST-PROCESS-NEXT:    store i32 [[CSPINIT]], ptr [[CSP]], align 4
; POST-PROCESS-NEXT:    [[TMP27:%.*]] = load i32, ptr [[CSP]], align 4
; POST-PROCESS-NEXT:    [[TMP2:%.*]] = add i32 [[TMP27]], -120
; POST-PROCESS-NEXT:    [[TMP4:%.*]] = extractvalue { [[STRUCT_DISPATCHSYSTEMDATA]], [23 x i32], [30 x i32] } [[TMP1]], 2
; POST-PROCESS-NEXT:    [[TMP3:%.*]] = extractvalue [30 x i32] [[TMP4]], 0
; POST-PROCESS-NEXT:    [[DOTFCA_1_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 1
; POST-PROCESS-NEXT:    [[DOTFCA_2_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 2
; POST-PROCESS-NEXT:    [[DOTFCA_3_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 3
; POST-PROCESS-NEXT:    [[DOTFCA_4_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 4
; POST-PROCESS-NEXT:    [[DOTFCA_5_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 5
; POST-PROCESS-NEXT:    [[DOTFCA_6_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 6
; POST-PROCESS-NEXT:    [[DOTFCA_7_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 7
; POST-PROCESS-NEXT:    [[DOTFCA_8_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 8
; POST-PROCESS-NEXT:    [[DOTFCA_9_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 9
; POST-PROCESS-NEXT:    [[DOTFCA_10_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 10
; POST-PROCESS-NEXT:    [[DOTFCA_11_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 11
; POST-PROCESS-NEXT:    [[DOTFCA_12_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 12
; POST-PROCESS-NEXT:    [[DOTFCA_13_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 13
; POST-PROCESS-NEXT:    [[DOTFCA_14_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 14
; POST-PROCESS-NEXT:    [[DOTFCA_15_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 15
; POST-PROCESS-NEXT:    [[DOTFCA_16_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 16
; POST-PROCESS-NEXT:    [[DOTFCA_17_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 17
; POST-PROCESS-NEXT:    [[DOTFCA_18_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 18
; POST-PROCESS-NEXT:    [[DOTFCA_19_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 19
; POST-PROCESS-NEXT:    [[DOTFCA_20_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 20
; POST-PROCESS-NEXT:    [[DOTFCA_21_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 21
; POST-PROCESS-NEXT:    [[DOTFCA_22_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 22
; POST-PROCESS-NEXT:    [[DOTFCA_23_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 23
; POST-PROCESS-NEXT:    [[DOTFCA_24_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 24
; POST-PROCESS-NEXT:    [[TMP22:%.*]] = extractvalue [30 x i32] [[TMP4]], 25
; POST-PROCESS-NEXT:    [[TMP23:%.*]] = extractvalue [30 x i32] [[TMP4]], 26
; POST-PROCESS-NEXT:    [[TMP24:%.*]] = extractvalue [30 x i32] [[TMP4]], 27
; POST-PROCESS-NEXT:    [[DOTFCA_28_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 28
; POST-PROCESS-NEXT:    [[DOTFCA_29_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP4]], 29
; POST-PROCESS-NEXT:    [[TMP5:%.*]] = inttoptr i32 [[TMP3]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP6:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP5]], i32 0
; POST-PROCESS-NEXT:    [[TMP29:%.*]] = load i32, ptr addrspace(21) [[TMP6]], align 4
; POST-PROCESS-NEXT:    [[TMP30:%.*]] = add i32 [[TMP3]], 4
; POST-PROCESS-NEXT:    [[TMP9:%.*]] = inttoptr i32 [[TMP30]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP10:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP9]], i32 0
; POST-PROCESS-NEXT:    [[TMP33:%.*]] = load i32, ptr addrspace(21) [[TMP10]], align 4
; POST-PROCESS-NEXT:    [[TMP34:%.*]] = add i32 [[TMP3]], 8
; POST-PROCESS-NEXT:    [[TMP13:%.*]] = inttoptr i32 [[TMP34]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP14:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP13]], i32 0
; POST-PROCESS-NEXT:    [[TMP37:%.*]] = load i32, ptr addrspace(21) [[TMP14]], align 4
; POST-PROCESS-NEXT:    [[TMP38:%.*]] = add i32 [[TMP3]], 12
; POST-PROCESS-NEXT:    [[TMP17:%.*]] = inttoptr i32 [[TMP38]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP18:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP17]], i32 0
; POST-PROCESS-NEXT:    [[TMP41:%.*]] = load i32, ptr addrspace(21) [[TMP18]], align 4
; POST-PROCESS-NEXT:    [[TMP42:%.*]] = add i32 [[TMP3]], 16
; POST-PROCESS-NEXT:    [[TMP21:%.*]] = inttoptr i32 [[TMP42]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP28:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP21]], i32 0
; POST-PROCESS-NEXT:    [[TMP45:%.*]] = load i32, ptr addrspace(21) [[TMP28]], align 4
; POST-PROCESS-NEXT:    [[TMP46:%.*]] = add i32 [[TMP3]], 20
; POST-PROCESS-NEXT:    [[TMP25:%.*]] = inttoptr i32 [[TMP46]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP26:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP25]], i32 0
; POST-PROCESS-NEXT:    [[TMP49:%.*]] = load i32, ptr addrspace(21) [[TMP26]], align 4
; POST-PROCESS-NEXT:    [[TMP50:%.*]] = add i32 [[TMP3]], 24
; POST-PROCESS-NEXT:    [[TMP31:%.*]] = inttoptr i32 [[TMP50]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP32:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP31]], i32 0
; POST-PROCESS-NEXT:    [[TMP53:%.*]] = load i32, ptr addrspace(21) [[TMP32]], align 4
; POST-PROCESS-NEXT:    [[TMP54:%.*]] = add i32 [[TMP3]], 28
; POST-PROCESS-NEXT:    [[TMP35:%.*]] = inttoptr i32 [[TMP54]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP36:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP35]], i32 0
; POST-PROCESS-NEXT:    [[TMP57:%.*]] = load i32, ptr addrspace(21) [[TMP36]], align 4
; POST-PROCESS-NEXT:    [[TMP58:%.*]] = add i32 [[TMP3]], 32
; POST-PROCESS-NEXT:    [[TMP39:%.*]] = inttoptr i32 [[TMP58]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP40:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP39]], i32 0
; POST-PROCESS-NEXT:    [[TMP61:%.*]] = load i32, ptr addrspace(21) [[TMP40]], align 4
; POST-PROCESS-NEXT:    [[TMP62:%.*]] = add i32 [[TMP3]], 36
; POST-PROCESS-NEXT:    [[TMP43:%.*]] = inttoptr i32 [[TMP62]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP44:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP43]], i32 0
; POST-PROCESS-NEXT:    [[TMP65:%.*]] = load i32, ptr addrspace(21) [[TMP44]], align 4
; POST-PROCESS-NEXT:    [[TMP66:%.*]] = add i32 [[TMP3]], 40
; POST-PROCESS-NEXT:    [[TMP47:%.*]] = inttoptr i32 [[TMP66]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP48:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP47]], i32 0
; POST-PROCESS-NEXT:    [[TMP69:%.*]] = load i32, ptr addrspace(21) [[TMP48]], align 4
; POST-PROCESS-NEXT:    [[TMP70:%.*]] = add i32 [[TMP3]], 44
; POST-PROCESS-NEXT:    [[TMP51:%.*]] = inttoptr i32 [[TMP70]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP52:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP51]], i32 0
; POST-PROCESS-NEXT:    [[TMP73:%.*]] = load i32, ptr addrspace(21) [[TMP52]], align 4
; POST-PROCESS-NEXT:    [[TMP74:%.*]] = add i32 [[TMP3]], 48
; POST-PROCESS-NEXT:    [[TMP55:%.*]] = inttoptr i32 [[TMP74]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP56:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP55]], i32 0
; POST-PROCESS-NEXT:    [[TMP77:%.*]] = load i32, ptr addrspace(21) [[TMP56]], align 4
; POST-PROCESS-NEXT:    [[TMP78:%.*]] = add i32 [[TMP3]], 52
; POST-PROCESS-NEXT:    [[TMP59:%.*]] = inttoptr i32 [[TMP78]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP60:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP59]], i32 0
; POST-PROCESS-NEXT:    [[TMP81:%.*]] = load i32, ptr addrspace(21) [[TMP60]], align 4
; POST-PROCESS-NEXT:    [[TMP82:%.*]] = add i32 [[TMP3]], 56
; POST-PROCESS-NEXT:    [[TMP63:%.*]] = inttoptr i32 [[TMP82]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP64:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP63]], i32 0
; POST-PROCESS-NEXT:    [[TMP85:%.*]] = load i32, ptr addrspace(21) [[TMP64]], align 4
; POST-PROCESS-NEXT:    [[TMP86:%.*]] = add i32 [[TMP3]], 60
; POST-PROCESS-NEXT:    [[TMP67:%.*]] = inttoptr i32 [[TMP86]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP68:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP67]], i32 0
; POST-PROCESS-NEXT:    [[TMP89:%.*]] = load i32, ptr addrspace(21) [[TMP68]], align 4
; POST-PROCESS-NEXT:    [[TMP90:%.*]] = add i32 [[TMP3]], 64
; POST-PROCESS-NEXT:    [[TMP71:%.*]] = inttoptr i32 [[TMP90]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP72:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP71]], i32 0
; POST-PROCESS-NEXT:    [[TMP93:%.*]] = load i32, ptr addrspace(21) [[TMP72]], align 4
; POST-PROCESS-NEXT:    [[TMP94:%.*]] = add i32 [[TMP3]], 68
; POST-PROCESS-NEXT:    [[TMP75:%.*]] = inttoptr i32 [[TMP94]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP76:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP75]], i32 0
; POST-PROCESS-NEXT:    [[TMP97:%.*]] = load i32, ptr addrspace(21) [[TMP76]], align 4
; POST-PROCESS-NEXT:    [[TMP98:%.*]] = add i32 [[TMP3]], 72
; POST-PROCESS-NEXT:    [[TMP79:%.*]] = inttoptr i32 [[TMP98]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP80:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP79]], i32 0
; POST-PROCESS-NEXT:    [[TMP101:%.*]] = load i32, ptr addrspace(21) [[TMP80]], align 4
; POST-PROCESS-NEXT:    [[TMP102:%.*]] = add i32 [[TMP3]], 76
; POST-PROCESS-NEXT:    [[TMP83:%.*]] = inttoptr i32 [[TMP102]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP84:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP83]], i32 0
; POST-PROCESS-NEXT:    [[TMP105:%.*]] = load i32, ptr addrspace(21) [[TMP84]], align 4
; POST-PROCESS-NEXT:    [[TMP106:%.*]] = add i32 [[TMP3]], 80
; POST-PROCESS-NEXT:    [[TMP87:%.*]] = inttoptr i32 [[TMP106]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP88:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP87]], i32 0
; POST-PROCESS-NEXT:    [[TMP109:%.*]] = load i32, ptr addrspace(21) [[TMP88]], align 4
; POST-PROCESS-NEXT:    [[TMP110:%.*]] = add i32 [[TMP3]], 84
; POST-PROCESS-NEXT:    [[TMP91:%.*]] = inttoptr i32 [[TMP110]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP92:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP91]], i32 0
; POST-PROCESS-NEXT:    [[TMP113:%.*]] = load i32, ptr addrspace(21) [[TMP92]], align 4
; POST-PROCESS-NEXT:    [[TMP114:%.*]] = add i32 [[TMP3]], 88
; POST-PROCESS-NEXT:    [[TMP95:%.*]] = inttoptr i32 [[TMP114]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP96:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP95]], i32 0
; POST-PROCESS-NEXT:    [[TMP117:%.*]] = load i32, ptr addrspace(21) [[TMP96]], align 4
; POST-PROCESS-NEXT:    [[TMP118:%.*]] = add i32 [[TMP3]], 92
; POST-PROCESS-NEXT:    [[TMP99:%.*]] = inttoptr i32 [[TMP118]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP100:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP99]], i32 0
; POST-PROCESS-NEXT:    [[TMP121:%.*]] = load i32, ptr addrspace(21) [[TMP100]], align 4
; POST-PROCESS-NEXT:    [[TMP122:%.*]] = add i32 [[TMP3]], 96
; POST-PROCESS-NEXT:    [[TMP103:%.*]] = inttoptr i32 [[TMP122]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP104:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP103]], i32 0
; POST-PROCESS-NEXT:    [[TMP125:%.*]] = load i32, ptr addrspace(21) [[TMP104]], align 4
; POST-PROCESS-NEXT:    [[TMP126:%.*]] = add i32 [[TMP3]], 100
; POST-PROCESS-NEXT:    [[TMP107:%.*]] = inttoptr i32 [[TMP126]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP108:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP107]], i32 0
; POST-PROCESS-NEXT:    [[TMP129:%.*]] = load i32, ptr addrspace(21) [[TMP108]], align 4
; POST-PROCESS-NEXT:    [[TMP130:%.*]] = add i32 [[TMP3]], 104
; POST-PROCESS-NEXT:    [[TMP111:%.*]] = inttoptr i32 [[TMP130]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP116:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP111]], i32 0
; POST-PROCESS-NEXT:    [[TMP133:%.*]] = load i32, ptr addrspace(21) [[TMP116]], align 4
; POST-PROCESS-NEXT:    [[TMP112:%.*]] = extractvalue { [[STRUCT_DISPATCHSYSTEMDATA]], [23 x i32], [30 x i32] } [[TMP1]], 0
; POST-PROCESS-NEXT:    [[DOTFCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_DISPATCHSYSTEMDATA]] [[TMP112]], 0
; POST-PROCESS-NEXT:    call void @amd.dx.setLocalRootIndex(i32 5)
; POST-PROCESS-NEXT:    [[TMP135:%.*]] = add i32 [[TMP2]], 116
; POST-PROCESS-NEXT:    [[TMP120:%.*]] = inttoptr i32 [[TMP135]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP115:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP120]], i32 0
; POST-PROCESS-NEXT:    [[TMP141:%.*]] = load i32, ptr addrspace(21) [[TMP115]], align 4
; POST-PROCESS-NEXT:    [[TMP138:%.*]] = add i32 [[TMP2]], 108
; POST-PROCESS-NEXT:    [[TMP123:%.*]] = inttoptr i32 [[TMP138]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP140:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP123]], i32 0
; POST-PROCESS-NEXT:    [[RETURNADDR_RELOAD:%.*]] = load i64, ptr addrspace(21) [[TMP140]], align 4
; POST-PROCESS-NEXT:    [[TMP119:%.*]] = inttoptr i32 [[TMP141]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP143:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP119]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP29]], ptr addrspace(21) [[TMP143]], align 4
; POST-PROCESS-NEXT:    [[TMP144:%.*]] = add i32 [[TMP141]], 4
; POST-PROCESS-NEXT:    [[TMP124:%.*]] = inttoptr i32 [[TMP144]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP146:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP124]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP33]], ptr addrspace(21) [[TMP146]], align 4
; POST-PROCESS-NEXT:    [[TMP147:%.*]] = add i32 [[TMP141]], 8
; POST-PROCESS-NEXT:    [[TMP127:%.*]] = inttoptr i32 [[TMP147]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP149:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP127]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP37]], ptr addrspace(21) [[TMP149]], align 4
; POST-PROCESS-NEXT:    [[TMP150:%.*]] = add i32 [[TMP141]], 12
; POST-PROCESS-NEXT:    [[TMP128:%.*]] = inttoptr i32 [[TMP150]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP152:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP128]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP41]], ptr addrspace(21) [[TMP152]], align 4
; POST-PROCESS-NEXT:    [[TMP153:%.*]] = add i32 [[TMP141]], 16
; POST-PROCESS-NEXT:    [[TMP131:%.*]] = inttoptr i32 [[TMP153]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP155:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP131]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP45]], ptr addrspace(21) [[TMP155]], align 4
; POST-PROCESS-NEXT:    [[TMP156:%.*]] = add i32 [[TMP141]], 20
; POST-PROCESS-NEXT:    [[TMP134:%.*]] = inttoptr i32 [[TMP156]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP158:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP134]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP49]], ptr addrspace(21) [[TMP158]], align 4
; POST-PROCESS-NEXT:    [[TMP159:%.*]] = add i32 [[TMP141]], 24
; POST-PROCESS-NEXT:    [[TMP137:%.*]] = inttoptr i32 [[TMP159]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP161:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP137]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP53]], ptr addrspace(21) [[TMP161]], align 4
; POST-PROCESS-NEXT:    [[TMP162:%.*]] = add i32 [[TMP141]], 28
; POST-PROCESS-NEXT:    [[TMP142:%.*]] = inttoptr i32 [[TMP162]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP164:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP142]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP57]], ptr addrspace(21) [[TMP164]], align 4
; POST-PROCESS-NEXT:    [[TMP165:%.*]] = add i32 [[TMP141]], 32
; POST-PROCESS-NEXT:    [[TMP145:%.*]] = inttoptr i32 [[TMP165]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP167:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP145]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP61]], ptr addrspace(21) [[TMP167]], align 4
; POST-PROCESS-NEXT:    [[TMP168:%.*]] = add i32 [[TMP141]], 36
; POST-PROCESS-NEXT:    [[TMP148:%.*]] = inttoptr i32 [[TMP168]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP170:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP148]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP65]], ptr addrspace(21) [[TMP170]], align 4
; POST-PROCESS-NEXT:    [[TMP171:%.*]] = add i32 [[TMP141]], 40
; POST-PROCESS-NEXT:    [[TMP151:%.*]] = inttoptr i32 [[TMP171]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP173:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP151]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP69]], ptr addrspace(21) [[TMP173]], align 4
; POST-PROCESS-NEXT:    [[TMP174:%.*]] = add i32 [[TMP141]], 44
; POST-PROCESS-NEXT:    [[TMP154:%.*]] = inttoptr i32 [[TMP174]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP176:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP154]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP73]], ptr addrspace(21) [[TMP176]], align 4
; POST-PROCESS-NEXT:    [[TMP177:%.*]] = add i32 [[TMP141]], 48
; POST-PROCESS-NEXT:    [[TMP157:%.*]] = inttoptr i32 [[TMP177]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP179:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP157]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP77]], ptr addrspace(21) [[TMP179]], align 4
; POST-PROCESS-NEXT:    [[TMP180:%.*]] = add i32 [[TMP141]], 52
; POST-PROCESS-NEXT:    [[TMP160:%.*]] = inttoptr i32 [[TMP180]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP182:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP160]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP81]], ptr addrspace(21) [[TMP182]], align 4
; POST-PROCESS-NEXT:    [[TMP183:%.*]] = add i32 [[TMP141]], 56
; POST-PROCESS-NEXT:    [[TMP163:%.*]] = inttoptr i32 [[TMP183]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP185:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP163]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP85]], ptr addrspace(21) [[TMP185]], align 4
; POST-PROCESS-NEXT:    [[TMP186:%.*]] = add i32 [[TMP141]], 60
; POST-PROCESS-NEXT:    [[TMP166:%.*]] = inttoptr i32 [[TMP186]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP188:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP166]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP89]], ptr addrspace(21) [[TMP188]], align 4
; POST-PROCESS-NEXT:    [[TMP189:%.*]] = add i32 [[TMP141]], 64
; POST-PROCESS-NEXT:    [[TMP169:%.*]] = inttoptr i32 [[TMP189]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP191:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP169]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP93]], ptr addrspace(21) [[TMP191]], align 4
; POST-PROCESS-NEXT:    [[TMP192:%.*]] = add i32 [[TMP141]], 68
; POST-PROCESS-NEXT:    [[TMP172:%.*]] = inttoptr i32 [[TMP192]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP194:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP172]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP97]], ptr addrspace(21) [[TMP194]], align 4
; POST-PROCESS-NEXT:    [[TMP195:%.*]] = add i32 [[TMP141]], 72
; POST-PROCESS-NEXT:    [[TMP175:%.*]] = inttoptr i32 [[TMP195]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP197:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP175]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP101]], ptr addrspace(21) [[TMP197]], align 4
; POST-PROCESS-NEXT:    [[TMP198:%.*]] = add i32 [[TMP141]], 76
; POST-PROCESS-NEXT:    [[TMP178:%.*]] = inttoptr i32 [[TMP198]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP200:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP178]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP105]], ptr addrspace(21) [[TMP200]], align 4
; POST-PROCESS-NEXT:    [[TMP201:%.*]] = add i32 [[TMP141]], 80
; POST-PROCESS-NEXT:    [[TMP181:%.*]] = inttoptr i32 [[TMP201]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP203:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP181]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP109]], ptr addrspace(21) [[TMP203]], align 4
; POST-PROCESS-NEXT:    [[TMP204:%.*]] = add i32 [[TMP141]], 84
; POST-PROCESS-NEXT:    [[TMP184:%.*]] = inttoptr i32 [[TMP204]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP206:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP184]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP113]], ptr addrspace(21) [[TMP206]], align 4
; POST-PROCESS-NEXT:    [[TMP207:%.*]] = add i32 [[TMP141]], 88
; POST-PROCESS-NEXT:    [[TMP187:%.*]] = inttoptr i32 [[TMP207]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP209:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP187]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP117]], ptr addrspace(21) [[TMP209]], align 4
; POST-PROCESS-NEXT:    [[TMP210:%.*]] = add i32 [[TMP141]], 92
; POST-PROCESS-NEXT:    [[TMP190:%.*]] = inttoptr i32 [[TMP210]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP212:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP190]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP121]], ptr addrspace(21) [[TMP212]], align 4
; POST-PROCESS-NEXT:    [[TMP213:%.*]] = add i32 [[TMP141]], 96
; POST-PROCESS-NEXT:    [[TMP193:%.*]] = inttoptr i32 [[TMP213]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP215:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP193]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP125]], ptr addrspace(21) [[TMP215]], align 4
; POST-PROCESS-NEXT:    [[TMP216:%.*]] = add i32 [[TMP141]], 100
; POST-PROCESS-NEXT:    [[TMP196:%.*]] = inttoptr i32 [[TMP216]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP218:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP196]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP129]], ptr addrspace(21) [[TMP218]], align 4
; POST-PROCESS-NEXT:    [[TMP219:%.*]] = add i32 [[TMP141]], 104
; POST-PROCESS-NEXT:    [[TMP199:%.*]] = inttoptr i32 [[TMP219]] to ptr addrspace(21)
; POST-PROCESS-NEXT:    [[TMP221:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP199]], i32 0
; POST-PROCESS-NEXT:    store i32 [[TMP133]], ptr addrspace(21) [[TMP221]], align 4
; POST-PROCESS-NEXT:    [[DOTFCA_0_INSERT:%.*]] = insertvalue [[STRUCT_DISPATCHSYSTEMDATA]] poison, <3 x i32> [[DOTFCA_0_EXTRACT]], 0
; POST-PROCESS-NEXT:    [[DOTFCA_0_INSERT1:%.*]] = insertvalue [30 x i32] poison, i32 [[TMP141]], 0
; POST-PROCESS-NEXT:    [[DOTFCA_1_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_0_INSERT1]], i32 [[DOTFCA_1_EXTRACT]], 1
; POST-PROCESS-NEXT:    [[DOTFCA_2_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_1_INSERT]], i32 [[DOTFCA_2_EXTRACT]], 2
; POST-PROCESS-NEXT:    [[DOTFCA_3_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_2_INSERT]], i32 [[DOTFCA_3_EXTRACT]], 3
; POST-PROCESS-NEXT:    [[DOTFCA_4_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_3_INSERT]], i32 [[DOTFCA_4_EXTRACT]], 4
; POST-PROCESS-NEXT:    [[DOTFCA_5_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_4_INSERT]], i32 [[DOTFCA_5_EXTRACT]], 5
; POST-PROCESS-NEXT:    [[DOTFCA_6_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_5_INSERT]], i32 [[DOTFCA_6_EXTRACT]], 6
; POST-PROCESS-NEXT:    [[DOTFCA_7_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_6_INSERT]], i32 [[DOTFCA_7_EXTRACT]], 7
; POST-PROCESS-NEXT:    [[DOTFCA_8_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_7_INSERT]], i32 [[DOTFCA_8_EXTRACT]], 8
; POST-PROCESS-NEXT:    [[DOTFCA_9_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_8_INSERT]], i32 [[DOTFCA_9_EXTRACT]], 9
; POST-PROCESS-NEXT:    [[DOTFCA_10_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_9_INSERT]], i32 [[DOTFCA_10_EXTRACT]], 10
; POST-PROCESS-NEXT:    [[DOTFCA_11_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_10_INSERT]], i32 [[DOTFCA_11_EXTRACT]], 11
; POST-PROCESS-NEXT:    [[DOTFCA_12_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_11_INSERT]], i32 [[DOTFCA_12_EXTRACT]], 12
; POST-PROCESS-NEXT:    [[DOTFCA_13_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_12_INSERT]], i32 [[DOTFCA_13_EXTRACT]], 13
; POST-PROCESS-NEXT:    [[DOTFCA_14_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_13_INSERT]], i32 [[DOTFCA_14_EXTRACT]], 14
; POST-PROCESS-NEXT:    [[DOTFCA_15_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_14_INSERT]], i32 [[DOTFCA_15_EXTRACT]], 15
; POST-PROCESS-NEXT:    [[DOTFCA_16_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_15_INSERT]], i32 [[DOTFCA_16_EXTRACT]], 16
; POST-PROCESS-NEXT:    [[DOTFCA_17_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_16_INSERT]], i32 [[DOTFCA_17_EXTRACT]], 17
; POST-PROCESS-NEXT:    [[DOTFCA_18_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_17_INSERT]], i32 [[DOTFCA_18_EXTRACT]], 18
; POST-PROCESS-NEXT:    [[DOTFCA_19_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_18_INSERT]], i32 [[DOTFCA_19_EXTRACT]], 19
; POST-PROCESS-NEXT:    [[DOTFCA_20_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_19_INSERT]], i32 [[DOTFCA_20_EXTRACT]], 20
; POST-PROCESS-NEXT:    [[DOTFCA_21_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_20_INSERT]], i32 [[DOTFCA_21_EXTRACT]], 21
; POST-PROCESS-NEXT:    [[DOTFCA_22_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_21_INSERT]], i32 [[DOTFCA_22_EXTRACT]], 22
; POST-PROCESS-NEXT:    [[DOTFCA_23_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_22_INSERT]], i32 [[DOTFCA_23_EXTRACT]], 23
; POST-PROCESS-NEXT:    [[DOTFCA_24_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_23_INSERT]], i32 [[DOTFCA_24_EXTRACT]], 24
; POST-PROCESS-NEXT:    [[DOTFCA_25_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_24_INSERT]], i32 [[TMP22]], 25
; POST-PROCESS-NEXT:    [[DOTFCA_26_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_25_INSERT]], i32 [[TMP23]], 26
; POST-PROCESS-NEXT:    [[DOTFCA_27_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_26_INSERT]], i32 [[TMP24]], 27
; POST-PROCESS-NEXT:    [[DOTFCA_28_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_27_INSERT]], i32 [[DOTFCA_28_EXTRACT]], 28
; POST-PROCESS-NEXT:    [[DOTFCA_29_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_28_INSERT]], i32 [[DOTFCA_29_EXTRACT]], 29
; POST-PROCESS-NEXT:    [[TMP222:%.*]] = load i32, ptr [[CSP]], align 4
; POST-PROCESS-NEXT:    [[TMP223:%.*]] = add i32 [[TMP222]], -120
; POST-PROCESS-NEXT:    store i32 [[TMP223]], ptr [[CSP]], align 4
; POST-PROCESS-NEXT:    [[TMP224:%.*]] = load i32, ptr [[CSP]], align 4
; POST-PROCESS-NEXT:    call void (...) @lgc.ilcps.continue(i64 [[RETURNADDR_RELOAD]], i32 [[TMP224]], i64 poison, [[STRUCT_DISPATCHSYSTEMDATA]] [[DOTFCA_0_INSERT]], [23 x i32] poison, [30 x i32] [[DOTFCA_29_INSERT]])
; POST-PROCESS-NEXT:    unreachable
;
;
; POST-PROCESS-GLOBAL-LABEL: define %struct.BuiltInTriangleIntersectionAttributes @_cont_GetTriangleHitAttributes(
; POST-PROCESS-GLOBAL-SAME: ptr [[DATA:%.*]]) #[[ATTR0:[0-9]+]] {
; POST-PROCESS-GLOBAL-NEXT:    [[ADDR:%.*]] = getelementptr [[STRUCT_SYSTEMDATA:%.*]], ptr [[DATA]], i32 0, i32 1
; POST-PROCESS-GLOBAL-NEXT:    [[VAL:%.*]] = load [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]], ptr [[ADDR]], align 4
; POST-PROCESS-GLOBAL-NEXT:    ret [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[VAL]]
;
;
; POST-PROCESS-GLOBAL-LABEL: define i32 @_cont_GetLocalRootIndex(
; POST-PROCESS-GLOBAL-SAME: ptr [[DATA:%.*]]) #[[ATTR0]] {
; POST-PROCESS-GLOBAL-NEXT:    ret i32 5
;
;
; POST-PROCESS-GLOBAL-LABEL: define void @main(
; POST-PROCESS-GLOBAL-SAME: i32 [[CSPINIT:%.*]], i64 [[RETURNADDR:%.*]], [[STRUCT_DISPATCHSYSTEMDATA:%.*]] [[TMP0:%.*]]) !lgc.rt.shaderstage [[META8:![0-9]+]] !continuation.entry [[META19:![0-9]+]] !continuation [[META20:![0-9]+]] !continuation.stacksize [[META21:![0-9]+]] {
; POST-PROCESS-GLOBAL-NEXT:  AllocaSpillBB:
; POST-PROCESS-GLOBAL-NEXT:    [[CSP:%.*]] = alloca i32, align 4
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[CSPINIT]], ptr [[CSP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP1:%.*]] = call i64 @_cont_GetContinuationStackGlobalMemBase()
; POST-PROCESS-GLOBAL-NEXT:    [[TMP2:%.*]] = inttoptr i64 [[TMP1]] to ptr addrspace(22)
; POST-PROCESS-GLOBAL-NEXT:    [[TMP3:%.*]] = load i32, ptr [[CSP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP4:%.*]] = add i32 [[TMP3]], 108
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP4]], ptr [[CSP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_EXTRACT56:%.*]] = extractvalue [[STRUCT_DISPATCHSYSTEMDATA]] [[TMP0]], 0
; POST-PROCESS-GLOBAL-NEXT:    call void @amd.dx.setLocalRootIndex(i32 0)
; POST-PROCESS-GLOBAL-NEXT:    [[TMP5:%.*]] = load [[DX_TYPES_HANDLE:%.*]], ptr @"\01?Scene@@3URaytracingAccelerationStructure@@A", align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP6:%.*]] = load [[DX_TYPES_HANDLE]], ptr @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A", align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP7:%.*]] = call [[DX_TYPES_HANDLE]] [[DX_OP_CREATEHANDLEFORLIB_DX_TYPES_HANDLE:@[a-zA-Z0-9_$\"\\.-]*[a-zA-Z_$\"\\.-][a-zA-Z0-9_$\"\\.-]*]](i32 160, [[DX_TYPES_HANDLE]] [[TMP5]])
; POST-PROCESS-GLOBAL-NEXT:    [[TMP8:%.*]] = call [[DX_TYPES_HANDLE]] [[DX_OP_ANNOTATEHANDLE:@[a-zA-Z0-9_$\"\\.-]*[a-zA-Z_$\"\\.-][a-zA-Z0-9_$\"\\.-]*]](i32 216, [[DX_TYPES_HANDLE]] [[TMP7]], [[DX_TYPES_RESOURCEPROPERTIES:%.*]] { i32 16, i32 0 })
; POST-PROCESS-GLOBAL-NEXT:    [[TMP9:%.*]] = call i64 @amd.dx.getAccelStructAddr([[DX_TYPES_HANDLE]] [[TMP8]])
; POST-PROCESS-GLOBAL-NEXT:    [[DIS_DATA_I_FCA_0_INSERT:%.*]] = insertvalue [[STRUCT_DISPATCHSYSTEMDATA]] poison, <3 x i32> [[DOTFCA_0_EXTRACT56]], 0
; POST-PROCESS-GLOBAL-NEXT:    [[SYS_DATA_I:%.*]] = insertvalue [[STRUCT_SYSTEMDATA:%.*]] undef, [[STRUCT_DISPATCHSYSTEMDATA]] [[DIS_DATA_I_FCA_0_INSERT]], 0
; POST-PROCESS-GLOBAL-NEXT:    [[TRAV_DATA_I:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA:%.*]] undef, [[STRUCT_SYSTEMDATA]] [[SYS_DATA_I]], 0
; POST-PROCESS-GLOBAL-NEXT:    [[TMP11:%.*]] = call i64 @continuation.getAddrAndMD(ptr @main.resume.0)
; POST-PROCESS-GLOBAL-NEXT:    [[TRAV_DATA2_I:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I]], i64 [[TMP11]], 5
; POST-PROCESS-GLOBAL-NEXT:    [[TMP12:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP3]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP12]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP13:%.*]] = add i32 [[TMP3]], 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP14:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP13]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP14]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP15:%.*]] = add i32 [[TMP3]], 8
; POST-PROCESS-GLOBAL-NEXT:    [[TMP16:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP15]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP16]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP17:%.*]] = add i32 [[TMP3]], 12
; POST-PROCESS-GLOBAL-NEXT:    [[TMP18:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP17]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP18]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP19:%.*]] = add i32 [[TMP3]], 16
; POST-PROCESS-GLOBAL-NEXT:    [[TMP20:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP19]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP20]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP21:%.*]] = add i32 [[TMP3]], 20
; POST-PROCESS-GLOBAL-NEXT:    [[TMP22:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP21]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP22]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP23:%.*]] = add i32 [[TMP3]], 24
; POST-PROCESS-GLOBAL-NEXT:    [[TMP24:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP23]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP24]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP25:%.*]] = add i32 [[TMP3]], 28
; POST-PROCESS-GLOBAL-NEXT:    [[TMP26:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP25]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP26]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP27:%.*]] = add i32 [[TMP3]], 32
; POST-PROCESS-GLOBAL-NEXT:    [[TMP28:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP27]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP28]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP29:%.*]] = add i32 [[TMP3]], 36
; POST-PROCESS-GLOBAL-NEXT:    [[TMP30:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP29]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP30]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP31:%.*]] = add i32 [[TMP3]], 40
; POST-PROCESS-GLOBAL-NEXT:    [[TMP32:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP31]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP32]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP33:%.*]] = add i32 [[TMP3]], 44
; POST-PROCESS-GLOBAL-NEXT:    [[TMP34:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP33]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP34]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP35:%.*]] = add i32 [[TMP3]], 48
; POST-PROCESS-GLOBAL-NEXT:    [[TMP36:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP35]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP36]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP37:%.*]] = add i32 [[TMP3]], 52
; POST-PROCESS-GLOBAL-NEXT:    [[TMP38:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP37]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP38]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP39:%.*]] = add i32 [[TMP3]], 56
; POST-PROCESS-GLOBAL-NEXT:    [[TMP40:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP39]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP40]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP41:%.*]] = add i32 [[TMP3]], 60
; POST-PROCESS-GLOBAL-NEXT:    [[TMP42:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP41]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP42]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP43:%.*]] = add i32 [[TMP3]], 64
; POST-PROCESS-GLOBAL-NEXT:    [[TMP44:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP43]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP44]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP45:%.*]] = add i32 [[TMP3]], 68
; POST-PROCESS-GLOBAL-NEXT:    [[TMP46:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP45]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP46]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP47:%.*]] = add i32 [[TMP3]], 72
; POST-PROCESS-GLOBAL-NEXT:    [[TMP48:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP47]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP48]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP49:%.*]] = add i32 [[TMP3]], 76
; POST-PROCESS-GLOBAL-NEXT:    [[TMP50:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP49]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP50]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP51:%.*]] = add i32 [[TMP3]], 80
; POST-PROCESS-GLOBAL-NEXT:    [[TMP52:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP51]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP52]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP53:%.*]] = add i32 [[TMP3]], 84
; POST-PROCESS-GLOBAL-NEXT:    [[TMP54:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP53]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP54]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP55:%.*]] = add i32 [[TMP3]], 88
; POST-PROCESS-GLOBAL-NEXT:    [[TMP56:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP55]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP56]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP57:%.*]] = add i32 [[TMP3]], 92
; POST-PROCESS-GLOBAL-NEXT:    [[TMP58:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP57]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP58]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP59:%.*]] = add i32 [[TMP3]], 96
; POST-PROCESS-GLOBAL-NEXT:    [[TMP60:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP59]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP60]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP61:%.*]] = add i32 [[TMP3]], 100
; POST-PROCESS-GLOBAL-NEXT:    [[TMP62:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP61]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP62]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP63:%.*]] = add i32 [[TMP3]], 104
; POST-PROCESS-GLOBAL-NEXT:    [[TMP65:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP63]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 undef, ptr addrspace(22) [[TMP65]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_INSERT:%.*]] = insertvalue [30 x i32] poison, i32 [[TMP3]], 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_1_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_0_INSERT]], i32 undef, 1
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_2_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_1_INSERT]], i32 undef, 2
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_3_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_2_INSERT]], i32 undef, 3
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_4_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_3_INSERT]], i32 undef, 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_5_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_4_INSERT]], i32 undef, 5
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_6_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_5_INSERT]], i32 undef, 6
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_7_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_6_INSERT]], i32 undef, 7
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_8_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_7_INSERT]], i32 undef, 8
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_9_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_8_INSERT]], i32 undef, 9
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_10_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_9_INSERT]], i32 undef, 10
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_11_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_10_INSERT]], i32 undef, 11
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_12_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_11_INSERT]], i32 undef, 12
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_13_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_12_INSERT]], i32 undef, 13
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_14_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_13_INSERT]], i32 undef, 14
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_15_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_14_INSERT]], i32 undef, 15
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_16_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_15_INSERT]], i32 undef, 16
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_17_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_16_INSERT]], i32 undef, 17
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_18_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_17_INSERT]], i32 undef, 18
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_19_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_18_INSERT]], i32 undef, 19
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_20_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_19_INSERT]], i32 undef, 20
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_21_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_20_INSERT]], i32 undef, 21
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_22_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_21_INSERT]], i32 undef, 22
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_23_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_22_INSERT]], i32 undef, 23
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_24_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_23_INSERT]], i32 undef, 24
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_25_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_24_INSERT]], i32 undef, 25
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_26_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_25_INSERT]], i32 undef, 26
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_27_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_26_INSERT]], i32 undef, 27
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_28_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_27_INSERT]], i32 undef, 28
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_29_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_28_INSERT]], i32 undef, 29
; POST-PROCESS-GLOBAL-NEXT:    [[TMP64:%.*]] = load i32, ptr [[CSP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    call void (...) @lgc.ilcps.waitContinue(i64 4, i64 -1, i32 [[TMP64]], i64 poison, [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA2_I]], [10 x i32] poison, [30 x i32] [[DOTFCA_29_INSERT]])
; POST-PROCESS-GLOBAL-NEXT:    unreachable
;
;
; POST-PROCESS-GLOBAL-LABEL: define dso_local void @main.resume.0(
; POST-PROCESS-GLOBAL-SAME: i32 [[CSPINIT:%.*]], i64 [[TMP0:%.*]], { [[STRUCT_DISPATCHSYSTEMDATA:%.*]], [23 x i32], [30 x i32] } [[TMP1:%.*]]) !lgc.rt.shaderstage [[META8]] !continuation [[META20]] {
; POST-PROCESS-GLOBAL-NEXT:  entryresume.0:
; POST-PROCESS-GLOBAL-NEXT:    [[CSP:%.*]] = alloca i32, align 4
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[CSPINIT]], ptr [[CSP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP2:%.*]] = call i64 @_cont_GetContinuationStackGlobalMemBase()
; POST-PROCESS-GLOBAL-NEXT:    [[TMP29:%.*]] = inttoptr i64 [[TMP2]] to ptr addrspace(22)
; POST-PROCESS-GLOBAL-NEXT:    [[TMP3:%.*]] = load i32, ptr [[CSP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP4:%.*]] = add i32 [[TMP3]], -108
; POST-PROCESS-GLOBAL-NEXT:    [[TMP6:%.*]] = extractvalue { [[STRUCT_DISPATCHSYSTEMDATA]], [23 x i32], [30 x i32] } [[TMP1]], 2
; POST-PROCESS-GLOBAL-NEXT:    [[TMP5:%.*]] = extractvalue [30 x i32] [[TMP6]], 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_1_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 1
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_2_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 2
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_3_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 3
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_4_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_5_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 5
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_6_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 6
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_7_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 7
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_8_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 8
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_9_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 9
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_10_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 10
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_11_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 11
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_12_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 12
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_13_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 13
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_14_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 14
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_15_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 15
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_16_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 16
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_17_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 17
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_18_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 18
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_19_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 19
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_20_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 20
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_21_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 21
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_22_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 22
; POST-PROCESS-GLOBAL-NEXT:    [[TMP22:%.*]] = extractvalue [30 x i32] [[TMP6]], 23
; POST-PROCESS-GLOBAL-NEXT:    [[TMP23:%.*]] = extractvalue [30 x i32] [[TMP6]], 24
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_25_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 25
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_26_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 26
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_27_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 27
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_28_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 28
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_29_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 29
; POST-PROCESS-GLOBAL-NEXT:    [[TMP7:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP5]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP8:%.*]] = load i32, ptr addrspace(22) [[TMP7]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP31:%.*]] = add i32 [[TMP5]], 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP10:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP31]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP11:%.*]] = load i32, ptr addrspace(22) [[TMP10]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP34:%.*]] = add i32 [[TMP5]], 8
; POST-PROCESS-GLOBAL-NEXT:    [[TMP13:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP34]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP14:%.*]] = load i32, ptr addrspace(22) [[TMP13]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP37:%.*]] = add i32 [[TMP5]], 12
; POST-PROCESS-GLOBAL-NEXT:    [[TMP16:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP37]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP17:%.*]] = load i32, ptr addrspace(22) [[TMP16]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP40:%.*]] = add i32 [[TMP5]], 16
; POST-PROCESS-GLOBAL-NEXT:    [[TMP19:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP40]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP20:%.*]] = load i32, ptr addrspace(22) [[TMP19]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP43:%.*]] = add i32 [[TMP5]], 20
; POST-PROCESS-GLOBAL-NEXT:    [[TMP24:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP43]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP27:%.*]] = load i32, ptr addrspace(22) [[TMP24]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP46:%.*]] = add i32 [[TMP5]], 24
; POST-PROCESS-GLOBAL-NEXT:    [[TMP25:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP46]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP26:%.*]] = load i32, ptr addrspace(22) [[TMP25]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP49:%.*]] = add i32 [[TMP5]], 28
; POST-PROCESS-GLOBAL-NEXT:    [[TMP28:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP49]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP30:%.*]] = load i32, ptr addrspace(22) [[TMP28]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP52:%.*]] = add i32 [[TMP5]], 32
; POST-PROCESS-GLOBAL-NEXT:    [[TMP33:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP52]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP32:%.*]] = load i32, ptr addrspace(22) [[TMP33]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP55:%.*]] = add i32 [[TMP5]], 36
; POST-PROCESS-GLOBAL-NEXT:    [[TMP36:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP55]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP35:%.*]] = load i32, ptr addrspace(22) [[TMP36]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP58:%.*]] = add i32 [[TMP5]], 40
; POST-PROCESS-GLOBAL-NEXT:    [[TMP39:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP58]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP38:%.*]] = load i32, ptr addrspace(22) [[TMP39]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP61:%.*]] = add i32 [[TMP5]], 44
; POST-PROCESS-GLOBAL-NEXT:    [[TMP42:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP61]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP41:%.*]] = load i32, ptr addrspace(22) [[TMP42]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP64:%.*]] = add i32 [[TMP5]], 48
; POST-PROCESS-GLOBAL-NEXT:    [[TMP45:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP64]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP44:%.*]] = load i32, ptr addrspace(22) [[TMP45]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP67:%.*]] = add i32 [[TMP5]], 52
; POST-PROCESS-GLOBAL-NEXT:    [[TMP48:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP67]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP47:%.*]] = load i32, ptr addrspace(22) [[TMP48]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP70:%.*]] = add i32 [[TMP5]], 56
; POST-PROCESS-GLOBAL-NEXT:    [[TMP51:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP70]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP50:%.*]] = load i32, ptr addrspace(22) [[TMP51]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP73:%.*]] = add i32 [[TMP5]], 60
; POST-PROCESS-GLOBAL-NEXT:    [[TMP54:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP73]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP53:%.*]] = load i32, ptr addrspace(22) [[TMP54]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP76:%.*]] = add i32 [[TMP5]], 64
; POST-PROCESS-GLOBAL-NEXT:    [[TMP57:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP76]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP56:%.*]] = load i32, ptr addrspace(22) [[TMP57]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP79:%.*]] = add i32 [[TMP5]], 68
; POST-PROCESS-GLOBAL-NEXT:    [[TMP60:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP79]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP59:%.*]] = load i32, ptr addrspace(22) [[TMP60]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP82:%.*]] = add i32 [[TMP5]], 72
; POST-PROCESS-GLOBAL-NEXT:    [[TMP63:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP82]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP62:%.*]] = load i32, ptr addrspace(22) [[TMP63]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP85:%.*]] = add i32 [[TMP5]], 76
; POST-PROCESS-GLOBAL-NEXT:    [[TMP66:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP85]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP65:%.*]] = load i32, ptr addrspace(22) [[TMP66]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP88:%.*]] = add i32 [[TMP5]], 80
; POST-PROCESS-GLOBAL-NEXT:    [[TMP69:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP88]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP68:%.*]] = load i32, ptr addrspace(22) [[TMP69]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP91:%.*]] = add i32 [[TMP5]], 84
; POST-PROCESS-GLOBAL-NEXT:    [[TMP72:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP91]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP71:%.*]] = load i32, ptr addrspace(22) [[TMP72]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP94:%.*]] = add i32 [[TMP5]], 88
; POST-PROCESS-GLOBAL-NEXT:    [[TMP75:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP94]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP74:%.*]] = load i32, ptr addrspace(22) [[TMP75]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP97:%.*]] = add i32 [[TMP5]], 92
; POST-PROCESS-GLOBAL-NEXT:    [[TMP78:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP97]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP77:%.*]] = load i32, ptr addrspace(22) [[TMP78]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP100:%.*]] = add i32 [[TMP5]], 96
; POST-PROCESS-GLOBAL-NEXT:    [[TMP81:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP100]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP80:%.*]] = load i32, ptr addrspace(22) [[TMP81]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP103:%.*]] = add i32 [[TMP5]], 100
; POST-PROCESS-GLOBAL-NEXT:    [[TMP84:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP103]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP83:%.*]] = load i32, ptr addrspace(22) [[TMP84]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP106:%.*]] = add i32 [[TMP5]], 104
; POST-PROCESS-GLOBAL-NEXT:    [[TMP90:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP106]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP86:%.*]] = load i32, ptr addrspace(22) [[TMP90]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP92:%.*]] = extractvalue { [[STRUCT_DISPATCHSYSTEMDATA]], [23 x i32], [30 x i32] } [[TMP1]], 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_EXTRACT57:%.*]] = extractvalue [[STRUCT_DISPATCHSYSTEMDATA]] [[TMP92]], 0
; POST-PROCESS-GLOBAL-NEXT:    call void @amd.dx.setLocalRootIndex(i32 0)
; POST-PROCESS-GLOBAL-NEXT:    [[TMP87:%.*]] = load i32, ptr [[CSP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP89:%.*]] = add i32 [[TMP87]], -108
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP89]], ptr [[CSP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    ret void
; POST-PROCESS-GLOBAL:       entryresume.0.split:
; POST-PROCESS-GLOBAL-NEXT:    unreachable
;
;
; POST-PROCESS-GLOBAL-LABEL: define void @AnyHit(
; POST-PROCESS-GLOBAL-SAME: i32 [[CSPINIT:%.*]], i64 [[RETURNADDR:%.*]], [[STRUCT_ANYHITTRAVERSALDATA:%.*]] [[TMP0:%.*]], [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]] [[TMP1:%.*]], [6 x i32] [[PADDING:%.*]], [30 x i32] [[PAYLOAD:%.*]]) #[[ATTR2:[0-9]+]] !lgc.rt.shaderstage [[META22:![0-9]+]] !continuation [[META23:![0-9]+]] {
; POST-PROCESS-GLOBAL-NEXT:  AllocaSpillBB:
; POST-PROCESS-GLOBAL-NEXT:    [[SYSTEM_DATA_ALLOCA:%.*]] = alloca [[STRUCT_ANYHITTRAVERSALDATA]], align 8
; POST-PROCESS-GLOBAL-NEXT:    [[CSP:%.*]] = alloca i32, align 4
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[CSPINIT]], ptr [[CSP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP2:%.*]] = call i64 @_cont_GetContinuationStackGlobalMemBase()
; POST-PROCESS-GLOBAL-NEXT:    [[TMP3:%.*]] = inttoptr i64 [[TMP2]] to ptr addrspace(22)
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_0_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 0
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_1_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 1
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_2_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 2
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_3_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 3
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_4_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 4
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_5_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 5
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_6_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 6
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_7_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 7
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_8_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 8
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_9_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 9
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_10_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 10
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_11_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 11
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_12_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 12
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_13_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 13
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_14_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 14
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_15_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 15
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_16_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 16
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_17_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 17
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_18_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 18
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_19_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 19
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_20_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 20
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_21_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 21
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_22_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 22
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_23_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 23
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_24_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 24
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_25_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 25
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_26_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 26
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_27_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 27
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_28_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 28
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_29_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 29
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_0_0_0_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 0, 0, 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_0_0_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0, i32 0, i32 0
; POST-PROCESS-GLOBAL-NEXT:    store <3 x i32> [[DOTFCA_0_0_0_0_EXTRACT]], ptr [[DOTFCA_0_0_0_0_GEP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_0_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 0, 1, 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_0_1_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0, i32 1, i32 0
; POST-PROCESS-GLOBAL-NEXT:    store <2 x float> [[DOTFCA_0_0_1_0_EXTRACT]], ptr [[DOTFCA_0_0_1_0_GEP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 1, 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_1_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 1, i32 0
; POST-PROCESS-GLOBAL-NEXT:    store float [[DOTFCA_0_1_0_EXTRACT]], ptr [[DOTFCA_0_1_0_GEP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_1_1_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 1, 1
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_1_1_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 1, i32 1
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[DOTFCA_0_1_1_EXTRACT]], ptr [[DOTFCA_0_1_1_GEP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_2_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 2
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_2_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 2
; POST-PROCESS-GLOBAL-NEXT:    store <3 x float> [[DOTFCA_0_2_EXTRACT]], ptr [[DOTFCA_0_2_GEP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_3_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 3
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_3_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 3
; POST-PROCESS-GLOBAL-NEXT:    store <3 x float> [[DOTFCA_0_3_EXTRACT]], ptr [[DOTFCA_0_3_GEP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_4_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_4_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 4
; POST-PROCESS-GLOBAL-NEXT:    store float [[DOTFCA_0_4_EXTRACT]], ptr [[DOTFCA_0_4_GEP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_5_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 0, 5
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_5_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 5
; POST-PROCESS-GLOBAL-NEXT:    store i64 [[DOTFCA_0_5_EXTRACT]], ptr [[DOTFCA_0_5_GEP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 1, 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_1_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1, i32 0
; POST-PROCESS-GLOBAL-NEXT:    store float [[DOTFCA_1_0_EXTRACT]], ptr [[DOTFCA_1_0_GEP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_1_1_EXTRACT:%.*]] = extractvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[TMP0]], 1, 1
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_1_1_GEP:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1, i32 1
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[DOTFCA_1_1_EXTRACT]], ptr [[DOTFCA_1_1_GEP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP4:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0, i32 0
; POST-PROCESS-GLOBAL-NEXT:    [[TMP5:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[PAYLOAD_FCA_0_EXTRACT]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP6:%.*]] = load i32, ptr addrspace(22) [[TMP5]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP7:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP8:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP7]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP9:%.*]] = load i32, ptr addrspace(22) [[TMP8]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP10:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 8
; POST-PROCESS-GLOBAL-NEXT:    [[TMP11:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP10]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP12:%.*]] = load i32, ptr addrspace(22) [[TMP11]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP13:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 12
; POST-PROCESS-GLOBAL-NEXT:    [[TMP14:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP13]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP15:%.*]] = load i32, ptr addrspace(22) [[TMP14]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP16:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 16
; POST-PROCESS-GLOBAL-NEXT:    [[TMP17:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP16]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP18:%.*]] = load i32, ptr addrspace(22) [[TMP17]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP19:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 20
; POST-PROCESS-GLOBAL-NEXT:    [[TMP20:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP19]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP21:%.*]] = load i32, ptr addrspace(22) [[TMP20]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP22:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 24
; POST-PROCESS-GLOBAL-NEXT:    [[TMP23:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP22]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP24:%.*]] = load i32, ptr addrspace(22) [[TMP23]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP25:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 28
; POST-PROCESS-GLOBAL-NEXT:    [[TMP26:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP25]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP27:%.*]] = load i32, ptr addrspace(22) [[TMP26]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP28:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 32
; POST-PROCESS-GLOBAL-NEXT:    [[TMP29:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP28]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP30:%.*]] = load i32, ptr addrspace(22) [[TMP29]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP31:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 36
; POST-PROCESS-GLOBAL-NEXT:    [[TMP32:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP31]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP33:%.*]] = load i32, ptr addrspace(22) [[TMP32]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP34:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 40
; POST-PROCESS-GLOBAL-NEXT:    [[TMP35:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP34]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP36:%.*]] = load i32, ptr addrspace(22) [[TMP35]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP37:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 44
; POST-PROCESS-GLOBAL-NEXT:    [[TMP38:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP37]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP39:%.*]] = load i32, ptr addrspace(22) [[TMP38]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP40:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 48
; POST-PROCESS-GLOBAL-NEXT:    [[TMP41:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP40]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP42:%.*]] = load i32, ptr addrspace(22) [[TMP41]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP43:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 52
; POST-PROCESS-GLOBAL-NEXT:    [[TMP44:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP43]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP45:%.*]] = load i32, ptr addrspace(22) [[TMP44]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP46:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 56
; POST-PROCESS-GLOBAL-NEXT:    [[TMP47:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP46]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP48:%.*]] = load i32, ptr addrspace(22) [[TMP47]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP49:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 60
; POST-PROCESS-GLOBAL-NEXT:    [[TMP50:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP49]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP51:%.*]] = load i32, ptr addrspace(22) [[TMP50]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP52:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 64
; POST-PROCESS-GLOBAL-NEXT:    [[TMP53:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP52]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP54:%.*]] = load i32, ptr addrspace(22) [[TMP53]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP55:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 68
; POST-PROCESS-GLOBAL-NEXT:    [[TMP56:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP55]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP57:%.*]] = load i32, ptr addrspace(22) [[TMP56]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP58:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 72
; POST-PROCESS-GLOBAL-NEXT:    [[TMP59:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP58]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP60:%.*]] = load i32, ptr addrspace(22) [[TMP59]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP61:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 76
; POST-PROCESS-GLOBAL-NEXT:    [[TMP62:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP61]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP63:%.*]] = load i32, ptr addrspace(22) [[TMP62]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP64:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 80
; POST-PROCESS-GLOBAL-NEXT:    [[TMP65:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP64]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP66:%.*]] = load i32, ptr addrspace(22) [[TMP65]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP67:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 84
; POST-PROCESS-GLOBAL-NEXT:    [[TMP68:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP67]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP69:%.*]] = load i32, ptr addrspace(22) [[TMP68]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP70:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 88
; POST-PROCESS-GLOBAL-NEXT:    [[TMP71:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP70]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP72:%.*]] = load i32, ptr addrspace(22) [[TMP71]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP73:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 92
; POST-PROCESS-GLOBAL-NEXT:    [[TMP74:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP73]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP75:%.*]] = load i32, ptr addrspace(22) [[TMP74]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP76:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 96
; POST-PROCESS-GLOBAL-NEXT:    [[TMP77:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP76]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP78:%.*]] = load i32, ptr addrspace(22) [[TMP77]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP79:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 100
; POST-PROCESS-GLOBAL-NEXT:    [[TMP80:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP79]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP81:%.*]] = load i32, ptr addrspace(22) [[TMP80]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP82:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 104
; POST-PROCESS-GLOBAL-NEXT:    [[TMP83:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP82]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP84:%.*]] = load i32, ptr addrspace(22) [[TMP83]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP85:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; POST-PROCESS-GLOBAL-NEXT:    [[ADDR_I:%.*]] = getelementptr [[STRUCT_SYSTEMDATA:%.*]], ptr [[TMP85]], i32 0, i32 1
; POST-PROCESS-GLOBAL-NEXT:    [[VAL_I_FCA_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]], ptr [[ADDR_I]], i32 0, i32 0
; POST-PROCESS-GLOBAL-NEXT:    [[VAL_I_FCA_0_LOAD:%.*]] = load <2 x float>, ptr [[VAL_I_FCA_0_GEP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[VAL_I_FCA_0_INSERT:%.*]] = insertvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] poison, <2 x float> [[VAL_I_FCA_0_LOAD]], 0
; POST-PROCESS-GLOBAL-NEXT:    [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[VAL_I_FCA_0_INSERT]], 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTSROA_035_0_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT]], i32 0
; POST-PROCESS-GLOBAL-NEXT:    [[TMP86:%.*]] = bitcast float [[DOTSROA_035_0_VEC_EXTRACT]] to i32
; POST-PROCESS-GLOBAL-NEXT:    [[DOTSROA_035_4_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT]], i32 1
; POST-PROCESS-GLOBAL-NEXT:    [[TMP87:%.*]] = bitcast float [[DOTSROA_035_4_VEC_EXTRACT]] to i32
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[TMP1]], 0
; POST-PROCESS-GLOBAL-NEXT:    call void @amd.dx.setLocalRootIndex(i32 5)
; POST-PROCESS-GLOBAL-NEXT:    call void @_cont_AcceptHit(ptr [[SYSTEM_DATA_ALLOCA]])
; POST-PROCESS-GLOBAL-NEXT:    [[TMP88:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[PAYLOAD_FCA_0_EXTRACT]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP6]], ptr addrspace(22) [[TMP88]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP89:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP90:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP89]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP9]], ptr addrspace(22) [[TMP90]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP91:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 8
; POST-PROCESS-GLOBAL-NEXT:    [[TMP92:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP91]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP12]], ptr addrspace(22) [[TMP92]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP93:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 12
; POST-PROCESS-GLOBAL-NEXT:    [[TMP94:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP93]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP15]], ptr addrspace(22) [[TMP94]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP95:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 16
; POST-PROCESS-GLOBAL-NEXT:    [[TMP96:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP95]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP18]], ptr addrspace(22) [[TMP96]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP97:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 20
; POST-PROCESS-GLOBAL-NEXT:    [[TMP98:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP97]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP21]], ptr addrspace(22) [[TMP98]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP99:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 24
; POST-PROCESS-GLOBAL-NEXT:    [[TMP100:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP99]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP24]], ptr addrspace(22) [[TMP100]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP101:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 28
; POST-PROCESS-GLOBAL-NEXT:    [[TMP102:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP101]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP27]], ptr addrspace(22) [[TMP102]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP103:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 32
; POST-PROCESS-GLOBAL-NEXT:    [[TMP104:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP103]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP30]], ptr addrspace(22) [[TMP104]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP105:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 36
; POST-PROCESS-GLOBAL-NEXT:    [[TMP106:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP105]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP33]], ptr addrspace(22) [[TMP106]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP107:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 40
; POST-PROCESS-GLOBAL-NEXT:    [[TMP108:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP107]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP36]], ptr addrspace(22) [[TMP108]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP109:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 44
; POST-PROCESS-GLOBAL-NEXT:    [[TMP110:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP109]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP39]], ptr addrspace(22) [[TMP110]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP111:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 48
; POST-PROCESS-GLOBAL-NEXT:    [[TMP112:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP111]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP42]], ptr addrspace(22) [[TMP112]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP113:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 52
; POST-PROCESS-GLOBAL-NEXT:    [[TMP114:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP113]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP45]], ptr addrspace(22) [[TMP114]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP115:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 56
; POST-PROCESS-GLOBAL-NEXT:    [[TMP116:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP115]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP48]], ptr addrspace(22) [[TMP116]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP117:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 60
; POST-PROCESS-GLOBAL-NEXT:    [[TMP118:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP117]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP51]], ptr addrspace(22) [[TMP118]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP119:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 64
; POST-PROCESS-GLOBAL-NEXT:    [[TMP120:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP119]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP54]], ptr addrspace(22) [[TMP120]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP121:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 68
; POST-PROCESS-GLOBAL-NEXT:    [[TMP122:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP121]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP57]], ptr addrspace(22) [[TMP122]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP123:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 72
; POST-PROCESS-GLOBAL-NEXT:    [[TMP124:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP123]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP60]], ptr addrspace(22) [[TMP124]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP125:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 76
; POST-PROCESS-GLOBAL-NEXT:    [[TMP126:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP125]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP63]], ptr addrspace(22) [[TMP126]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP127:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 80
; POST-PROCESS-GLOBAL-NEXT:    [[TMP128:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP127]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP66]], ptr addrspace(22) [[TMP128]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP129:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 84
; POST-PROCESS-GLOBAL-NEXT:    [[TMP130:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP129]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP69]], ptr addrspace(22) [[TMP130]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP131:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 88
; POST-PROCESS-GLOBAL-NEXT:    [[TMP132:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP131]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP72]], ptr addrspace(22) [[TMP132]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP133:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 92
; POST-PROCESS-GLOBAL-NEXT:    [[TMP134:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP133]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP75]], ptr addrspace(22) [[TMP134]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP135:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 96
; POST-PROCESS-GLOBAL-NEXT:    [[TMP136:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP135]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP78]], ptr addrspace(22) [[TMP136]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP137:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 100
; POST-PROCESS-GLOBAL-NEXT:    [[TMP138:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP137]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP81]], ptr addrspace(22) [[TMP138]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP139:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 104
; POST-PROCESS-GLOBAL-NEXT:    [[TMP140:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP3]], i32 [[TMP139]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP84]], ptr addrspace(22) [[TMP140]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[HITATTRSALLOCA_SROA_0_0_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[DOTFCA_0_EXTRACT]], i32 0
; POST-PROCESS-GLOBAL-NEXT:    [[TMP141:%.*]] = bitcast float [[HITATTRSALLOCA_SROA_0_0_VEC_EXTRACT]] to i32
; POST-PROCESS-GLOBAL-NEXT:    [[TMP142:%.*]] = bitcast i32 [[TMP141]] to float
; POST-PROCESS-GLOBAL-NEXT:    [[DOTSROA_037_0_VEC_INSERT:%.*]] = insertelement <2 x float> undef, float [[TMP142]], i32 0
; POST-PROCESS-GLOBAL-NEXT:    [[HITATTRSALLOCA_SROA_0_4_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[DOTFCA_0_EXTRACT]], i32 1
; POST-PROCESS-GLOBAL-NEXT:    [[TMP143:%.*]] = bitcast float [[HITATTRSALLOCA_SROA_0_4_VEC_EXTRACT]] to i32
; POST-PROCESS-GLOBAL-NEXT:    [[TMP144:%.*]] = bitcast i32 [[TMP143]] to float
; POST-PROCESS-GLOBAL-NEXT:    [[DOTSROA_037_4_VEC_INSERT:%.*]] = insertelement <2 x float> [[DOTSROA_037_0_VEC_INSERT]], float [[TMP144]], i32 1
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_INSERT36:%.*]] = insertvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] poison, <2 x float> [[DOTSROA_037_4_VEC_INSERT]], 0
; POST-PROCESS-GLOBAL-NEXT:    [[TMP145:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; POST-PROCESS-GLOBAL-NEXT:    call void @_cont_SetTriangleHitAttributes(ptr [[TMP145]], [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[DOTFCA_0_INSERT36]])
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_0_0_0_GEP25:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0, i32 0, i32 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_0_0_0_LOAD:%.*]] = load <3 x i32>, ptr [[DOTFCA_0_0_0_0_GEP25]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_0_0_0_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] poison, <3 x i32> [[DOTFCA_0_0_0_0_LOAD]], 0, 0, 0, 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_0_1_0_GEP26:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0, i32 1, i32 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_0_1_0_LOAD:%.*]] = load <2 x float>, ptr [[DOTFCA_0_0_1_0_GEP26]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_0_1_0_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_0_0_0_INSERT]], <2 x float> [[DOTFCA_0_0_1_0_LOAD]], 0, 0, 1, 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_1_0_GEP27:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 1, i32 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_1_0_LOAD:%.*]] = load float, ptr [[DOTFCA_0_1_0_GEP27]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_1_0_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_0_1_0_INSERT]], float [[DOTFCA_0_1_0_LOAD]], 0, 1, 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_1_1_GEP28:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 1, i32 1
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_1_1_LOAD:%.*]] = load i32, ptr [[DOTFCA_0_1_1_GEP28]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_1_1_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_1_0_INSERT]], i32 [[DOTFCA_0_1_1_LOAD]], 0, 1, 1
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_2_GEP29:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 2
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_2_LOAD:%.*]] = load <3 x float>, ptr [[DOTFCA_0_2_GEP29]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_2_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_1_1_INSERT]], <3 x float> [[DOTFCA_0_2_LOAD]], 0, 2
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_3_GEP30:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 3
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_3_LOAD:%.*]] = load <3 x float>, ptr [[DOTFCA_0_3_GEP30]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_3_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_2_INSERT]], <3 x float> [[DOTFCA_0_3_LOAD]], 0, 3
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_4_GEP31:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_4_LOAD:%.*]] = load float, ptr [[DOTFCA_0_4_GEP31]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_4_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_3_INSERT]], float [[DOTFCA_0_4_LOAD]], 0, 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_5_GEP32:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 5
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_5_LOAD:%.*]] = load i64, ptr [[DOTFCA_0_5_GEP32]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_5_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_4_INSERT]], i64 [[DOTFCA_0_5_LOAD]], 0, 5
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_1_0_GEP33:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1, i32 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_1_0_LOAD:%.*]] = load float, ptr [[DOTFCA_1_0_GEP33]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_1_0_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_0_5_INSERT]], float [[DOTFCA_1_0_LOAD]], 1, 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_1_1_GEP34:%.*]] = getelementptr inbounds [[STRUCT_ANYHITTRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1, i32 1
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_1_1_LOAD:%.*]] = load i32, ptr [[DOTFCA_1_1_GEP34]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_1_1_INSERT:%.*]] = insertvalue [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_1_0_INSERT]], i32 [[DOTFCA_1_1_LOAD]], 1, 1
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_INSERT:%.*]] = insertvalue [30 x i32] poison, i32 [[PAYLOAD_FCA_0_EXTRACT]], 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_1_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_0_INSERT]], i32 [[PAYLOAD_FCA_1_EXTRACT]], 1
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_2_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_1_INSERT]], i32 [[PAYLOAD_FCA_2_EXTRACT]], 2
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_3_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_2_INSERT]], i32 [[PAYLOAD_FCA_3_EXTRACT]], 3
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_4_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_3_INSERT]], i32 [[PAYLOAD_FCA_4_EXTRACT]], 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_5_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_4_INSERT]], i32 [[PAYLOAD_FCA_5_EXTRACT]], 5
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_6_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_5_INSERT]], i32 [[PAYLOAD_FCA_6_EXTRACT]], 6
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_7_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_6_INSERT]], i32 [[PAYLOAD_FCA_7_EXTRACT]], 7
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_8_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_7_INSERT]], i32 [[PAYLOAD_FCA_8_EXTRACT]], 8
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_9_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_8_INSERT]], i32 [[PAYLOAD_FCA_9_EXTRACT]], 9
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_10_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_9_INSERT]], i32 [[PAYLOAD_FCA_10_EXTRACT]], 10
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_11_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_10_INSERT]], i32 [[PAYLOAD_FCA_11_EXTRACT]], 11
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_12_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_11_INSERT]], i32 [[PAYLOAD_FCA_12_EXTRACT]], 12
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_13_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_12_INSERT]], i32 [[PAYLOAD_FCA_13_EXTRACT]], 13
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_14_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_13_INSERT]], i32 [[PAYLOAD_FCA_14_EXTRACT]], 14
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_15_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_14_INSERT]], i32 [[PAYLOAD_FCA_15_EXTRACT]], 15
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_16_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_15_INSERT]], i32 [[PAYLOAD_FCA_16_EXTRACT]], 16
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_17_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_16_INSERT]], i32 [[PAYLOAD_FCA_17_EXTRACT]], 17
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_18_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_17_INSERT]], i32 [[PAYLOAD_FCA_18_EXTRACT]], 18
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_19_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_18_INSERT]], i32 [[PAYLOAD_FCA_19_EXTRACT]], 19
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_20_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_19_INSERT]], i32 [[PAYLOAD_FCA_20_EXTRACT]], 20
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_21_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_20_INSERT]], i32 [[PAYLOAD_FCA_21_EXTRACT]], 21
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_22_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_21_INSERT]], i32 [[PAYLOAD_FCA_22_EXTRACT]], 22
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_23_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_22_INSERT]], i32 [[PAYLOAD_FCA_23_EXTRACT]], 23
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_24_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_23_INSERT]], i32 [[PAYLOAD_FCA_24_EXTRACT]], 24
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_25_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_24_INSERT]], i32 [[PAYLOAD_FCA_25_EXTRACT]], 25
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_26_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_25_INSERT]], i32 [[PAYLOAD_FCA_26_EXTRACT]], 26
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_27_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_26_INSERT]], i32 [[PAYLOAD_FCA_27_EXTRACT]], 27
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_28_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_27_INSERT]], i32 [[PAYLOAD_FCA_28_EXTRACT]], 28
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_29_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_28_INSERT]], i32 [[PAYLOAD_FCA_29_EXTRACT]], 29
; POST-PROCESS-GLOBAL-NEXT:    [[TMP171:%.*]] = load i32, ptr [[CSP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    call void (...) @lgc.ilcps.continue(i64 [[RETURNADDR]], i32 [[TMP171]], i64 poison, [[STRUCT_ANYHITTRAVERSALDATA]] [[DOTFCA_1_1_INSERT]], [8 x i32] poison, [30 x i32] [[DOTFCA_29_INSERT]])
; POST-PROCESS-GLOBAL-NEXT:    unreachable
;
;
; POST-PROCESS-GLOBAL-LABEL: define void @ClosestHit(
; POST-PROCESS-GLOBAL-SAME: i32 [[CSPINIT:%.*]], i64 [[RETURNADDR:%.*]], [[STRUCT_SYSTEMDATA:%.*]] [[TMP0:%.*]], [21 x i32] [[PADDING:%.*]], [30 x i32] [[PAYLOAD:%.*]]) #[[ATTR2]] !lgc.rt.shaderstage [[META24:![0-9]+]] !continuation [[META25:![0-9]+]] !continuation.stacksize [[META26:![0-9]+]] {
; POST-PROCESS-GLOBAL-NEXT:  AllocaSpillBB:
; POST-PROCESS-GLOBAL-NEXT:    [[CSP:%.*]] = alloca i32, align 4
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[CSPINIT]], ptr [[CSP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP1:%.*]] = call i64 @_cont_GetContinuationStackGlobalMemBase()
; POST-PROCESS-GLOBAL-NEXT:    [[TMP2:%.*]] = inttoptr i64 [[TMP1]] to ptr addrspace(22)
; POST-PROCESS-GLOBAL-NEXT:    [[TMP3:%.*]] = load i32, ptr [[CSP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP4:%.*]] = add i32 [[TMP3]], 120
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP4]], ptr [[CSP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP5:%.*]] = add i32 [[TMP3]], 108
; POST-PROCESS-GLOBAL-NEXT:    [[TMP6:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP5]]
; POST-PROCESS-GLOBAL-NEXT:    store i64 [[RETURNADDR]], ptr addrspace(22) [[TMP6]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_0_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 0
; POST-PROCESS-GLOBAL-NEXT:    [[TMP7:%.*]] = add i32 [[TMP3]], 116
; POST-PROCESS-GLOBAL-NEXT:    [[TMP8:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP7]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[PAYLOAD_FCA_0_EXTRACT]], ptr addrspace(22) [[TMP8]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_1_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 1
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_2_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 2
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_3_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 3
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_4_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 4
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_5_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 5
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_6_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 6
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_7_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 7
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_8_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 8
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_9_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 9
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_10_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 10
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_11_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 11
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_12_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 12
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_13_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 13
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_14_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 14
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_15_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 15
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_16_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 16
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_17_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 17
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_18_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 18
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_19_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 19
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_20_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 20
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_21_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 21
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_22_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 22
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_23_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 23
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_24_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 24
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_25_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 25
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_26_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 26
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_27_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 27
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_28_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 28
; POST-PROCESS-GLOBAL-NEXT:    [[PAYLOAD_FCA_29_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 29
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_0_EXTRACT:%.*]] = extractvalue [[STRUCT_SYSTEMDATA]] [[TMP0]], 0, 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_SYSTEMDATA]] [[TMP0]], 1, 0
; POST-PROCESS-GLOBAL-NEXT:    [[TMP9:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[PAYLOAD_FCA_0_EXTRACT]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP10:%.*]] = load i32, ptr addrspace(22) [[TMP9]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP11:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP12:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP11]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP13:%.*]] = load i32, ptr addrspace(22) [[TMP12]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP14:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 8
; POST-PROCESS-GLOBAL-NEXT:    [[TMP15:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP14]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP16:%.*]] = load i32, ptr addrspace(22) [[TMP15]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP17:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 12
; POST-PROCESS-GLOBAL-NEXT:    [[TMP18:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP17]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP19:%.*]] = load i32, ptr addrspace(22) [[TMP18]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP20:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 16
; POST-PROCESS-GLOBAL-NEXT:    [[TMP21:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP20]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP22:%.*]] = load i32, ptr addrspace(22) [[TMP21]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP23:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 20
; POST-PROCESS-GLOBAL-NEXT:    [[TMP24:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP23]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP25:%.*]] = load i32, ptr addrspace(22) [[TMP24]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP26:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 24
; POST-PROCESS-GLOBAL-NEXT:    [[TMP27:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP26]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP28:%.*]] = load i32, ptr addrspace(22) [[TMP27]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP29:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 28
; POST-PROCESS-GLOBAL-NEXT:    [[TMP30:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP29]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP31:%.*]] = load i32, ptr addrspace(22) [[TMP30]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP32:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 32
; POST-PROCESS-GLOBAL-NEXT:    [[TMP33:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP32]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP34:%.*]] = load i32, ptr addrspace(22) [[TMP33]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP35:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 36
; POST-PROCESS-GLOBAL-NEXT:    [[TMP36:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP35]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP37:%.*]] = load i32, ptr addrspace(22) [[TMP36]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP38:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 40
; POST-PROCESS-GLOBAL-NEXT:    [[TMP39:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP38]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP40:%.*]] = load i32, ptr addrspace(22) [[TMP39]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP41:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 44
; POST-PROCESS-GLOBAL-NEXT:    [[TMP42:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP41]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP43:%.*]] = load i32, ptr addrspace(22) [[TMP42]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP44:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 48
; POST-PROCESS-GLOBAL-NEXT:    [[TMP45:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP44]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP46:%.*]] = load i32, ptr addrspace(22) [[TMP45]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP47:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 52
; POST-PROCESS-GLOBAL-NEXT:    [[TMP48:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP47]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP49:%.*]] = load i32, ptr addrspace(22) [[TMP48]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP50:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 56
; POST-PROCESS-GLOBAL-NEXT:    [[TMP51:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP50]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP52:%.*]] = load i32, ptr addrspace(22) [[TMP51]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP53:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 60
; POST-PROCESS-GLOBAL-NEXT:    [[TMP54:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP53]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP55:%.*]] = load i32, ptr addrspace(22) [[TMP54]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP56:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 64
; POST-PROCESS-GLOBAL-NEXT:    [[TMP57:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP56]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP58:%.*]] = load i32, ptr addrspace(22) [[TMP57]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP59:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 68
; POST-PROCESS-GLOBAL-NEXT:    [[TMP60:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP59]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP61:%.*]] = load i32, ptr addrspace(22) [[TMP60]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP62:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 72
; POST-PROCESS-GLOBAL-NEXT:    [[TMP63:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP62]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP64:%.*]] = load i32, ptr addrspace(22) [[TMP63]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP65:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 76
; POST-PROCESS-GLOBAL-NEXT:    [[TMP66:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP65]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP67:%.*]] = load i32, ptr addrspace(22) [[TMP66]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP68:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 80
; POST-PROCESS-GLOBAL-NEXT:    [[TMP69:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP68]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP70:%.*]] = load i32, ptr addrspace(22) [[TMP69]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP71:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 84
; POST-PROCESS-GLOBAL-NEXT:    [[TMP72:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP71]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP73:%.*]] = load i32, ptr addrspace(22) [[TMP72]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP74:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 88
; POST-PROCESS-GLOBAL-NEXT:    [[TMP75:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP74]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP76:%.*]] = load i32, ptr addrspace(22) [[TMP75]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP77:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 92
; POST-PROCESS-GLOBAL-NEXT:    [[TMP78:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP77]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP79:%.*]] = load i32, ptr addrspace(22) [[TMP78]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP80:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 96
; POST-PROCESS-GLOBAL-NEXT:    [[TMP81:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP80]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP82:%.*]] = load i32, ptr addrspace(22) [[TMP81]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP83:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 100
; POST-PROCESS-GLOBAL-NEXT:    [[TMP84:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP83]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP85:%.*]] = load i32, ptr addrspace(22) [[TMP84]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP86:%.*]] = add i32 [[PAYLOAD_FCA_0_EXTRACT]], 104
; POST-PROCESS-GLOBAL-NEXT:    [[TMP87:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP86]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP88:%.*]] = load i32, ptr addrspace(22) [[TMP87]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[VAL_I_FCA_0_INSERT:%.*]] = insertvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]] poison, <2 x float> [[DOTFCA_1_0_EXTRACT]], 0
; POST-PROCESS-GLOBAL-NEXT:    [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[VAL_I_FCA_0_INSERT]], 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTSROA_0256_0_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT]], i32 0
; POST-PROCESS-GLOBAL-NEXT:    [[TMP89:%.*]] = bitcast float [[DOTSROA_0256_0_VEC_EXTRACT]] to i32
; POST-PROCESS-GLOBAL-NEXT:    [[DOTSROA_0256_4_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT]], i32 1
; POST-PROCESS-GLOBAL-NEXT:    [[TMP90:%.*]] = bitcast float [[DOTSROA_0256_4_VEC_EXTRACT]] to i32
; POST-PROCESS-GLOBAL-NEXT:    call void @amd.dx.setLocalRootIndex(i32 5)
; POST-PROCESS-GLOBAL-NEXT:    [[TMP91:%.*]] = load [[DX_TYPES_HANDLE:%.*]], ptr @"\01?Scene@@3URaytracingAccelerationStructure@@A", align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP92:%.*]] = load [[DX_TYPES_HANDLE]], ptr @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A", align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP93:%.*]] = call [[DX_TYPES_HANDLE]] [[DX_OP_CREATEHANDLEFORLIB_DX_TYPES_HANDLE:@[a-zA-Z0-9_$\"\\.-]*[a-zA-Z_$\"\\.-][a-zA-Z0-9_$\"\\.-]*]](i32 160, [[DX_TYPES_HANDLE]] [[TMP91]])
; POST-PROCESS-GLOBAL-NEXT:    [[TMP94:%.*]] = call [[DX_TYPES_HANDLE]] [[DX_OP_ANNOTATEHANDLE:@[a-zA-Z0-9_$\"\\.-]*[a-zA-Z_$\"\\.-][a-zA-Z0-9_$\"\\.-]*]](i32 216, [[DX_TYPES_HANDLE]] [[TMP93]], [[DX_TYPES_RESOURCEPROPERTIES:%.*]] { i32 16, i32 0 })
; POST-PROCESS-GLOBAL-NEXT:    [[TMP95:%.*]] = call i64 @amd.dx.getAccelStructAddr([[DX_TYPES_HANDLE]] [[TMP94]])
; POST-PROCESS-GLOBAL-NEXT:    [[DIS_DATA_I_FCA_0_INSERT:%.*]] = insertvalue [[STRUCT_DISPATCHSYSTEMDATA:%.*]] poison, <3 x i32> [[DOTFCA_0_0_EXTRACT]], 0
; POST-PROCESS-GLOBAL-NEXT:    [[SYS_DATA_I:%.*]] = insertvalue [[STRUCT_SYSTEMDATA]] undef, [[STRUCT_DISPATCHSYSTEMDATA]] [[DIS_DATA_I_FCA_0_INSERT]], 0
; POST-PROCESS-GLOBAL-NEXT:    [[TRAV_DATA_I:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA:%.*]] undef, [[STRUCT_SYSTEMDATA]] [[SYS_DATA_I]], 0
; POST-PROCESS-GLOBAL-NEXT:    [[TMP122:%.*]] = call i64 @continuation.getAddrAndMD(ptr @ClosestHit.resume.0)
; POST-PROCESS-GLOBAL-NEXT:    [[TRAV_DATA2_I:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I]], i64 [[TMP122]], 5
; POST-PROCESS-GLOBAL-NEXT:    [[TMP97:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP3]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP10]], ptr addrspace(22) [[TMP97]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP98:%.*]] = add i32 [[TMP3]], 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP99:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP98]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP13]], ptr addrspace(22) [[TMP99]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP100:%.*]] = add i32 [[TMP3]], 8
; POST-PROCESS-GLOBAL-NEXT:    [[TMP101:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP100]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP16]], ptr addrspace(22) [[TMP101]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP102:%.*]] = add i32 [[TMP3]], 12
; POST-PROCESS-GLOBAL-NEXT:    [[TMP103:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP102]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP19]], ptr addrspace(22) [[TMP103]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP104:%.*]] = add i32 [[TMP3]], 16
; POST-PROCESS-GLOBAL-NEXT:    [[TMP105:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP104]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP22]], ptr addrspace(22) [[TMP105]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP106:%.*]] = add i32 [[TMP3]], 20
; POST-PROCESS-GLOBAL-NEXT:    [[TMP107:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP106]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP25]], ptr addrspace(22) [[TMP107]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP108:%.*]] = add i32 [[TMP3]], 24
; POST-PROCESS-GLOBAL-NEXT:    [[TMP109:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP108]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP28]], ptr addrspace(22) [[TMP109]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP110:%.*]] = add i32 [[TMP3]], 28
; POST-PROCESS-GLOBAL-NEXT:    [[TMP111:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP110]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP31]], ptr addrspace(22) [[TMP111]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP112:%.*]] = add i32 [[TMP3]], 32
; POST-PROCESS-GLOBAL-NEXT:    [[TMP113:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP112]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP34]], ptr addrspace(22) [[TMP113]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP114:%.*]] = add i32 [[TMP3]], 36
; POST-PROCESS-GLOBAL-NEXT:    [[TMP115:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP114]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP37]], ptr addrspace(22) [[TMP115]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP116:%.*]] = add i32 [[TMP3]], 40
; POST-PROCESS-GLOBAL-NEXT:    [[TMP117:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP116]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP40]], ptr addrspace(22) [[TMP117]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP118:%.*]] = add i32 [[TMP3]], 44
; POST-PROCESS-GLOBAL-NEXT:    [[TMP119:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP118]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP43]], ptr addrspace(22) [[TMP119]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP120:%.*]] = add i32 [[TMP3]], 48
; POST-PROCESS-GLOBAL-NEXT:    [[TMP121:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP120]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP46]], ptr addrspace(22) [[TMP121]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP150:%.*]] = add i32 [[TMP3]], 52
; POST-PROCESS-GLOBAL-NEXT:    [[TMP123:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP150]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP49]], ptr addrspace(22) [[TMP123]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP124:%.*]] = add i32 [[TMP3]], 56
; POST-PROCESS-GLOBAL-NEXT:    [[TMP125:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP124]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP52]], ptr addrspace(22) [[TMP125]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP126:%.*]] = add i32 [[TMP3]], 60
; POST-PROCESS-GLOBAL-NEXT:    [[TMP127:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP126]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP55]], ptr addrspace(22) [[TMP127]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP128:%.*]] = add i32 [[TMP3]], 64
; POST-PROCESS-GLOBAL-NEXT:    [[TMP129:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP128]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP58]], ptr addrspace(22) [[TMP129]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP130:%.*]] = add i32 [[TMP3]], 68
; POST-PROCESS-GLOBAL-NEXT:    [[TMP131:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP130]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP61]], ptr addrspace(22) [[TMP131]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP132:%.*]] = add i32 [[TMP3]], 72
; POST-PROCESS-GLOBAL-NEXT:    [[TMP133:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP132]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP64]], ptr addrspace(22) [[TMP133]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP134:%.*]] = add i32 [[TMP3]], 76
; POST-PROCESS-GLOBAL-NEXT:    [[TMP135:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP134]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP67]], ptr addrspace(22) [[TMP135]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP136:%.*]] = add i32 [[TMP3]], 80
; POST-PROCESS-GLOBAL-NEXT:    [[TMP137:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP136]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP70]], ptr addrspace(22) [[TMP137]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP138:%.*]] = add i32 [[TMP3]], 84
; POST-PROCESS-GLOBAL-NEXT:    [[TMP139:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP138]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP73]], ptr addrspace(22) [[TMP139]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP140:%.*]] = add i32 [[TMP3]], 88
; POST-PROCESS-GLOBAL-NEXT:    [[TMP141:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP140]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP76]], ptr addrspace(22) [[TMP141]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP142:%.*]] = add i32 [[TMP3]], 92
; POST-PROCESS-GLOBAL-NEXT:    [[TMP143:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP142]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP79]], ptr addrspace(22) [[TMP143]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP144:%.*]] = add i32 [[TMP3]], 96
; POST-PROCESS-GLOBAL-NEXT:    [[TMP145:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP144]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP82]], ptr addrspace(22) [[TMP145]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP146:%.*]] = add i32 [[TMP3]], 100
; POST-PROCESS-GLOBAL-NEXT:    [[TMP147:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP146]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP85]], ptr addrspace(22) [[TMP147]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP148:%.*]] = add i32 [[TMP3]], 104
; POST-PROCESS-GLOBAL-NEXT:    [[TMP149:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP2]], i32 [[TMP148]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP88]], ptr addrspace(22) [[TMP149]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_INSERT54:%.*]] = insertvalue [30 x i32] poison, i32 [[TMP3]], 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_1_INSERT57:%.*]] = insertvalue [30 x i32] [[DOTFCA_0_INSERT54]], i32 [[PAYLOAD_FCA_1_EXTRACT]], 1
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_2_INSERT60:%.*]] = insertvalue [30 x i32] [[DOTFCA_1_INSERT57]], i32 [[PAYLOAD_FCA_2_EXTRACT]], 2
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_3_INSERT63:%.*]] = insertvalue [30 x i32] [[DOTFCA_2_INSERT60]], i32 [[PAYLOAD_FCA_3_EXTRACT]], 3
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_4_INSERT66:%.*]] = insertvalue [30 x i32] [[DOTFCA_3_INSERT63]], i32 [[PAYLOAD_FCA_4_EXTRACT]], 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_5_INSERT69:%.*]] = insertvalue [30 x i32] [[DOTFCA_4_INSERT66]], i32 [[PAYLOAD_FCA_5_EXTRACT]], 5
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_6_INSERT72:%.*]] = insertvalue [30 x i32] [[DOTFCA_5_INSERT69]], i32 [[PAYLOAD_FCA_6_EXTRACT]], 6
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_7_INSERT75:%.*]] = insertvalue [30 x i32] [[DOTFCA_6_INSERT72]], i32 [[PAYLOAD_FCA_7_EXTRACT]], 7
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_8_INSERT78:%.*]] = insertvalue [30 x i32] [[DOTFCA_7_INSERT75]], i32 [[PAYLOAD_FCA_8_EXTRACT]], 8
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_9_INSERT81:%.*]] = insertvalue [30 x i32] [[DOTFCA_8_INSERT78]], i32 [[PAYLOAD_FCA_9_EXTRACT]], 9
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_10_INSERT84:%.*]] = insertvalue [30 x i32] [[DOTFCA_9_INSERT81]], i32 [[PAYLOAD_FCA_10_EXTRACT]], 10
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_11_INSERT87:%.*]] = insertvalue [30 x i32] [[DOTFCA_10_INSERT84]], i32 [[PAYLOAD_FCA_11_EXTRACT]], 11
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_12_INSERT90:%.*]] = insertvalue [30 x i32] [[DOTFCA_11_INSERT87]], i32 [[PAYLOAD_FCA_12_EXTRACT]], 12
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_13_INSERT93:%.*]] = insertvalue [30 x i32] [[DOTFCA_12_INSERT90]], i32 [[PAYLOAD_FCA_13_EXTRACT]], 13
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_14_INSERT96:%.*]] = insertvalue [30 x i32] [[DOTFCA_13_INSERT93]], i32 [[PAYLOAD_FCA_14_EXTRACT]], 14
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_15_INSERT99:%.*]] = insertvalue [30 x i32] [[DOTFCA_14_INSERT96]], i32 [[PAYLOAD_FCA_15_EXTRACT]], 15
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_16_INSERT102:%.*]] = insertvalue [30 x i32] [[DOTFCA_15_INSERT99]], i32 [[PAYLOAD_FCA_16_EXTRACT]], 16
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_17_INSERT105:%.*]] = insertvalue [30 x i32] [[DOTFCA_16_INSERT102]], i32 [[PAYLOAD_FCA_17_EXTRACT]], 17
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_18_INSERT108:%.*]] = insertvalue [30 x i32] [[DOTFCA_17_INSERT105]], i32 [[PAYLOAD_FCA_18_EXTRACT]], 18
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_19_INSERT111:%.*]] = insertvalue [30 x i32] [[DOTFCA_18_INSERT108]], i32 [[PAYLOAD_FCA_19_EXTRACT]], 19
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_20_INSERT114:%.*]] = insertvalue [30 x i32] [[DOTFCA_19_INSERT111]], i32 [[PAYLOAD_FCA_20_EXTRACT]], 20
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_21_INSERT117:%.*]] = insertvalue [30 x i32] [[DOTFCA_20_INSERT114]], i32 [[PAYLOAD_FCA_21_EXTRACT]], 21
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_22_INSERT120:%.*]] = insertvalue [30 x i32] [[DOTFCA_21_INSERT117]], i32 [[PAYLOAD_FCA_22_EXTRACT]], 22
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_23_INSERT123:%.*]] = insertvalue [30 x i32] [[DOTFCA_22_INSERT120]], i32 [[PAYLOAD_FCA_23_EXTRACT]], 23
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_24_INSERT126:%.*]] = insertvalue [30 x i32] [[DOTFCA_23_INSERT123]], i32 [[PAYLOAD_FCA_24_EXTRACT]], 24
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_25_INSERT129:%.*]] = insertvalue [30 x i32] [[DOTFCA_24_INSERT126]], i32 [[PAYLOAD_FCA_25_EXTRACT]], 25
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_26_INSERT132:%.*]] = insertvalue [30 x i32] [[DOTFCA_25_INSERT129]], i32 [[PAYLOAD_FCA_26_EXTRACT]], 26
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_27_INSERT135:%.*]] = insertvalue [30 x i32] [[DOTFCA_26_INSERT132]], i32 [[PAYLOAD_FCA_27_EXTRACT]], 27
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_28_INSERT138:%.*]] = insertvalue [30 x i32] [[DOTFCA_27_INSERT135]], i32 [[PAYLOAD_FCA_28_EXTRACT]], 28
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_29_INSERT141:%.*]] = insertvalue [30 x i32] [[DOTFCA_28_INSERT138]], i32 [[PAYLOAD_FCA_29_EXTRACT]], 29
; POST-PROCESS-GLOBAL-NEXT:    [[TMP175:%.*]] = load i32, ptr [[CSP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    call void (...) @lgc.ilcps.waitContinue(i64 4, i64 -1, i32 [[TMP175]], i64 poison, [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA2_I]], [10 x i32] poison, [30 x i32] [[DOTFCA_29_INSERT141]])
; POST-PROCESS-GLOBAL-NEXT:    unreachable
;
;
; POST-PROCESS-GLOBAL-LABEL: define dso_local void @ClosestHit.resume.0(
; POST-PROCESS-GLOBAL-SAME: i32 [[CSPINIT:%.*]], i64 [[TMP0:%.*]], { [[STRUCT_DISPATCHSYSTEMDATA:%.*]], [23 x i32], [30 x i32] } [[TMP1:%.*]]) !lgc.rt.shaderstage [[META24]] !continuation [[META25]] {
; POST-PROCESS-GLOBAL-NEXT:  entryresume.0:
; POST-PROCESS-GLOBAL-NEXT:    [[CSP:%.*]] = alloca i32, align 4
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[CSPINIT]], ptr [[CSP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP2:%.*]] = call i64 @_cont_GetContinuationStackGlobalMemBase()
; POST-PROCESS-GLOBAL-NEXT:    [[TMP29:%.*]] = inttoptr i64 [[TMP2]] to ptr addrspace(22)
; POST-PROCESS-GLOBAL-NEXT:    [[TMP3:%.*]] = load i32, ptr [[CSP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP4:%.*]] = add i32 [[TMP3]], -120
; POST-PROCESS-GLOBAL-NEXT:    [[TMP6:%.*]] = extractvalue { [[STRUCT_DISPATCHSYSTEMDATA]], [23 x i32], [30 x i32] } [[TMP1]], 2
; POST-PROCESS-GLOBAL-NEXT:    [[TMP5:%.*]] = extractvalue [30 x i32] [[TMP6]], 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_1_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 1
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_2_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 2
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_3_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 3
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_4_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_5_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 5
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_6_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 6
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_7_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 7
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_8_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 8
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_9_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 9
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_10_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 10
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_11_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 11
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_12_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 12
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_13_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 13
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_14_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 14
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_15_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 15
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_16_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 16
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_17_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 17
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_18_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 18
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_19_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 19
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_20_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 20
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_21_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 21
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_22_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 22
; POST-PROCESS-GLOBAL-NEXT:    [[TMP22:%.*]] = extractvalue [30 x i32] [[TMP6]], 23
; POST-PROCESS-GLOBAL-NEXT:    [[TMP23:%.*]] = extractvalue [30 x i32] [[TMP6]], 24
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_25_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 25
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_26_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 26
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_27_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 27
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_28_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 28
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_29_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP6]], 29
; POST-PROCESS-GLOBAL-NEXT:    [[TMP7:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP5]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP30:%.*]] = load i32, ptr addrspace(22) [[TMP7]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP31:%.*]] = add i32 [[TMP5]], 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP10:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP31]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP33:%.*]] = load i32, ptr addrspace(22) [[TMP10]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP34:%.*]] = add i32 [[TMP5]], 8
; POST-PROCESS-GLOBAL-NEXT:    [[TMP13:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP34]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP36:%.*]] = load i32, ptr addrspace(22) [[TMP13]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP37:%.*]] = add i32 [[TMP5]], 12
; POST-PROCESS-GLOBAL-NEXT:    [[TMP16:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP37]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP39:%.*]] = load i32, ptr addrspace(22) [[TMP16]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP40:%.*]] = add i32 [[TMP5]], 16
; POST-PROCESS-GLOBAL-NEXT:    [[TMP19:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP40]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP42:%.*]] = load i32, ptr addrspace(22) [[TMP19]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP43:%.*]] = add i32 [[TMP5]], 20
; POST-PROCESS-GLOBAL-NEXT:    [[TMP24:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP43]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP45:%.*]] = load i32, ptr addrspace(22) [[TMP24]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP46:%.*]] = add i32 [[TMP5]], 24
; POST-PROCESS-GLOBAL-NEXT:    [[TMP25:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP46]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP48:%.*]] = load i32, ptr addrspace(22) [[TMP25]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP49:%.*]] = add i32 [[TMP5]], 28
; POST-PROCESS-GLOBAL-NEXT:    [[TMP28:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP49]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP51:%.*]] = load i32, ptr addrspace(22) [[TMP28]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP52:%.*]] = add i32 [[TMP5]], 32
; POST-PROCESS-GLOBAL-NEXT:    [[TMP32:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP52]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP54:%.*]] = load i32, ptr addrspace(22) [[TMP32]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP55:%.*]] = add i32 [[TMP5]], 36
; POST-PROCESS-GLOBAL-NEXT:    [[TMP35:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP55]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP57:%.*]] = load i32, ptr addrspace(22) [[TMP35]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP58:%.*]] = add i32 [[TMP5]], 40
; POST-PROCESS-GLOBAL-NEXT:    [[TMP38:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP58]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP60:%.*]] = load i32, ptr addrspace(22) [[TMP38]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP61:%.*]] = add i32 [[TMP5]], 44
; POST-PROCESS-GLOBAL-NEXT:    [[TMP41:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP61]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP63:%.*]] = load i32, ptr addrspace(22) [[TMP41]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP64:%.*]] = add i32 [[TMP5]], 48
; POST-PROCESS-GLOBAL-NEXT:    [[TMP44:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP64]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP66:%.*]] = load i32, ptr addrspace(22) [[TMP44]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP67:%.*]] = add i32 [[TMP5]], 52
; POST-PROCESS-GLOBAL-NEXT:    [[TMP47:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP67]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP69:%.*]] = load i32, ptr addrspace(22) [[TMP47]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP70:%.*]] = add i32 [[TMP5]], 56
; POST-PROCESS-GLOBAL-NEXT:    [[TMP50:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP70]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP72:%.*]] = load i32, ptr addrspace(22) [[TMP50]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP73:%.*]] = add i32 [[TMP5]], 60
; POST-PROCESS-GLOBAL-NEXT:    [[TMP53:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP73]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP75:%.*]] = load i32, ptr addrspace(22) [[TMP53]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP76:%.*]] = add i32 [[TMP5]], 64
; POST-PROCESS-GLOBAL-NEXT:    [[TMP56:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP76]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP78:%.*]] = load i32, ptr addrspace(22) [[TMP56]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP79:%.*]] = add i32 [[TMP5]], 68
; POST-PROCESS-GLOBAL-NEXT:    [[TMP59:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP79]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP81:%.*]] = load i32, ptr addrspace(22) [[TMP59]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP82:%.*]] = add i32 [[TMP5]], 72
; POST-PROCESS-GLOBAL-NEXT:    [[TMP62:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP82]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP84:%.*]] = load i32, ptr addrspace(22) [[TMP62]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP85:%.*]] = add i32 [[TMP5]], 76
; POST-PROCESS-GLOBAL-NEXT:    [[TMP65:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP85]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP87:%.*]] = load i32, ptr addrspace(22) [[TMP65]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP88:%.*]] = add i32 [[TMP5]], 80
; POST-PROCESS-GLOBAL-NEXT:    [[TMP68:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP88]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP90:%.*]] = load i32, ptr addrspace(22) [[TMP68]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP91:%.*]] = add i32 [[TMP5]], 84
; POST-PROCESS-GLOBAL-NEXT:    [[TMP71:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP91]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP93:%.*]] = load i32, ptr addrspace(22) [[TMP71]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP94:%.*]] = add i32 [[TMP5]], 88
; POST-PROCESS-GLOBAL-NEXT:    [[TMP74:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP94]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP96:%.*]] = load i32, ptr addrspace(22) [[TMP74]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP97:%.*]] = add i32 [[TMP5]], 92
; POST-PROCESS-GLOBAL-NEXT:    [[TMP77:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP97]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP99:%.*]] = load i32, ptr addrspace(22) [[TMP77]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP100:%.*]] = add i32 [[TMP5]], 96
; POST-PROCESS-GLOBAL-NEXT:    [[TMP80:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP100]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP102:%.*]] = load i32, ptr addrspace(22) [[TMP80]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP103:%.*]] = add i32 [[TMP5]], 100
; POST-PROCESS-GLOBAL-NEXT:    [[TMP83:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP103]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP105:%.*]] = load i32, ptr addrspace(22) [[TMP83]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP106:%.*]] = add i32 [[TMP5]], 104
; POST-PROCESS-GLOBAL-NEXT:    [[TMP86:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP106]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP108:%.*]] = load i32, ptr addrspace(22) [[TMP86]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP92:%.*]] = extractvalue { [[STRUCT_DISPATCHSYSTEMDATA]], [23 x i32], [30 x i32] } [[TMP1]], 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_DISPATCHSYSTEMDATA]] [[TMP92]], 0
; POST-PROCESS-GLOBAL-NEXT:    call void @amd.dx.setLocalRootIndex(i32 5)
; POST-PROCESS-GLOBAL-NEXT:    [[TMP110:%.*]] = add i32 [[TMP4]], 116
; POST-PROCESS-GLOBAL-NEXT:    [[TMP89:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP110]]
; POST-PROCESS-GLOBAL-NEXT:    [[TMP114:%.*]] = load i32, ptr addrspace(22) [[TMP89]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP112:%.*]] = add i32 [[TMP4]], 108
; POST-PROCESS-GLOBAL-NEXT:    [[TMP113:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP112]]
; POST-PROCESS-GLOBAL-NEXT:    [[RETURNADDR_RELOAD:%.*]] = load i64, ptr addrspace(22) [[TMP113]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP115:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP114]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP30]], ptr addrspace(22) [[TMP115]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP116:%.*]] = add i32 [[TMP114]], 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP117:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP116]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP33]], ptr addrspace(22) [[TMP117]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP118:%.*]] = add i32 [[TMP114]], 8
; POST-PROCESS-GLOBAL-NEXT:    [[TMP119:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP118]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP36]], ptr addrspace(22) [[TMP119]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP120:%.*]] = add i32 [[TMP114]], 12
; POST-PROCESS-GLOBAL-NEXT:    [[TMP121:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP120]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP39]], ptr addrspace(22) [[TMP121]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP122:%.*]] = add i32 [[TMP114]], 16
; POST-PROCESS-GLOBAL-NEXT:    [[TMP123:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP122]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP42]], ptr addrspace(22) [[TMP123]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP124:%.*]] = add i32 [[TMP114]], 20
; POST-PROCESS-GLOBAL-NEXT:    [[TMP125:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP124]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP45]], ptr addrspace(22) [[TMP125]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP126:%.*]] = add i32 [[TMP114]], 24
; POST-PROCESS-GLOBAL-NEXT:    [[TMP127:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP126]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP48]], ptr addrspace(22) [[TMP127]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP128:%.*]] = add i32 [[TMP114]], 28
; POST-PROCESS-GLOBAL-NEXT:    [[TMP129:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP128]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP51]], ptr addrspace(22) [[TMP129]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP130:%.*]] = add i32 [[TMP114]], 32
; POST-PROCESS-GLOBAL-NEXT:    [[TMP131:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP130]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP54]], ptr addrspace(22) [[TMP131]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP132:%.*]] = add i32 [[TMP114]], 36
; POST-PROCESS-GLOBAL-NEXT:    [[TMP133:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP132]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP57]], ptr addrspace(22) [[TMP133]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP134:%.*]] = add i32 [[TMP114]], 40
; POST-PROCESS-GLOBAL-NEXT:    [[TMP135:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP134]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP60]], ptr addrspace(22) [[TMP135]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP136:%.*]] = add i32 [[TMP114]], 44
; POST-PROCESS-GLOBAL-NEXT:    [[TMP137:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP136]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP63]], ptr addrspace(22) [[TMP137]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP138:%.*]] = add i32 [[TMP114]], 48
; POST-PROCESS-GLOBAL-NEXT:    [[TMP139:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP138]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP66]], ptr addrspace(22) [[TMP139]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP140:%.*]] = add i32 [[TMP114]], 52
; POST-PROCESS-GLOBAL-NEXT:    [[TMP141:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP140]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP69]], ptr addrspace(22) [[TMP141]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP142:%.*]] = add i32 [[TMP114]], 56
; POST-PROCESS-GLOBAL-NEXT:    [[TMP143:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP142]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP72]], ptr addrspace(22) [[TMP143]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP144:%.*]] = add i32 [[TMP114]], 60
; POST-PROCESS-GLOBAL-NEXT:    [[TMP145:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP144]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP75]], ptr addrspace(22) [[TMP145]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP146:%.*]] = add i32 [[TMP114]], 64
; POST-PROCESS-GLOBAL-NEXT:    [[TMP147:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP146]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP78]], ptr addrspace(22) [[TMP147]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP148:%.*]] = add i32 [[TMP114]], 68
; POST-PROCESS-GLOBAL-NEXT:    [[TMP149:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP148]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP81]], ptr addrspace(22) [[TMP149]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP150:%.*]] = add i32 [[TMP114]], 72
; POST-PROCESS-GLOBAL-NEXT:    [[TMP151:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP150]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP84]], ptr addrspace(22) [[TMP151]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP152:%.*]] = add i32 [[TMP114]], 76
; POST-PROCESS-GLOBAL-NEXT:    [[TMP153:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP152]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP87]], ptr addrspace(22) [[TMP153]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP154:%.*]] = add i32 [[TMP114]], 80
; POST-PROCESS-GLOBAL-NEXT:    [[TMP155:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP154]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP90]], ptr addrspace(22) [[TMP155]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP156:%.*]] = add i32 [[TMP114]], 84
; POST-PROCESS-GLOBAL-NEXT:    [[TMP157:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP156]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP93]], ptr addrspace(22) [[TMP157]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP158:%.*]] = add i32 [[TMP114]], 88
; POST-PROCESS-GLOBAL-NEXT:    [[TMP159:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP158]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP96]], ptr addrspace(22) [[TMP159]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP160:%.*]] = add i32 [[TMP114]], 92
; POST-PROCESS-GLOBAL-NEXT:    [[TMP161:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP160]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP99]], ptr addrspace(22) [[TMP161]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP162:%.*]] = add i32 [[TMP114]], 96
; POST-PROCESS-GLOBAL-NEXT:    [[TMP163:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP162]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP102]], ptr addrspace(22) [[TMP163]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP164:%.*]] = add i32 [[TMP114]], 100
; POST-PROCESS-GLOBAL-NEXT:    [[TMP165:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP164]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP105]], ptr addrspace(22) [[TMP165]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP166:%.*]] = add i32 [[TMP114]], 104
; POST-PROCESS-GLOBAL-NEXT:    [[TMP167:%.*]] = getelementptr i8, ptr addrspace(22) [[TMP29]], i32 [[TMP166]]
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP108]], ptr addrspace(22) [[TMP167]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_INSERT:%.*]] = insertvalue [[STRUCT_DISPATCHSYSTEMDATA]] poison, <3 x i32> [[DOTFCA_0_EXTRACT]], 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_0_INSERT1:%.*]] = insertvalue [30 x i32] poison, i32 [[TMP114]], 0
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_1_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_0_INSERT1]], i32 [[DOTFCA_1_EXTRACT]], 1
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_2_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_1_INSERT]], i32 [[DOTFCA_2_EXTRACT]], 2
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_3_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_2_INSERT]], i32 [[DOTFCA_3_EXTRACT]], 3
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_4_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_3_INSERT]], i32 [[DOTFCA_4_EXTRACT]], 4
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_5_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_4_INSERT]], i32 [[DOTFCA_5_EXTRACT]], 5
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_6_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_5_INSERT]], i32 [[DOTFCA_6_EXTRACT]], 6
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_7_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_6_INSERT]], i32 [[DOTFCA_7_EXTRACT]], 7
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_8_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_7_INSERT]], i32 [[DOTFCA_8_EXTRACT]], 8
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_9_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_8_INSERT]], i32 [[DOTFCA_9_EXTRACT]], 9
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_10_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_9_INSERT]], i32 [[DOTFCA_10_EXTRACT]], 10
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_11_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_10_INSERT]], i32 [[DOTFCA_11_EXTRACT]], 11
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_12_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_11_INSERT]], i32 [[DOTFCA_12_EXTRACT]], 12
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_13_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_12_INSERT]], i32 [[DOTFCA_13_EXTRACT]], 13
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_14_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_13_INSERT]], i32 [[DOTFCA_14_EXTRACT]], 14
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_15_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_14_INSERT]], i32 [[DOTFCA_15_EXTRACT]], 15
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_16_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_15_INSERT]], i32 [[DOTFCA_16_EXTRACT]], 16
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_17_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_16_INSERT]], i32 [[DOTFCA_17_EXTRACT]], 17
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_18_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_17_INSERT]], i32 [[DOTFCA_18_EXTRACT]], 18
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_19_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_18_INSERT]], i32 [[DOTFCA_19_EXTRACT]], 19
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_20_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_19_INSERT]], i32 [[DOTFCA_20_EXTRACT]], 20
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_21_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_20_INSERT]], i32 [[DOTFCA_21_EXTRACT]], 21
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_22_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_21_INSERT]], i32 [[DOTFCA_22_EXTRACT]], 22
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_23_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_22_INSERT]], i32 [[TMP22]], 23
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_24_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_23_INSERT]], i32 [[TMP23]], 24
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_25_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_24_INSERT]], i32 [[DOTFCA_25_EXTRACT]], 25
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_26_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_25_INSERT]], i32 [[DOTFCA_26_EXTRACT]], 26
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_27_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_26_INSERT]], i32 [[DOTFCA_27_EXTRACT]], 27
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_28_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_27_INSERT]], i32 [[DOTFCA_28_EXTRACT]], 28
; POST-PROCESS-GLOBAL-NEXT:    [[DOTFCA_29_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_28_INSERT]], i32 [[DOTFCA_29_EXTRACT]], 29
; POST-PROCESS-GLOBAL-NEXT:    [[TMP168:%.*]] = load i32, ptr [[CSP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP169:%.*]] = add i32 [[TMP168]], -120
; POST-PROCESS-GLOBAL-NEXT:    store i32 [[TMP169]], ptr [[CSP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    [[TMP170:%.*]] = load i32, ptr [[CSP]], align 4
; POST-PROCESS-GLOBAL-NEXT:    call void (...) @lgc.ilcps.continue(i64 [[RETURNADDR_RELOAD]], i32 [[TMP170]], i64 poison, [[STRUCT_DISPATCHSYSTEMDATA]] [[DOTFCA_0_INSERT]], [23 x i32] poison, [30 x i32] [[DOTFCA_29_INSERT]])
; POST-PROCESS-GLOBAL-NEXT:    unreachable
;
