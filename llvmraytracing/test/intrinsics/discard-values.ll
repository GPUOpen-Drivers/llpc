; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 2
; RUN: opt --verify-each -passes='dxil-cont-prepare-gpurt-library,lint<abort-on-error>' -S %s | FileCheck %s
;;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;
 ;  Copyright (c) 2024-2025 Advanced Micro Devices, Inc. All Rights Reserved.
 ;
 ;  Permission is hereby granted, free of charge, to any person obtaining a copy
 ;  of this software and associated documentation files (the "Software"), to
 ;  deal in the Software without restriction, including without limitation the
 ;  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 ;  sell copies of the Software, and to permit persons to whom the Software is
 ;  furnished to do so, subject to the following conditions:
 ;
 ;  The above copyright notice and this permission notice shall be included in all
 ;  copies or substantial portions of the Software.
 ;
 ;  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ;  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ;  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 ;  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 ;  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 ;  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 ;  IN THE SOFTWARE.
 ;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

%struct.AnyHitData = type { float, i32 }
%struct.DispatchSystemData = type { i32 }

declare float @_AmdGetUninitializedF32()
declare i32 @_AmdGetUninitializedI32()
declare %struct.AnyHitData @_AmdGetUninitializedStruct()

define float @discard_f32() {
; CHECK-LABEL: define float @discard_f32() {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[TMP0:%.*]] = freeze float poison
; CHECK-NEXT:    ret float [[TMP0]]
;
entry:
  %result = call float @_AmdGetUninitializedF32()
  ret float %result
}

define i32 @discard_i32() {
; CHECK-LABEL: define i32 @discard_i32() {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[TMP0:%.*]] = freeze i32 poison
; CHECK-NEXT:    ret i32 [[TMP0]]
;
entry:
  %result = call i32 @_AmdGetUninitializedI32()
  ret i32 %result
}

define %struct.AnyHitData @discard_struct() {
; CHECK-LABEL: define %struct.AnyHitData @discard_struct() {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[TMP0:%.*]] = freeze [[STRUCT_ANYHITDATA:%.*]] poison
; CHECK-NEXT:    ret [[STRUCT_ANYHITDATA]] [[TMP0]]
;
entry:
  %result = call %struct.AnyHitData @_AmdGetUninitializedStruct()
  ret %struct.AnyHitData %result
}

!dx.entryPoints = !{!0}
!continuation.stackAddrspace = !{!9}

!0 = !{null, !"", null, !1, !8}
!1 = !{!2, null, null, null}
!2 = !{!3}
!3 = !{i1 ()* @discard_f32, !"discard_f32", null, null, !6}
!4 = !{i1 ()* @discard_i32, !"discard_i32", null, null, !6}
!5 = !{i1 ()* @discard_struct, !"discard_struct", null, null, !6}
!6 = !{i32 8, i32 7, i32 6, i32 16, i32 7, i32 8, i32 5, !7}
!7 = !{i32 0}
!8 = !{i32 0, i64 65536}
!9 = !{i32 21}
!10 = !{%struct.DispatchSystemData poison}
