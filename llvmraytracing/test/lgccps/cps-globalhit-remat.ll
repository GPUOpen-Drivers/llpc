; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --include-generated-funcs --version 3
; RUN: grep -v SKIP_GLOBAL_ADDRSPACE %s | opt --verify-each -passes="dxil-cont-prepare-gpurt-library,lint,dxil-cont-lgc-rt-op-converter,lint<abort-on-error>,inline,lint<abort-on-error>,lower-raytracing-pipeline,lint<abort-on-error>,sroa,lint<abort-on-error>,lower-await,lint<abort-on-error>,coro-early,dxil-coro-split,coro-cleanup,lint<abort-on-error>,cleanup-continuations,lint<abort-on-error>,remove-types-metadata" -S | FileCheck -check-prefix=CLEANUP-NEXT %s
;;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;
 ;  Copyright (c) 2024-2025 Advanced Micro Devices, Inc. All Rights Reserved.
 ;
 ;  Permission is hereby granted, free of charge, to any person obtaining a copy
 ;  of this software and associated documentation files (the "Software"), to
 ;  deal in the Software without restriction, including without limitation the
 ;  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 ;  sell copies of the Software, and to permit persons to whom the Software is
 ;  furnished to do so, subject to the following conditions:
 ;
 ;  The above copyright notice and this permission notice shall be included in all
 ;  copies or substantial portions of the Software.
 ;
 ;  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ;  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ;  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 ;  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 ;  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 ;  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 ;  IN THE SOFTWARE.
 ;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

target datalayout = "e-m:e-p:64:32-p20:32:32-p21:32:32-p32:32:32-i1:32-i8:8-i16:16-i32:32-i64:32-f16:16-f32:32-f64:32-v8:8-v16:16-v32:32-v48:32-v64:32-v80:32-v96:32-v112:32-v128:32-v144:32-v160:32-v176:32-v192:32-v208:32-v224:32-v240:32-v256:32-n8:16:32"

%dx.types.Handle = type { i8* }
%struct.DispatchSystemData = type { <3 x i32> }
%struct.HitObject = type { i32 }
%struct.TraversalData = type { %struct.SystemData, %struct.HitData, <3 x float>, <3 x float>, float, i32 }
%struct.SystemData = type { %struct.DispatchSystemData, %struct.BuiltInTriangleIntersectionAttributes }
%struct.BuiltInTriangleIntersectionAttributes = type { <2 x float> }
%struct.HitData = type { float, i32 }
%struct.RayPayload = type { <4 x float> }
%dx.types.ResourceProperties = type { i32, i32 }
; Don't use maximum possible size of 8 floats to test that the actual size is used
%struct.LargeIntersectionAttributes = type { [7 x i32] }
%struct.RaytracingAccelerationStructure = type { i32 }
%"class.RWTexture2D<vector<float, 4> >" = type { <4 x float> }

@debug_global = external global i32

@"\01?Scene@@3URaytracingAccelerationStructure@@A" = external constant %dx.types.Handle, align 4
@"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4

declare i32 @_cont_GetContinuationStackAddr() #0

; To exercise both waiting and non-waiting Await, we use WaitAwait for Traversal,
; and Await for Callshader. This does not necessarily reflect current choices in GPURT.
declare %struct.DispatchSystemData @_AmdWaitAwaitTraversal(i32, i64, i32, i32, %struct.TraversalData) #0

declare %struct.DispatchSystemData @_AmdAwaitShader(i32, i32, i32, %struct.DispatchSystemData) #0

declare %struct.TraversalData @_AmdAwaitAnyHit(i32, i32, i32, %struct.TraversalData) #0

declare void @lgc.cps.jump(...) #0

declare void @_AmdContStackSetPtr(i32) #0

declare !pointeetys !32 i32 @_cont_HitKind(%struct.SystemData*) #0

; Function Attrs: nounwind memory(read)
declare float @dx.op.rayTCurrent.f32(i32) #5

; Function Attrs: nounwind memory(read)
declare float @dx.op.rayTMin.f32(i32) #5

declare i64 @_cont_GetContinuationStackGlobalMemBase() ; SKIP_GLOBAL_ADDRSPACE

; Function Attrs: nounwind
declare i32 @_AmdGetResumePointAddr() #1

declare void @opaqueFunc(float %t) #1

define %struct.HitData @_cont_GetCommittedState(%struct.TraversalData* %data) #0 !pointeetys !34 {
  %resPtr = getelementptr %struct.TraversalData, %struct.TraversalData* %data, i32 0, i32 1
  %res = load %struct.HitData, %struct.HitData* %resPtr, align 4
  ret %struct.HitData %res
}

; Function Attrs: nounwind
declare !pointeetys !37 void @_cont_AcceptHit(%struct.TraversalData* nocapture readnone) #1

; Function Attrs: nounwind
declare !pointeetys !37 void @_AmdAcceptHitAttributes(%struct.TraversalData*) #1

declare i1 @opaqueIsEnd() #0

define void @_cont_ExitRayGen(ptr nocapture readonly %data) alwaysinline nounwind !pointeetys !{%struct.DispatchSystemData poison} {
  ret void
}

define i1 @_cont_IsEndSearch(%struct.TraversalData* %data) #0 !pointeetys !39 {
  %isEnd = call i1 @opaqueIsEnd()
  ret i1 %isEnd
}

define %struct.HitObject @_cont_GlobalHitObject(%struct.SystemData* %data) #0 !pointeetys !72 {
  %resPtr = getelementptr %struct.SystemData, %struct.SystemData* %data, i32 0, i32 1
  %res = load %struct.HitObject, %struct.HitObject* %resPtr, align 4
  ret %struct.HitObject %res
}

define %struct.BuiltInTriangleIntersectionAttributes @_cont_GetTriangleHitAttributes(%struct.SystemData* %data) #0 !pointeetys !40 {
  %addr = getelementptr %struct.SystemData, %struct.SystemData* %data, i32 0, i32 1
  %val = load %struct.BuiltInTriangleIntersectionAttributes, %struct.BuiltInTriangleIntersectionAttributes* %addr, align 4
  ret %struct.BuiltInTriangleIntersectionAttributes %val
}

define void @_cont_SetTriangleHitAttributes(%struct.SystemData* %data, %struct.BuiltInTriangleIntersectionAttributes %val) #0 !pointeetys !41 {
  %addr = getelementptr %struct.SystemData, %struct.SystemData* %data, i32 0, i32 1
  store %struct.BuiltInTriangleIntersectionAttributes %val, %struct.BuiltInTriangleIntersectionAttributes* %addr, align 4
  ret void
}

define void @_cont_CallShader(%struct.DispatchSystemData* %data, i32 %0) #0 !pointeetys !44 {
  %dis_data = load %struct.DispatchSystemData, %struct.DispatchSystemData* %data, align 4
  %newdata = call %struct.DispatchSystemData @_AmdAwaitShader(i32 2, i32 5, i32 poison, %struct.DispatchSystemData %dis_data)
  store %struct.DispatchSystemData %newdata, %struct.DispatchSystemData* %data, align 4
  ret void
}

define void @_cont_KernelEntry() #0 !lgc.rt.shaderstage !69 {
  %cspInit = ptrtoint ptr @debug_global to i32
  call void @_AmdContStackSetPtr(i32 %cspInit)
  call void (...) @lgc.cps.jump(i32 0, i32 -1, i32 poison, i32 5, i32 poison, %struct.DispatchSystemData poison)
  ret void
}

; Function Attrs: alwaysinline
define i1 @_cont_ReportHit(%struct.TraversalData* %data, float %t, i32 %hitKind) #2 !pointeetys !45 {
  %doanyhit = fcmp fast ogt float %t, 0.000000e+00
  br i1 %doanyhit, label %anyhit, label %accepthit

anyhit:                                           ; preds = %0
  %trav_data = load %struct.TraversalData, %struct.TraversalData* %data, align 4
  %newdata = call %struct.TraversalData @_AmdAwaitAnyHit(i32 3, i32 3, i32 poison, %struct.TraversalData %trav_data)
  store %struct.TraversalData %newdata, %struct.TraversalData* %data, align 4
  ret i1 true

accepthit:                                        ; preds = %0
  call void @_AmdAcceptHitAttributes(%struct.TraversalData* %data)
  ret i1 true
}

define %struct.HitData @_cont_GetCandidateState(%struct.TraversalData* %data) #0 !pointeetys !46 {
  %resPtr = getelementptr %struct.TraversalData, %struct.TraversalData* %data, i32 0, i32 1
  %res = load %struct.HitData, %struct.HitData* %resPtr, align 4
  ret %struct.HitData %res
}

define float @_cont_RayTMin(%struct.DispatchSystemData* nocapture readnone %data, %struct.HitData* %hitData) !pointeetys !47 {
  %resPtr = getelementptr %struct.HitData, %struct.HitData* %hitData, i32 0, i32 0
  %res = load float, float* %resPtr, align 4
  ret float %res
}

define float @_cont_RayTCurrent(%struct.DispatchSystemData* nocapture readnone %data, %struct.HitData* %hitData) !pointeetys !47 {
  %resPtr = getelementptr %struct.HitData, %struct.HitData* %hitData, i32 0, i32 0
  %res = load float, float* %resPtr, align 4
  ret float %res
}

; Function Attrs: nounwind memory(none)
declare !pointeetys !49 <3 x i32> @_cont_DispatchRaysIndex3(%struct.DispatchSystemData* nocapture readnone) #3

; Function Attrs: nounwind memory(none)
declare !pointeetys !50 <3 x float> @_cont_ObjectRayOrigin3(%struct.DispatchSystemData* nocapture readnone, %struct.HitData*) #3

; Function Attrs: nounwind memory(none)
declare !pointeetys !50 <3 x float> @_cont_ObjectRayDirection3(%struct.DispatchSystemData* nocapture readnone, %struct.HitData*) #3

; Function Attrs: nounwind
declare !pointeetys !35 void @_cont_AcceptHitAndEndSearch(%struct.DispatchSystemData* nocapture readnone) #1

; Function Attrs: nounwind
define void @MyIntersectionShader() #4 !lgc.rt.shaderstage !67 {
  %1 = alloca %struct.BuiltInTriangleIntersectionAttributes, align 4
  %2 = call float @dx.op.rayTMin.f32(i32 154)
  %3 = call float @dx.op.rayTCurrent.f32(i32 154)

  %4 = bitcast %struct.BuiltInTriangleIntersectionAttributes* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #1
  %5 = call i1 @dx.op.reportHit.struct.BuiltInTriangleIntersectionAttributes(i32 158, float %3, i32 0, %struct.BuiltInTriangleIntersectionAttributes* nonnull %1)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4) #1

  ; Call some opaque, declared function that uses the value
  call void @opaqueFunc(float %2)
  call void @opaqueFunc(float %3)

  ret void
}

; Function Attrs: nounwind
declare !pointeetys !58 void @dx.op.traceRay.struct.RayPayload(i32, %dx.types.Handle, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, %struct.RayPayload*) #1

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #1

; Function Attrs: nounwind memory(none)
declare i32 @dx.op.dispatchRaysIndex.i32(i32, i8) #3

; Function Attrs: nounwind memory(none)
declare float @dx.op.objectRayDirection.f32(i32, i8) #3

; Function Attrs: nounwind memory(none)
declare float @dx.op.objectRayOrigin.f32(i32, i8) #3

declare void @dx.op.acceptHitAndEndSearch(i32) #0

; Function Attrs: nounwind
declare !pointeetys !59 i1 @dx.op.reportHit.struct.BuiltInTriangleIntersectionAttributes(i32, float, i32, %struct.BuiltInTriangleIntersectionAttributes*) #1

; Function Attrs: nounwind
declare !pointeetys !60 i1 @dx.op.reportHit.struct.LargeIntersectionAttributes(i32, float, i32, %struct.LargeIntersectionAttributes*) #1

; Function Attrs: nounwind memory(none)
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #3

; Function Attrs: nounwind memory(read)
declare %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32, %dx.types.Handle) #5

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare !pointeetys !62 void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare !pointeetys !62 void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

attributes #0 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="0" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { alwaysinline }
attributes #3 = { nounwind memory(none) }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="0" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind memory(read) }
attributes #6 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!1}
!dx.shaderModel = !{!2}
!dx.resources = !{!3}
!dx.typeAnnotations = !{!10}
!dx.entryPoints = !{!18, !20, !23, !25, !27, !29, !31}
!continuation.stackAddrspace = !{!70} ; SKIP_GLOBAL_ADDRSPACE
!lgc.rt.max.attribute.size = !{!71}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 6}
!2 = !{!"lib", i32 6, i32 6}
!3 = !{!4, !7, null, null}
!4 = !{!5}
!5 = !{i32 0, %struct.RaytracingAccelerationStructure* bitcast (%dx.types.Handle* @"\01?Scene@@3URaytracingAccelerationStructure@@A" to %struct.RaytracingAccelerationStructure*), !"Scene", i32 0, i32 0, i32 1, i32 16, i32 0, !6}
!6 = !{i32 0, i32 4}
!7 = !{!8}
!8 = !{i32 0, %"class.RWTexture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A" to %"class.RWTexture2D<vector<float, 4> >"*), !"RenderTarget", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !9}
!9 = !{i32 0, i32 9}
!10 = !{i32 1, void ()* @MyIntersectionShader, !11, void (%struct.RayPayload*, %struct.BuiltInTriangleIntersectionAttributes*)* @MyIntersectionShader, !14, void (%struct.RayPayload*, %struct.BuiltInTriangleIntersectionAttributes*)* @MyIntersectionShader, !14, void ()* @MyIntersectionShader, !11, void (%struct.RayPayload*)* @MyIntersectionShader, !17}
!11 = !{!12}
!12 = !{i32 1, !13, !13}
!13 = !{}
!14 = !{!12, !15, !16}
!15 = !{i32 2, !13, !13}
!16 = !{i32 0, !13, !13}
!17 = !{!12, !15}
!18 = !{null, !"", null, !3, !19}
!19 = !{i32 0, i64 65536}
!20 = !{void (%struct.RayPayload*, %struct.BuiltInTriangleIntersectionAttributes*)* @MyIntersectionShader, !"MyIntersectionShader", null, null, !21}
!21 = !{i32 8, i32 9, i32 6, i32 16, i32 7, i32 8, i32 5, !22}
!22 = !{i32 0}
!23 = !{void (%struct.RayPayload*, %struct.BuiltInTriangleIntersectionAttributes*)* @MyIntersectionShader, !"MyIntersectionShader", null, null, !24}
!24 = !{i32 8, i32 10, i32 6, i32 16, i32 7, i32 8, i32 5, !22}
!25 = !{void ()* @MyIntersectionShader, !"MyIntersectionShader", null, null, !26}
!26 = !{i32 8, i32 8, i32 5, !22}
!27 = !{void (%struct.RayPayload*)* @MyIntersectionShader, !"MyIntersectionShader", null, null, !28}
!28 = !{i32 8, i32 11, i32 6, i32 16, i32 5, !22}
!29 = !{void ()* @MyIntersectionShader, !"MyIntersectionShader", null, null, !30}
!30 = !{i32 8, i32 7, i32 5, !22}
!31 = !{void ()* @MyIntersectionShader, !"MyIntersectionShader", null, null, !26}
!32 = !{%struct.SystemData poison}
!33 = !{i32 0, %struct.SystemData poison}
!34 = !{%struct.SystemData poison}
!35 = !{%struct.DispatchSystemData poison}
!36 = !{i32 0, %struct.DispatchSystemData poison}
!37 = !{%struct.TraversalData poison}
!38 = !{i32 0, %struct.TraversalData poison}
!39 = !{%struct.TraversalData poison}
!40 = !{%struct.SystemData poison}
!41 = !{%struct.SystemData poison}
!42 = !{%struct.DispatchSystemData poison}
!43 = !{%struct.DispatchSystemData poison}
!44 = !{%struct.DispatchSystemData poison}
!45 = !{%struct.TraversalData poison}
!46 = !{%struct.TraversalData poison}
!47 = !{null, %struct.DispatchSystemData poison, %struct.HitData poison}
!48 = !{i32 0, %struct.HitData poison}
!49 = !{%struct.DispatchSystemData poison}
!50 = !{null, %struct.DispatchSystemData poison, %struct.HitData poison}
!51 = !{!52, !52, i64 0}
!52 = !{!"omnipotent char", !53, i64 0}
!53 = !{!"Simple C/C++ TBAA"}
!54 = !{null, %struct.RayPayload poison, %struct.BuiltInTriangleIntersectionAttributes poison}
!55 = !{i32 0, %struct.RayPayload poison}
!56 = !{i32 0, %struct.BuiltInTriangleIntersectionAttributes poison}
!57 = !{%struct.RayPayload poison}
!58 = !{%struct.RayPayload poison}
!59 = !{%struct.BuiltInTriangleIntersectionAttributes poison}
!60 = !{%struct.LargeIntersectionAttributes poison}
!61 = !{i32 0, %struct.LargeIntersectionAttributes poison}
!62 = !{i8 poison}
!63 = !{i32 0, i8 poison}
!64 = !{i32 0}
!65 = !{i32 3}
!66 = !{i32 2}
!67 = !{i32 1}
!68 = !{i32 4}
!69 = !{i32 7}
!70 = !{i32 22}
!71 = !{i32 32}
!72 = !{%struct.SystemData poison}; Intentionally allow more than the max used (7) so we can test that the actually used size is used.
; CLEANUP-NEXT-LABEL: define %struct.HitData @_cont_GetCommittedState(
; CLEANUP-NEXT-SAME: ptr [[DATA:%.*]]) #[[ATTR0:[0-9]+]] {
; CLEANUP-NEXT-NEXT:    [[RESPTR:%.*]] = getelementptr [[STRUCT_TRAVERSALDATA:%.*]], ptr [[DATA]], i32 0, i32 1
; CLEANUP-NEXT-NEXT:    [[RES:%.*]] = load [[STRUCT_HITDATA:%.*]], ptr [[RESPTR]], align 4
; CLEANUP-NEXT-NEXT:    ret [[STRUCT_HITDATA]] [[RES]]
;
;
; CLEANUP-NEXT-LABEL: define i1 @_cont_IsEndSearch(
; CLEANUP-NEXT-SAME: ptr [[DATA:%.*]]) #[[ATTR0]] {
; CLEANUP-NEXT-NEXT:    [[ISEND:%.*]] = call i1 @opaqueIsEnd()
; CLEANUP-NEXT-NEXT:    ret i1 [[ISEND]]
;
;
; CLEANUP-NEXT-LABEL: define %struct.HitObject @_cont_GlobalHitObject(
; CLEANUP-NEXT-SAME: ptr [[DATA:%.*]]) #[[ATTR0]] {
; CLEANUP-NEXT-NEXT:    [[RESPTR:%.*]] = getelementptr [[STRUCT_SYSTEMDATA:%.*]], ptr [[DATA]], i32 0, i32 1
; CLEANUP-NEXT-NEXT:    [[RES:%.*]] = load [[STRUCT_HITOBJECT:%.*]], ptr [[RESPTR]], align 4
; CLEANUP-NEXT-NEXT:    ret [[STRUCT_HITOBJECT]] [[RES]]
;
;
; CLEANUP-NEXT-LABEL: define %struct.BuiltInTriangleIntersectionAttributes @_cont_GetTriangleHitAttributes(
; CLEANUP-NEXT-SAME: ptr [[DATA:%.*]]) #[[ATTR0]] {
; CLEANUP-NEXT-NEXT:    [[ADDR:%.*]] = getelementptr [[STRUCT_SYSTEMDATA:%.*]], ptr [[DATA]], i32 0, i32 1
; CLEANUP-NEXT-NEXT:    [[VAL:%.*]] = load [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]], ptr [[ADDR]], align 4
; CLEANUP-NEXT-NEXT:    ret [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[VAL]]
;
;
; CLEANUP-NEXT-LABEL: define void @_cont_SetTriangleHitAttributes(
; CLEANUP-NEXT-SAME: ptr [[DATA:%.*]], [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]] [[VAL:%.*]]) #[[ATTR0]] {
; CLEANUP-NEXT-NEXT:    [[ADDR:%.*]] = getelementptr [[STRUCT_SYSTEMDATA:%.*]], ptr [[DATA]], i32 0, i32 1
; CLEANUP-NEXT-NEXT:    store [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[VAL]], ptr [[ADDR]], align 4
; CLEANUP-NEXT-NEXT:    ret void
;
;
; CLEANUP-NEXT-LABEL: define void @_cont_KernelEntry(
; CLEANUP-NEXT-SAME: ) #[[ATTR0]] {{.*}}.rt.shaderstage [[META35:![0-9]+]] {
; CLEANUP-NEXT-NEXT:    [[CSP:%.*]] = alloca i32, align 4
; CLEANUP-NEXT-NEXT:    [[CSPINIT:%.*]] = ptrtoint ptr @debug_global to i32
; CLEANUP-NEXT-NEXT:    store i32 [[CSPINIT]], ptr [[CSP]], align 4
; CLEANUP-NEXT-NEXT:    [[TMP1:%.*]] = load i32, ptr [[CSP]], align 4
; CLEANUP-NEXT-NEXT:    call void (...) @lgc.cps.jump(i32 0, i32 -1, i32 [[TMP1]], i32 5, i32 poison, [[STRUCT_DISPATCHSYSTEMDATA:%.*]] poison), !continuation.registercount [[META22:![0-9]+]]
; CLEANUP-NEXT-NEXT:    ret void
;
;
; CLEANUP-NEXT-LABEL: define %struct.HitData @_cont_GetCandidateState(
; CLEANUP-NEXT-SAME: ptr [[DATA:%.*]]) #[[ATTR0]] {
; CLEANUP-NEXT-NEXT:    [[RESPTR:%.*]] = getelementptr [[STRUCT_TRAVERSALDATA:%.*]], ptr [[DATA]], i32 0, i32 1
; CLEANUP-NEXT-NEXT:    [[RES:%.*]] = load [[STRUCT_HITDATA:%.*]], ptr [[RESPTR]], align 4
; CLEANUP-NEXT-NEXT:    ret [[STRUCT_HITDATA]] [[RES]]
;
;
; CLEANUP-NEXT-LABEL: define float @_cont_RayTMin(
; CLEANUP-NEXT-SAME: ptr readnone captures(none) [[DATA:%.*]], ptr [[HITDATA:%.*]]) #[[ATTR4:[0-9]+]] {
; CLEANUP-NEXT-NEXT:    [[RESPTR:%.*]] = getelementptr [[STRUCT_HITDATA:%.*]], ptr [[HITDATA]], i32 0, i32 0
; CLEANUP-NEXT-NEXT:    [[RES:%.*]] = load float, ptr [[RESPTR]], align 4
; CLEANUP-NEXT-NEXT:    ret float [[RES]]
;
;
; CLEANUP-NEXT-LABEL: define float @_cont_RayTCurrent(
; CLEANUP-NEXT-SAME: ptr readnone captures(none) [[DATA:%.*]], ptr [[HITDATA:%.*]]) #[[ATTR4]] {
; CLEANUP-NEXT-NEXT:    [[RESPTR:%.*]] = getelementptr [[STRUCT_HITDATA:%.*]], ptr [[HITDATA]], i32 0, i32 0
; CLEANUP-NEXT-NEXT:    [[RES:%.*]] = load float, ptr [[RESPTR]], align 4
; CLEANUP-NEXT-NEXT:    ret float [[RES]]
;
;
; CLEANUP-NEXT-LABEL: define void @MyIntersectionShader(
; CLEANUP-NEXT-SAME: i32 [[CSPINIT:%.*]], i32 [[SHADERINDEX:%.*]], i32 [[RETURNADDR:%.*]], [[STRUCT_TRAVERSALDATA:%.*]] [[SYSTEM_DATA:%.*]], {} [[HIT_ATTRS:%.*]], [8 x i32] [[PADDING:%.*]], [30 x i32] [[PAYLOAD:%.*]])
; CLEANUP-NEXT-SAME: #[[ATTR6:[0-9]+]] {{.*}}.rt.shaderstage [[META36:![0-9]+]] {{.*}}.cps [[META38:![0-9]+]] {{.*}}.stacksize [[META39:![0-9]+]] {{.*}}.state [[META39]] {
; CLEANUP-NEXT-NEXT:  AllocaSpillBB:
; CLEANUP-NEXT-NEXT:    [[TMP0:%.*]] = alloca [[STRUCT_HITDATA:%.*]], align 8
; CLEANUP-NEXT-NEXT:    [[SYSTEM_DATA_ALLOCA:%.*]] = alloca [[STRUCT_TRAVERSALDATA]], align 8
; CLEANUP-NEXT-NEXT:    [[HITOBJECTALLOCA:%.*]] = alloca [[STRUCT_HITOBJECT:%.*]], align 8
; CLEANUP-NEXT-NEXT:    [[CSP:%.*]] = alloca i32, align 4
; CLEANUP-NEXT-NEXT:    store i32 [[CSPINIT]], ptr [[CSP]], align 4
; CLEANUP-NEXT-NEXT:    store [[STRUCT_TRAVERSALDATA]] [[SYSTEM_DATA]], ptr [[SYSTEM_DATA_ALLOCA]], align 4
; CLEANUP-NEXT-NEXT:    [[RESPTR_I:%.*]] = getelementptr [[STRUCT_SYSTEMDATA:%.*]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1
; CLEANUP-NEXT-NEXT:    [[RES_I:%.*]] = load [[STRUCT_HITOBJECT]], ptr [[RESPTR_I]], align 4
; CLEANUP-NEXT-NEXT:    store [[STRUCT_HITOBJECT]] [[RES_I]], ptr [[HITOBJECTALLOCA]], align 4
; CLEANUP-NEXT-NEXT:    [[TMP1:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; CLEANUP-NEXT-NEXT:    [[RES_I2:%.*]] = load float, ptr [[HITOBJECTALLOCA]], align 4
; CLEANUP-NEXT-NEXT:    [[TMP2:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; CLEANUP-NEXT-NEXT:    [[TMP3:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0
; CLEANUP-NEXT-NEXT:    [[RESPTR_I3:%.*]] = getelementptr [[STRUCT_TRAVERSALDATA]], ptr [[TMP3]], i32 0, i32 1
; CLEANUP-NEXT-NEXT:    [[RES_I4:%.*]] = load [[STRUCT_HITDATA]], ptr [[RESPTR_I3]], align 4
; CLEANUP-NEXT-NEXT:    store [[STRUCT_HITDATA]] [[RES_I4]], ptr [[TMP0]], align 4
; CLEANUP-NEXT-NEXT:    [[RES_I6:%.*]] = load float, ptr [[TMP0]], align 4
; CLEANUP-NEXT-NEXT:    [[TMP4:%.*]] = load i32, ptr [[CSP]], align 4
; CLEANUP-NEXT-NEXT:    [[TMP5:%.*]] = add i32 [[TMP4]], 12
; CLEANUP-NEXT-NEXT:    store i32 [[TMP5]], ptr [[CSP]], align 4
; CLEANUP-NEXT-NEXT:    [[TMP6:%.*]] = add i32 [[TMP4]], 4
; CLEANUP-NEXT-NEXT:    [[TMP7:%.*]] = add i32 [[TMP4]], 8
; CLEANUP-NEXT-NEXT:    [[TMP8:%.*]] = inttoptr i32 [[TMP4]] to ptr addrspace(21)
; CLEANUP-NEXT-NEXT:    [[TMP9:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP8]], i32 0
; CLEANUP-NEXT-NEXT:    store i32 [[SHADERINDEX]], ptr addrspace(21) [[TMP9]], align 4
; CLEANUP-NEXT-NEXT:    [[TMP10:%.*]] = inttoptr i32 [[TMP6]] to ptr addrspace(21)
; CLEANUP-NEXT-NEXT:    [[TMP11:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP10]], i32 0
; CLEANUP-NEXT-NEXT:    store i32 [[RETURNADDR]], ptr addrspace(21) [[TMP11]], align 4
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_0_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 0
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_1_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 1
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_2_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 2
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_3_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 3
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_4_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 4
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_5_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 5
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_6_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 6
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_7_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 7
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_8_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 8
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_9_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 9
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_10_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 10
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_11_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 11
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_12_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 12
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_13_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 13
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_14_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 14
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_15_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 15
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_16_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 16
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_17_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 17
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_18_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 18
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_19_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 19
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_20_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 20
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_21_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 21
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_22_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 22
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_23_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 23
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_24_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 24
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_25_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 25
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_26_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 26
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_27_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 27
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_28_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 28
; CLEANUP-NEXT-NEXT:    [[PAYLOAD_FCA_29_EXTRACT:%.*]] = extractvalue [30 x i32] [[PAYLOAD]], 29
; CLEANUP-NEXT-NEXT:    [[SYSTEM_DATA_FCA_0_0_0_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[SYSTEM_DATA]], 0, 0, 0
; CLEANUP-NEXT-NEXT:    [[SYSTEM_DATA_FCA_0_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[SYSTEM_DATA]], 0, 1, 0
; CLEANUP-NEXT-NEXT:    [[SYSTEM_DATA_FCA_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[SYSTEM_DATA]], 1, 0
; CLEANUP-NEXT-NEXT:    [[SYSTEM_DATA_FCA_1_1_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[SYSTEM_DATA]], 1, 1
; CLEANUP-NEXT-NEXT:    [[SYSTEM_DATA_FCA_2_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[SYSTEM_DATA]], 2
; CLEANUP-NEXT-NEXT:    [[SYSTEM_DATA_FCA_3_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[SYSTEM_DATA]], 3
; CLEANUP-NEXT-NEXT:    [[SYSTEM_DATA_FCA_4_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[SYSTEM_DATA]], 4
; CLEANUP-NEXT-NEXT:    [[SYSTEM_DATA_FCA_5_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[SYSTEM_DATA]], 5
; CLEANUP-NEXT-NEXT:    call void @lgc.ilcps.setLocalRootIndex(i32 [[SHADERINDEX]])
; CLEANUP-NEXT-NEXT:    [[TMP12:%.*]] = inttoptr i32 [[TMP7]] to ptr addrspace(21)
; CLEANUP-NEXT-NEXT:    [[TMP13:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP12]], i32 0
; CLEANUP-NEXT-NEXT:    store float [[RES_I6]], ptr addrspace(21) [[TMP13]], align 4
; CLEANUP-NEXT-NEXT:    [[DOANYHIT_I:%.*]] = fcmp fast ogt float [[RES_I6]], 0.000000e+00
; CLEANUP-NEXT-NEXT:    br i1 [[DOANYHIT_I]], label [[ANYHIT_I:%.*]], label [[ACCEPTHIT_I:%.*]]
; CLEANUP-NEXT:       anyhit.i:
; CLEANUP-NEXT-NEXT:    [[TRAV_DATA_I_FCA_0_0_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] poison, <3 x i32> [[SYSTEM_DATA_FCA_0_0_0_EXTRACT]], 0, 0, 0
; CLEANUP-NEXT-NEXT:    [[TRAV_DATA_I_FCA_0_1_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_0_0_0_INSERT]], <2 x float> [[SYSTEM_DATA_FCA_0_1_0_EXTRACT]], 0, 1, 0
; CLEANUP-NEXT-NEXT:    [[TRAV_DATA_I_FCA_1_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_0_1_0_INSERT]], float [[SYSTEM_DATA_FCA_1_0_EXTRACT]], 1, 0
; CLEANUP-NEXT-NEXT:    [[TRAV_DATA_I_FCA_1_1_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_1_0_INSERT]], i32 [[SYSTEM_DATA_FCA_1_1_EXTRACT]], 1, 1
; CLEANUP-NEXT-NEXT:    [[TRAV_DATA_I_FCA_2_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_1_1_INSERT]], <3 x float> [[SYSTEM_DATA_FCA_2_EXTRACT]], 2
; CLEANUP-NEXT-NEXT:    [[TRAV_DATA_I_FCA_3_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_2_INSERT]], <3 x float> [[SYSTEM_DATA_FCA_3_EXTRACT]], 3
; CLEANUP-NEXT-NEXT:    [[TRAV_DATA_I_FCA_4_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_3_INSERT]], float [[SYSTEM_DATA_FCA_4_EXTRACT]], 4
; CLEANUP-NEXT-NEXT:    [[TRAV_DATA_I_FCA_5_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_4_INSERT]], i32 [[SYSTEM_DATA_FCA_5_EXTRACT]], 5
; CLEANUP-NEXT-NEXT:    [[DOTFCA_0_INSERT324:%.*]] = insertvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]] poison, <2 x float> undef, 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_0_INSERT:%.*]] = insertvalue [30 x i32] poison, i32 [[PAYLOAD_FCA_0_EXTRACT]], 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_1_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_0_INSERT]], i32 [[PAYLOAD_FCA_1_EXTRACT]], 1
; CLEANUP-NEXT-NEXT:    [[DOTFCA_2_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_1_INSERT]], i32 [[PAYLOAD_FCA_2_EXTRACT]], 2
; CLEANUP-NEXT-NEXT:    [[DOTFCA_3_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_2_INSERT]], i32 [[PAYLOAD_FCA_3_EXTRACT]], 3
; CLEANUP-NEXT-NEXT:    [[DOTFCA_4_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_3_INSERT]], i32 [[PAYLOAD_FCA_4_EXTRACT]], 4
; CLEANUP-NEXT-NEXT:    [[DOTFCA_5_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_4_INSERT]], i32 [[PAYLOAD_FCA_5_EXTRACT]], 5
; CLEANUP-NEXT-NEXT:    [[DOTFCA_6_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_5_INSERT]], i32 [[PAYLOAD_FCA_6_EXTRACT]], 6
; CLEANUP-NEXT-NEXT:    [[DOTFCA_7_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_6_INSERT]], i32 [[PAYLOAD_FCA_7_EXTRACT]], 7
; CLEANUP-NEXT-NEXT:    [[DOTFCA_8_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_7_INSERT]], i32 [[PAYLOAD_FCA_8_EXTRACT]], 8
; CLEANUP-NEXT-NEXT:    [[DOTFCA_9_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_8_INSERT]], i32 [[PAYLOAD_FCA_9_EXTRACT]], 9
; CLEANUP-NEXT-NEXT:    [[DOTFCA_10_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_9_INSERT]], i32 [[PAYLOAD_FCA_10_EXTRACT]], 10
; CLEANUP-NEXT-NEXT:    [[DOTFCA_11_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_10_INSERT]], i32 [[PAYLOAD_FCA_11_EXTRACT]], 11
; CLEANUP-NEXT-NEXT:    [[DOTFCA_12_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_11_INSERT]], i32 [[PAYLOAD_FCA_12_EXTRACT]], 12
; CLEANUP-NEXT-NEXT:    [[DOTFCA_13_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_12_INSERT]], i32 [[PAYLOAD_FCA_13_EXTRACT]], 13
; CLEANUP-NEXT-NEXT:    [[DOTFCA_14_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_13_INSERT]], i32 [[PAYLOAD_FCA_14_EXTRACT]], 14
; CLEANUP-NEXT-NEXT:    [[DOTFCA_15_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_14_INSERT]], i32 [[PAYLOAD_FCA_15_EXTRACT]], 15
; CLEANUP-NEXT-NEXT:    [[DOTFCA_16_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_15_INSERT]], i32 [[PAYLOAD_FCA_16_EXTRACT]], 16
; CLEANUP-NEXT-NEXT:    [[DOTFCA_17_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_16_INSERT]], i32 [[PAYLOAD_FCA_17_EXTRACT]], 17
; CLEANUP-NEXT-NEXT:    [[DOTFCA_18_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_17_INSERT]], i32 [[PAYLOAD_FCA_18_EXTRACT]], 18
; CLEANUP-NEXT-NEXT:    [[DOTFCA_19_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_18_INSERT]], i32 [[PAYLOAD_FCA_19_EXTRACT]], 19
; CLEANUP-NEXT-NEXT:    [[DOTFCA_20_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_19_INSERT]], i32 [[PAYLOAD_FCA_20_EXTRACT]], 20
; CLEANUP-NEXT-NEXT:    [[DOTFCA_21_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_20_INSERT]], i32 [[PAYLOAD_FCA_21_EXTRACT]], 21
; CLEANUP-NEXT-NEXT:    [[DOTFCA_22_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_21_INSERT]], i32 [[PAYLOAD_FCA_22_EXTRACT]], 22
; CLEANUP-NEXT-NEXT:    [[DOTFCA_23_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_22_INSERT]], i32 [[PAYLOAD_FCA_23_EXTRACT]], 23
; CLEANUP-NEXT-NEXT:    [[DOTFCA_24_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_23_INSERT]], i32 [[PAYLOAD_FCA_24_EXTRACT]], 24
; CLEANUP-NEXT-NEXT:    [[DOTFCA_25_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_24_INSERT]], i32 [[PAYLOAD_FCA_25_EXTRACT]], 25
; CLEANUP-NEXT-NEXT:    [[DOTFCA_26_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_25_INSERT]], i32 [[PAYLOAD_FCA_26_EXTRACT]], 26
; CLEANUP-NEXT-NEXT:    [[DOTFCA_27_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_26_INSERT]], i32 [[PAYLOAD_FCA_27_EXTRACT]], 27
; CLEANUP-NEXT-NEXT:    [[DOTFCA_28_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_27_INSERT]], i32 [[PAYLOAD_FCA_28_EXTRACT]], 28
; CLEANUP-NEXT-NEXT:    [[DOTFCA_29_INSERT:%.*]] = insertvalue [30 x i32] [[DOTFCA_28_INSERT]], i32 [[PAYLOAD_FCA_29_EXTRACT]], 29
; CLEANUP-NEXT-NEXT:    [[TMP14:%.*]] = call i32 (...) @lgc.cps.as.continuation.reference(ptr @MyIntersectionShader.resume.0)
; CLEANUP-NEXT-NEXT:    [[TMP15:%.*]] = load i32, ptr [[CSP]], align 4
; CLEANUP-NEXT-NEXT:    call void (...) @lgc.cps.jump(i32 3, i32 16, i32 [[TMP15]], i32 3, i32 [[TMP14]], i32 poison, [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_5_INSERT]], [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[DOTFCA_0_INSERT324]], [6 x i32] poison, [30 x i32] [[DOTFCA_29_INSERT]]), !continuation.registercount [[META32:![0-9]+]], !continuation.returnedRegistercount [[META32]]
; CLEANUP-NEXT-NEXT:    unreachable
; CLEANUP-NEXT:       accepthit.i:
; CLEANUP-NEXT-NEXT:    [[DOTSROA_0_0_VEC_EXTRACT:%.*]] = extractelement <2 x float> undef, i32 0
; CLEANUP-NEXT-NEXT:    [[TMP16:%.*]] = bitcast float [[DOTSROA_0_0_VEC_EXTRACT]] to i32
; CLEANUP-NEXT-NEXT:    [[TMP17:%.*]] = bitcast i32 [[TMP16]] to float
; CLEANUP-NEXT-NEXT:    [[DOTSROA_0327_0_VEC_INSERT:%.*]] = insertelement <2 x float> undef, float [[TMP17]], i32 0
; CLEANUP-NEXT-NEXT:    [[DOTSROA_0_4_VEC_EXTRACT:%.*]] = extractelement <2 x float> undef, i32 1
; CLEANUP-NEXT-NEXT:    [[TMP18:%.*]] = bitcast float [[DOTSROA_0_4_VEC_EXTRACT]] to i32
; CLEANUP-NEXT-NEXT:    [[TMP19:%.*]] = bitcast i32 [[TMP18]] to float
; CLEANUP-NEXT-NEXT:    [[DOTSROA_0327_4_VEC_INSERT:%.*]] = insertelement <2 x float> [[DOTSROA_0327_0_VEC_INSERT]], float [[TMP19]], i32 1
; CLEANUP-NEXT-NEXT:    [[DOTFCA_0_INSERT326:%.*]] = insertvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] poison, <2 x float> [[DOTSROA_0327_4_VEC_INSERT]], 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_0_EXTRACT275:%.*]] = extractvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[DOTFCA_0_INSERT326]], 0
; CLEANUP-NEXT-NEXT:    [[ISEND_I:%.*]] = call i1 @opaqueIsEnd()
; CLEANUP-NEXT-NEXT:    br i1 [[ISEND_I]], label [[TMP20:%.*]], label [[TMP24:%.*]]
; CLEANUP-NEXT:       20:
; CLEANUP-NEXT-NEXT:    [[DOTFCA_0_0_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] poison, <3 x i32> [[SYSTEM_DATA_FCA_0_0_0_EXTRACT]], 0, 0, 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_0_1_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_0_0_INSERT]], <2 x float> [[DOTFCA_0_EXTRACT275]], 0, 1, 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_1_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_1_0_INSERT]], float [[SYSTEM_DATA_FCA_1_0_EXTRACT]], 1, 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_1_1_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_0_INSERT]], i32 [[SYSTEM_DATA_FCA_1_1_EXTRACT]], 1, 1
; CLEANUP-NEXT-NEXT:    [[DOTFCA_2_INSERT281:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_1_INSERT]], <3 x float> [[SYSTEM_DATA_FCA_2_EXTRACT]], 2
; CLEANUP-NEXT-NEXT:    [[DOTFCA_3_INSERT283:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_2_INSERT281]], <3 x float> [[SYSTEM_DATA_FCA_3_EXTRACT]], 3
; CLEANUP-NEXT-NEXT:    [[DOTFCA_4_INSERT285:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_3_INSERT283]], float [[SYSTEM_DATA_FCA_4_EXTRACT]], 4
; CLEANUP-NEXT-NEXT:    [[DOTFCA_5_INSERT287:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_4_INSERT285]], i32 [[SYSTEM_DATA_FCA_5_EXTRACT]], 5
; CLEANUP-NEXT-NEXT:    [[DOTFCA_0_INSERT33:%.*]] = insertvalue [30 x i32] poison, i32 [[PAYLOAD_FCA_0_EXTRACT]], 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_1_INSERT36:%.*]] = insertvalue [30 x i32] [[DOTFCA_0_INSERT33]], i32 [[PAYLOAD_FCA_1_EXTRACT]], 1
; CLEANUP-NEXT-NEXT:    [[DOTFCA_2_INSERT39:%.*]] = insertvalue [30 x i32] [[DOTFCA_1_INSERT36]], i32 [[PAYLOAD_FCA_2_EXTRACT]], 2
; CLEANUP-NEXT-NEXT:    [[DOTFCA_3_INSERT42:%.*]] = insertvalue [30 x i32] [[DOTFCA_2_INSERT39]], i32 [[PAYLOAD_FCA_3_EXTRACT]], 3
; CLEANUP-NEXT-NEXT:    [[DOTFCA_4_INSERT45:%.*]] = insertvalue [30 x i32] [[DOTFCA_3_INSERT42]], i32 [[PAYLOAD_FCA_4_EXTRACT]], 4
; CLEANUP-NEXT-NEXT:    [[DOTFCA_5_INSERT48:%.*]] = insertvalue [30 x i32] [[DOTFCA_4_INSERT45]], i32 [[PAYLOAD_FCA_5_EXTRACT]], 5
; CLEANUP-NEXT-NEXT:    [[DOTFCA_6_INSERT51:%.*]] = insertvalue [30 x i32] [[DOTFCA_5_INSERT48]], i32 [[PAYLOAD_FCA_6_EXTRACT]], 6
; CLEANUP-NEXT-NEXT:    [[DOTFCA_7_INSERT54:%.*]] = insertvalue [30 x i32] [[DOTFCA_6_INSERT51]], i32 [[PAYLOAD_FCA_7_EXTRACT]], 7
; CLEANUP-NEXT-NEXT:    [[DOTFCA_8_INSERT57:%.*]] = insertvalue [30 x i32] [[DOTFCA_7_INSERT54]], i32 [[PAYLOAD_FCA_8_EXTRACT]], 8
; CLEANUP-NEXT-NEXT:    [[DOTFCA_9_INSERT60:%.*]] = insertvalue [30 x i32] [[DOTFCA_8_INSERT57]], i32 [[PAYLOAD_FCA_9_EXTRACT]], 9
; CLEANUP-NEXT-NEXT:    [[DOTFCA_10_INSERT63:%.*]] = insertvalue [30 x i32] [[DOTFCA_9_INSERT60]], i32 [[PAYLOAD_FCA_10_EXTRACT]], 10
; CLEANUP-NEXT-NEXT:    [[DOTFCA_11_INSERT66:%.*]] = insertvalue [30 x i32] [[DOTFCA_10_INSERT63]], i32 [[PAYLOAD_FCA_11_EXTRACT]], 11
; CLEANUP-NEXT-NEXT:    [[DOTFCA_12_INSERT69:%.*]] = insertvalue [30 x i32] [[DOTFCA_11_INSERT66]], i32 [[PAYLOAD_FCA_12_EXTRACT]], 12
; CLEANUP-NEXT-NEXT:    [[DOTFCA_13_INSERT72:%.*]] = insertvalue [30 x i32] [[DOTFCA_12_INSERT69]], i32 [[PAYLOAD_FCA_13_EXTRACT]], 13
; CLEANUP-NEXT-NEXT:    [[DOTFCA_14_INSERT75:%.*]] = insertvalue [30 x i32] [[DOTFCA_13_INSERT72]], i32 [[PAYLOAD_FCA_14_EXTRACT]], 14
; CLEANUP-NEXT-NEXT:    [[DOTFCA_15_INSERT78:%.*]] = insertvalue [30 x i32] [[DOTFCA_14_INSERT75]], i32 [[PAYLOAD_FCA_15_EXTRACT]], 15
; CLEANUP-NEXT-NEXT:    [[DOTFCA_16_INSERT81:%.*]] = insertvalue [30 x i32] [[DOTFCA_15_INSERT78]], i32 [[PAYLOAD_FCA_16_EXTRACT]], 16
; CLEANUP-NEXT-NEXT:    [[DOTFCA_17_INSERT84:%.*]] = insertvalue [30 x i32] [[DOTFCA_16_INSERT81]], i32 [[PAYLOAD_FCA_17_EXTRACT]], 17
; CLEANUP-NEXT-NEXT:    [[DOTFCA_18_INSERT87:%.*]] = insertvalue [30 x i32] [[DOTFCA_17_INSERT84]], i32 [[PAYLOAD_FCA_18_EXTRACT]], 18
; CLEANUP-NEXT-NEXT:    [[DOTFCA_19_INSERT90:%.*]] = insertvalue [30 x i32] [[DOTFCA_18_INSERT87]], i32 [[PAYLOAD_FCA_19_EXTRACT]], 19
; CLEANUP-NEXT-NEXT:    [[DOTFCA_20_INSERT93:%.*]] = insertvalue [30 x i32] [[DOTFCA_19_INSERT90]], i32 [[PAYLOAD_FCA_20_EXTRACT]], 20
; CLEANUP-NEXT-NEXT:    [[DOTFCA_21_INSERT96:%.*]] = insertvalue [30 x i32] [[DOTFCA_20_INSERT93]], i32 [[PAYLOAD_FCA_21_EXTRACT]], 21
; CLEANUP-NEXT-NEXT:    [[DOTFCA_22_INSERT99:%.*]] = insertvalue [30 x i32] [[DOTFCA_21_INSERT96]], i32 [[PAYLOAD_FCA_22_EXTRACT]], 22
; CLEANUP-NEXT-NEXT:    [[DOTFCA_23_INSERT102:%.*]] = insertvalue [30 x i32] [[DOTFCA_22_INSERT99]], i32 [[PAYLOAD_FCA_23_EXTRACT]], 23
; CLEANUP-NEXT-NEXT:    [[DOTFCA_24_INSERT105:%.*]] = insertvalue [30 x i32] [[DOTFCA_23_INSERT102]], i32 [[PAYLOAD_FCA_24_EXTRACT]], 24
; CLEANUP-NEXT-NEXT:    [[DOTFCA_25_INSERT108:%.*]] = insertvalue [30 x i32] [[DOTFCA_24_INSERT105]], i32 [[PAYLOAD_FCA_25_EXTRACT]], 25
; CLEANUP-NEXT-NEXT:    [[DOTFCA_26_INSERT111:%.*]] = insertvalue [30 x i32] [[DOTFCA_25_INSERT108]], i32 [[PAYLOAD_FCA_26_EXTRACT]], 26
; CLEANUP-NEXT-NEXT:    [[DOTFCA_27_INSERT114:%.*]] = insertvalue [30 x i32] [[DOTFCA_26_INSERT111]], i32 [[PAYLOAD_FCA_27_EXTRACT]], 27
; CLEANUP-NEXT-NEXT:    [[DOTFCA_28_INSERT117:%.*]] = insertvalue [30 x i32] [[DOTFCA_27_INSERT114]], i32 [[PAYLOAD_FCA_28_EXTRACT]], 28
; CLEANUP-NEXT-NEXT:    [[DOTFCA_29_INSERT120:%.*]] = insertvalue [30 x i32] [[DOTFCA_28_INSERT117]], i32 [[PAYLOAD_FCA_29_EXTRACT]], 29
; CLEANUP-NEXT-NEXT:    [[TMP21:%.*]] = load i32, ptr [[CSP]], align 4
; CLEANUP-NEXT-NEXT:    [[TMP22:%.*]] = add i32 [[TMP21]], -12
; CLEANUP-NEXT-NEXT:    store i32 [[TMP22]], ptr [[CSP]], align 4
; CLEANUP-NEXT-NEXT:    [[TMP23:%.*]] = load i32, ptr [[CSP]], align 4
; CLEANUP-NEXT-NEXT:    call void (...) @lgc.cps.jump(i32 [[RETURNADDR]], i32 8, i32 [[TMP23]], i32 poison, i32 poison, [[STRUCT_TRAVERSALDATA]] [[DOTFCA_5_INSERT287]], {} poison, [8 x i32] poison, [30 x i32] [[DOTFCA_29_INSERT120]]), !continuation.registercount [[META32]]
; CLEANUP-NEXT-NEXT:    unreachable
; CLEANUP-NEXT:       24:
; CLEANUP-NEXT-NEXT:    call void @opaqueFunc(float [[RES_I2]])
; CLEANUP-NEXT-NEXT:    call void @opaqueFunc(float [[RES_I6]])
; CLEANUP-NEXT-NEXT:    [[DOTFCA_0_0_0_INSERT290:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] poison, <3 x i32> [[SYSTEM_DATA_FCA_0_0_0_EXTRACT]], 0, 0, 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_0_1_0_INSERT293:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_0_0_INSERT290]], <2 x float> [[DOTFCA_0_EXTRACT275]], 0, 1, 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_1_0_INSERT296:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_1_0_INSERT293]], float [[SYSTEM_DATA_FCA_1_0_EXTRACT]], 1, 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_1_1_INSERT299:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_0_INSERT296]], i32 [[SYSTEM_DATA_FCA_1_1_EXTRACT]], 1, 1
; CLEANUP-NEXT-NEXT:    [[DOTFCA_2_INSERT302:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_1_INSERT299]], <3 x float> [[SYSTEM_DATA_FCA_2_EXTRACT]], 2
; CLEANUP-NEXT-NEXT:    [[DOTFCA_3_INSERT305:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_2_INSERT302]], <3 x float> [[SYSTEM_DATA_FCA_3_EXTRACT]], 3
; CLEANUP-NEXT-NEXT:    [[DOTFCA_4_INSERT308:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_3_INSERT305]], float [[SYSTEM_DATA_FCA_4_EXTRACT]], 4
; CLEANUP-NEXT-NEXT:    [[DOTFCA_5_INSERT311:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_4_INSERT308]], i32 [[SYSTEM_DATA_FCA_5_EXTRACT]], 5
; CLEANUP-NEXT-NEXT:    [[DOTFCA_0_INSERT123:%.*]] = insertvalue [30 x i32] poison, i32 [[PAYLOAD_FCA_0_EXTRACT]], 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_1_INSERT126:%.*]] = insertvalue [30 x i32] [[DOTFCA_0_INSERT123]], i32 [[PAYLOAD_FCA_1_EXTRACT]], 1
; CLEANUP-NEXT-NEXT:    [[DOTFCA_2_INSERT129:%.*]] = insertvalue [30 x i32] [[DOTFCA_1_INSERT126]], i32 [[PAYLOAD_FCA_2_EXTRACT]], 2
; CLEANUP-NEXT-NEXT:    [[DOTFCA_3_INSERT132:%.*]] = insertvalue [30 x i32] [[DOTFCA_2_INSERT129]], i32 [[PAYLOAD_FCA_3_EXTRACT]], 3
; CLEANUP-NEXT-NEXT:    [[DOTFCA_4_INSERT135:%.*]] = insertvalue [30 x i32] [[DOTFCA_3_INSERT132]], i32 [[PAYLOAD_FCA_4_EXTRACT]], 4
; CLEANUP-NEXT-NEXT:    [[DOTFCA_5_INSERT138:%.*]] = insertvalue [30 x i32] [[DOTFCA_4_INSERT135]], i32 [[PAYLOAD_FCA_5_EXTRACT]], 5
; CLEANUP-NEXT-NEXT:    [[DOTFCA_6_INSERT141:%.*]] = insertvalue [30 x i32] [[DOTFCA_5_INSERT138]], i32 [[PAYLOAD_FCA_6_EXTRACT]], 6
; CLEANUP-NEXT-NEXT:    [[DOTFCA_7_INSERT144:%.*]] = insertvalue [30 x i32] [[DOTFCA_6_INSERT141]], i32 [[PAYLOAD_FCA_7_EXTRACT]], 7
; CLEANUP-NEXT-NEXT:    [[DOTFCA_8_INSERT147:%.*]] = insertvalue [30 x i32] [[DOTFCA_7_INSERT144]], i32 [[PAYLOAD_FCA_8_EXTRACT]], 8
; CLEANUP-NEXT-NEXT:    [[DOTFCA_9_INSERT150:%.*]] = insertvalue [30 x i32] [[DOTFCA_8_INSERT147]], i32 [[PAYLOAD_FCA_9_EXTRACT]], 9
; CLEANUP-NEXT-NEXT:    [[DOTFCA_10_INSERT153:%.*]] = insertvalue [30 x i32] [[DOTFCA_9_INSERT150]], i32 [[PAYLOAD_FCA_10_EXTRACT]], 10
; CLEANUP-NEXT-NEXT:    [[DOTFCA_11_INSERT156:%.*]] = insertvalue [30 x i32] [[DOTFCA_10_INSERT153]], i32 [[PAYLOAD_FCA_11_EXTRACT]], 11
; CLEANUP-NEXT-NEXT:    [[DOTFCA_12_INSERT159:%.*]] = insertvalue [30 x i32] [[DOTFCA_11_INSERT156]], i32 [[PAYLOAD_FCA_12_EXTRACT]], 12
; CLEANUP-NEXT-NEXT:    [[DOTFCA_13_INSERT162:%.*]] = insertvalue [30 x i32] [[DOTFCA_12_INSERT159]], i32 [[PAYLOAD_FCA_13_EXTRACT]], 13
; CLEANUP-NEXT-NEXT:    [[DOTFCA_14_INSERT165:%.*]] = insertvalue [30 x i32] [[DOTFCA_13_INSERT162]], i32 [[PAYLOAD_FCA_14_EXTRACT]], 14
; CLEANUP-NEXT-NEXT:    [[DOTFCA_15_INSERT168:%.*]] = insertvalue [30 x i32] [[DOTFCA_14_INSERT165]], i32 [[PAYLOAD_FCA_15_EXTRACT]], 15
; CLEANUP-NEXT-NEXT:    [[DOTFCA_16_INSERT171:%.*]] = insertvalue [30 x i32] [[DOTFCA_15_INSERT168]], i32 [[PAYLOAD_FCA_16_EXTRACT]], 16
; CLEANUP-NEXT-NEXT:    [[DOTFCA_17_INSERT174:%.*]] = insertvalue [30 x i32] [[DOTFCA_16_INSERT171]], i32 [[PAYLOAD_FCA_17_EXTRACT]], 17
; CLEANUP-NEXT-NEXT:    [[DOTFCA_18_INSERT177:%.*]] = insertvalue [30 x i32] [[DOTFCA_17_INSERT174]], i32 [[PAYLOAD_FCA_18_EXTRACT]], 18
; CLEANUP-NEXT-NEXT:    [[DOTFCA_19_INSERT180:%.*]] = insertvalue [30 x i32] [[DOTFCA_18_INSERT177]], i32 [[PAYLOAD_FCA_19_EXTRACT]], 19
; CLEANUP-NEXT-NEXT:    [[DOTFCA_20_INSERT183:%.*]] = insertvalue [30 x i32] [[DOTFCA_19_INSERT180]], i32 [[PAYLOAD_FCA_20_EXTRACT]], 20
; CLEANUP-NEXT-NEXT:    [[DOTFCA_21_INSERT186:%.*]] = insertvalue [30 x i32] [[DOTFCA_20_INSERT183]], i32 [[PAYLOAD_FCA_21_EXTRACT]], 21
; CLEANUP-NEXT-NEXT:    [[DOTFCA_22_INSERT189:%.*]] = insertvalue [30 x i32] [[DOTFCA_21_INSERT186]], i32 [[PAYLOAD_FCA_22_EXTRACT]], 22
; CLEANUP-NEXT-NEXT:    [[DOTFCA_23_INSERT192:%.*]] = insertvalue [30 x i32] [[DOTFCA_22_INSERT189]], i32 [[PAYLOAD_FCA_23_EXTRACT]], 23
; CLEANUP-NEXT-NEXT:    [[DOTFCA_24_INSERT195:%.*]] = insertvalue [30 x i32] [[DOTFCA_23_INSERT192]], i32 [[PAYLOAD_FCA_24_EXTRACT]], 24
; CLEANUP-NEXT-NEXT:    [[DOTFCA_25_INSERT198:%.*]] = insertvalue [30 x i32] [[DOTFCA_24_INSERT195]], i32 [[PAYLOAD_FCA_25_EXTRACT]], 25
; CLEANUP-NEXT-NEXT:    [[DOTFCA_26_INSERT201:%.*]] = insertvalue [30 x i32] [[DOTFCA_25_INSERT198]], i32 [[PAYLOAD_FCA_26_EXTRACT]], 26
; CLEANUP-NEXT-NEXT:    [[DOTFCA_27_INSERT204:%.*]] = insertvalue [30 x i32] [[DOTFCA_26_INSERT201]], i32 [[PAYLOAD_FCA_27_EXTRACT]], 27
; CLEANUP-NEXT-NEXT:    [[DOTFCA_28_INSERT207:%.*]] = insertvalue [30 x i32] [[DOTFCA_27_INSERT204]], i32 [[PAYLOAD_FCA_28_EXTRACT]], 28
; CLEANUP-NEXT-NEXT:    [[DOTFCA_29_INSERT210:%.*]] = insertvalue [30 x i32] [[DOTFCA_28_INSERT207]], i32 [[PAYLOAD_FCA_29_EXTRACT]], 29
; CLEANUP-NEXT-NEXT:    [[TMP25:%.*]] = load i32, ptr [[CSP]], align 4
; CLEANUP-NEXT-NEXT:    [[TMP26:%.*]] = add i32 [[TMP25]], -12
; CLEANUP-NEXT-NEXT:    store i32 [[TMP26]], ptr [[CSP]], align 4
; CLEANUP-NEXT-NEXT:    [[TMP27:%.*]] = load i32, ptr [[CSP]], align 4
; CLEANUP-NEXT-NEXT:    call void (...) @lgc.cps.jump(i32 [[RETURNADDR]], i32 8, i32 [[TMP27]], i32 poison, i32 poison, [[STRUCT_TRAVERSALDATA]] [[DOTFCA_5_INSERT311]], {} poison, [8 x i32] poison, [30 x i32] [[DOTFCA_29_INSERT210]]), !continuation.registercount [[META32]]
; CLEANUP-NEXT-NEXT:    unreachable
;
;
; CLEANUP-NEXT-LABEL: define dso_local void @MyIntersectionShader.resume.0(
; CLEANUP-NEXT-SAME: i32 [[CSPINIT:%.*]], i32 [[TMP0:%.*]], i32 [[TMP1:%.*]], [[STRUCT_TRAVERSALDATA:%.*]] [[TMP2:%.*]], {} [[TMP3:%.*]], [8 x i32] [[TMP4:%.*]], [30 x i32] [[TMP5:%.*]]) {{.*}}.rt.shaderstage [[META36]] {{.*}}.cps [[META38]] {
; CLEANUP-NEXT-NEXT:  entryresume.0:
; CLEANUP-NEXT-NEXT:    [[SYSTEM_DATA_ALLOCA:%.*]] = alloca [[STRUCT_TRAVERSALDATA]], align 8
; CLEANUP-NEXT-NEXT:    [[HITOBJECTALLOCA:%.*]] = alloca [[STRUCT_HITOBJECT:%.*]], align 8
; CLEANUP-NEXT-NEXT:    [[CSP:%.*]] = alloca i32, align 4
; CLEANUP-NEXT-NEXT:    store i32 [[CSPINIT]], ptr [[CSP]], align 4
; CLEANUP-NEXT-NEXT:    store [[STRUCT_TRAVERSALDATA]] [[TMP2]], ptr [[SYSTEM_DATA_ALLOCA]], align 4
; CLEANUP-NEXT-NEXT:    [[RESPTR_I:%.*]] = getelementptr [[STRUCT_SYSTEMDATA:%.*]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1
; CLEANUP-NEXT-NEXT:    [[RES_I:%.*]] = load [[STRUCT_HITOBJECT]], ptr [[RESPTR_I]], align 4
; CLEANUP-NEXT-NEXT:    store [[STRUCT_HITOBJECT]] [[RES_I]], ptr [[HITOBJECTALLOCA]], align 4
; CLEANUP-NEXT-NEXT:    [[TMP6:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], ptr [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; CLEANUP-NEXT-NEXT:    [[RES_I2:%.*]] = load float, ptr [[HITOBJECTALLOCA]], align 4
; CLEANUP-NEXT-NEXT:    [[TMP7:%.*]] = load i32, ptr [[CSP]], align 4
; CLEANUP-NEXT-NEXT:    [[TMP8:%.*]] = add i32 [[TMP7]], -12
; CLEANUP-NEXT-NEXT:    [[TMP9:%.*]] = insertvalue { i32, i32, [[STRUCT_TRAVERSALDATA]], {}, [8 x i32], [30 x i32] } poison, i32 [[TMP0]], 0
; CLEANUP-NEXT-NEXT:    [[TMP10:%.*]] = insertvalue { i32, i32, [[STRUCT_TRAVERSALDATA]], {}, [8 x i32], [30 x i32] } [[TMP9]], i32 [[TMP1]], 1
; CLEANUP-NEXT-NEXT:    [[TMP11:%.*]] = insertvalue { i32, i32, [[STRUCT_TRAVERSALDATA]], {}, [8 x i32], [30 x i32] } [[TMP10]], [[STRUCT_TRAVERSALDATA]] [[TMP2]], 2
; CLEANUP-NEXT-NEXT:    [[TMP12:%.*]] = insertvalue { i32, i32, [[STRUCT_TRAVERSALDATA]], {}, [8 x i32], [30 x i32] } [[TMP11]], {} [[TMP3]], 3
; CLEANUP-NEXT-NEXT:    [[TMP13:%.*]] = insertvalue { i32, i32, [[STRUCT_TRAVERSALDATA]], {}, [8 x i32], [30 x i32] } [[TMP12]], [8 x i32] [[TMP4]], 4
; CLEANUP-NEXT-NEXT:    [[TMP14:%.*]] = insertvalue { i32, i32, [[STRUCT_TRAVERSALDATA]], {}, [8 x i32], [30 x i32] } [[TMP13]], [30 x i32] [[TMP5]], 5
; CLEANUP-NEXT-NEXT:    [[TMP15:%.*]] = inttoptr i32 [[TMP8]] to ptr addrspace(21)
; CLEANUP-NEXT-NEXT:    [[TMP16:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP15]], i32 0
; CLEANUP-NEXT-NEXT:    [[RELOAD_ROW0_SHADERINDEX_:%.*]] = load i32, ptr addrspace(21) [[TMP16]], align 4
; CLEANUP-NEXT-NEXT:    [[TMP17:%.*]] = extractvalue { i32, i32, [[STRUCT_TRAVERSALDATA]], {}, [8 x i32], [30 x i32] } [[TMP14]], 5
; CLEANUP-NEXT-NEXT:    [[DOTFCA_0_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_1_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 1
; CLEANUP-NEXT-NEXT:    [[DOTFCA_2_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 2
; CLEANUP-NEXT-NEXT:    [[DOTFCA_3_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 3
; CLEANUP-NEXT-NEXT:    [[DOTFCA_4_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 4
; CLEANUP-NEXT-NEXT:    [[DOTFCA_5_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 5
; CLEANUP-NEXT-NEXT:    [[DOTFCA_6_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 6
; CLEANUP-NEXT-NEXT:    [[DOTFCA_7_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 7
; CLEANUP-NEXT-NEXT:    [[DOTFCA_8_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 8
; CLEANUP-NEXT-NEXT:    [[DOTFCA_9_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 9
; CLEANUP-NEXT-NEXT:    [[DOTFCA_10_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 10
; CLEANUP-NEXT-NEXT:    [[DOTFCA_11_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 11
; CLEANUP-NEXT-NEXT:    [[DOTFCA_12_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 12
; CLEANUP-NEXT-NEXT:    [[DOTFCA_13_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 13
; CLEANUP-NEXT-NEXT:    [[DOTFCA_14_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 14
; CLEANUP-NEXT-NEXT:    [[DOTFCA_15_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 15
; CLEANUP-NEXT-NEXT:    [[DOTFCA_16_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 16
; CLEANUP-NEXT-NEXT:    [[DOTFCA_17_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 17
; CLEANUP-NEXT-NEXT:    [[DOTFCA_18_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 18
; CLEANUP-NEXT-NEXT:    [[DOTFCA_19_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 19
; CLEANUP-NEXT-NEXT:    [[DOTFCA_20_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 20
; CLEANUP-NEXT-NEXT:    [[DOTFCA_21_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 21
; CLEANUP-NEXT-NEXT:    [[DOTFCA_22_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 22
; CLEANUP-NEXT-NEXT:    [[DOTFCA_23_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 23
; CLEANUP-NEXT-NEXT:    [[DOTFCA_24_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 24
; CLEANUP-NEXT-NEXT:    [[DOTFCA_25_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 25
; CLEANUP-NEXT-NEXT:    [[DOTFCA_26_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 26
; CLEANUP-NEXT-NEXT:    [[DOTFCA_27_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 27
; CLEANUP-NEXT-NEXT:    [[DOTFCA_28_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 28
; CLEANUP-NEXT-NEXT:    [[DOTFCA_29_EXTRACT:%.*]] = extractvalue [30 x i32] [[TMP17]], 29
; CLEANUP-NEXT-NEXT:    [[TMP18:%.*]] = extractvalue { i32, i32, [[STRUCT_TRAVERSALDATA]], {}, [8 x i32], [30 x i32] } [[TMP14]], 2
; CLEANUP-NEXT-NEXT:    call void @lgc.ilcps.setLocalRootIndex(i32 [[RELOAD_ROW0_SHADERINDEX_]])
; CLEANUP-NEXT-NEXT:    [[DOTFCA_0_0_0_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP18]], 0, 0, 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_0_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP18]], 0, 1, 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP18]], 1, 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_1_1_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP18]], 1, 1
; CLEANUP-NEXT-NEXT:    [[DOTFCA_2_EXTRACT271:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP18]], 2
; CLEANUP-NEXT-NEXT:    [[DOTFCA_3_EXTRACT272:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP18]], 3
; CLEANUP-NEXT-NEXT:    [[DOTFCA_4_EXTRACT273:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP18]], 4
; CLEANUP-NEXT-NEXT:    [[DOTFCA_5_EXTRACT274:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP18]], 5
; CLEANUP-NEXT-NEXT:    [[ISEND_I:%.*]] = call i1 @opaqueIsEnd()
; CLEANUP-NEXT-NEXT:    br i1 [[ISEND_I]], label [[TMP19:%.*]], label [[TMP26:%.*]]
; CLEANUP-NEXT:       19:
; CLEANUP-NEXT-NEXT:    [[TMP20:%.*]] = add i32 [[TMP8]], 4
; CLEANUP-NEXT-NEXT:    [[TMP21:%.*]] = inttoptr i32 [[TMP20]] to ptr addrspace(21)
; CLEANUP-NEXT-NEXT:    [[TMP22:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP21]], i32 0
; CLEANUP-NEXT-NEXT:    [[RELOAD_ROW1_RETURNADDR_:%.*]] = load i32, ptr addrspace(21) [[TMP22]], align 4
; CLEANUP-NEXT-NEXT:    [[DOTFCA_0_0_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] poison, <3 x i32> [[DOTFCA_0_0_0_EXTRACT]], 0, 0, 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_0_1_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_0_0_INSERT]], <2 x float> [[DOTFCA_0_1_0_EXTRACT]], 0, 1, 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_1_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_1_0_INSERT]], float [[DOTFCA_1_0_EXTRACT]], 1, 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_1_1_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_0_INSERT]], i32 [[DOTFCA_1_1_EXTRACT]], 1, 1
; CLEANUP-NEXT-NEXT:    [[DOTFCA_2_INSERT281:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_1_INSERT]], <3 x float> [[DOTFCA_2_EXTRACT271]], 2
; CLEANUP-NEXT-NEXT:    [[DOTFCA_3_INSERT283:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_2_INSERT281]], <3 x float> [[DOTFCA_3_EXTRACT272]], 3
; CLEANUP-NEXT-NEXT:    [[DOTFCA_4_INSERT285:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_3_INSERT283]], float [[DOTFCA_4_EXTRACT273]], 4
; CLEANUP-NEXT-NEXT:    [[DOTFCA_5_INSERT287:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_4_INSERT285]], i32 [[DOTFCA_5_EXTRACT274]], 5
; CLEANUP-NEXT-NEXT:    [[DOTFCA_0_INSERT33:%.*]] = insertvalue [30 x i32] poison, i32 [[DOTFCA_0_EXTRACT]], 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_1_INSERT36:%.*]] = insertvalue [30 x i32] [[DOTFCA_0_INSERT33]], i32 [[DOTFCA_1_EXTRACT]], 1
; CLEANUP-NEXT-NEXT:    [[DOTFCA_2_INSERT39:%.*]] = insertvalue [30 x i32] [[DOTFCA_1_INSERT36]], i32 [[DOTFCA_2_EXTRACT]], 2
; CLEANUP-NEXT-NEXT:    [[DOTFCA_3_INSERT42:%.*]] = insertvalue [30 x i32] [[DOTFCA_2_INSERT39]], i32 [[DOTFCA_3_EXTRACT]], 3
; CLEANUP-NEXT-NEXT:    [[DOTFCA_4_INSERT45:%.*]] = insertvalue [30 x i32] [[DOTFCA_3_INSERT42]], i32 [[DOTFCA_4_EXTRACT]], 4
; CLEANUP-NEXT-NEXT:    [[DOTFCA_5_INSERT48:%.*]] = insertvalue [30 x i32] [[DOTFCA_4_INSERT45]], i32 [[DOTFCA_5_EXTRACT]], 5
; CLEANUP-NEXT-NEXT:    [[DOTFCA_6_INSERT51:%.*]] = insertvalue [30 x i32] [[DOTFCA_5_INSERT48]], i32 [[DOTFCA_6_EXTRACT]], 6
; CLEANUP-NEXT-NEXT:    [[DOTFCA_7_INSERT54:%.*]] = insertvalue [30 x i32] [[DOTFCA_6_INSERT51]], i32 [[DOTFCA_7_EXTRACT]], 7
; CLEANUP-NEXT-NEXT:    [[DOTFCA_8_INSERT57:%.*]] = insertvalue [30 x i32] [[DOTFCA_7_INSERT54]], i32 [[DOTFCA_8_EXTRACT]], 8
; CLEANUP-NEXT-NEXT:    [[DOTFCA_9_INSERT60:%.*]] = insertvalue [30 x i32] [[DOTFCA_8_INSERT57]], i32 [[DOTFCA_9_EXTRACT]], 9
; CLEANUP-NEXT-NEXT:    [[DOTFCA_10_INSERT63:%.*]] = insertvalue [30 x i32] [[DOTFCA_9_INSERT60]], i32 [[DOTFCA_10_EXTRACT]], 10
; CLEANUP-NEXT-NEXT:    [[DOTFCA_11_INSERT66:%.*]] = insertvalue [30 x i32] [[DOTFCA_10_INSERT63]], i32 [[DOTFCA_11_EXTRACT]], 11
; CLEANUP-NEXT-NEXT:    [[DOTFCA_12_INSERT69:%.*]] = insertvalue [30 x i32] [[DOTFCA_11_INSERT66]], i32 [[DOTFCA_12_EXTRACT]], 12
; CLEANUP-NEXT-NEXT:    [[DOTFCA_13_INSERT72:%.*]] = insertvalue [30 x i32] [[DOTFCA_12_INSERT69]], i32 [[DOTFCA_13_EXTRACT]], 13
; CLEANUP-NEXT-NEXT:    [[DOTFCA_14_INSERT75:%.*]] = insertvalue [30 x i32] [[DOTFCA_13_INSERT72]], i32 [[DOTFCA_14_EXTRACT]], 14
; CLEANUP-NEXT-NEXT:    [[DOTFCA_15_INSERT78:%.*]] = insertvalue [30 x i32] [[DOTFCA_14_INSERT75]], i32 [[DOTFCA_15_EXTRACT]], 15
; CLEANUP-NEXT-NEXT:    [[DOTFCA_16_INSERT81:%.*]] = insertvalue [30 x i32] [[DOTFCA_15_INSERT78]], i32 [[DOTFCA_16_EXTRACT]], 16
; CLEANUP-NEXT-NEXT:    [[DOTFCA_17_INSERT84:%.*]] = insertvalue [30 x i32] [[DOTFCA_16_INSERT81]], i32 [[DOTFCA_17_EXTRACT]], 17
; CLEANUP-NEXT-NEXT:    [[DOTFCA_18_INSERT87:%.*]] = insertvalue [30 x i32] [[DOTFCA_17_INSERT84]], i32 [[DOTFCA_18_EXTRACT]], 18
; CLEANUP-NEXT-NEXT:    [[DOTFCA_19_INSERT90:%.*]] = insertvalue [30 x i32] [[DOTFCA_18_INSERT87]], i32 [[DOTFCA_19_EXTRACT]], 19
; CLEANUP-NEXT-NEXT:    [[DOTFCA_20_INSERT93:%.*]] = insertvalue [30 x i32] [[DOTFCA_19_INSERT90]], i32 [[DOTFCA_20_EXTRACT]], 20
; CLEANUP-NEXT-NEXT:    [[DOTFCA_21_INSERT96:%.*]] = insertvalue [30 x i32] [[DOTFCA_20_INSERT93]], i32 [[DOTFCA_21_EXTRACT]], 21
; CLEANUP-NEXT-NEXT:    [[DOTFCA_22_INSERT99:%.*]] = insertvalue [30 x i32] [[DOTFCA_21_INSERT96]], i32 [[DOTFCA_22_EXTRACT]], 22
; CLEANUP-NEXT-NEXT:    [[DOTFCA_23_INSERT102:%.*]] = insertvalue [30 x i32] [[DOTFCA_22_INSERT99]], i32 [[DOTFCA_23_EXTRACT]], 23
; CLEANUP-NEXT-NEXT:    [[DOTFCA_24_INSERT105:%.*]] = insertvalue [30 x i32] [[DOTFCA_23_INSERT102]], i32 [[DOTFCA_24_EXTRACT]], 24
; CLEANUP-NEXT-NEXT:    [[DOTFCA_25_INSERT108:%.*]] = insertvalue [30 x i32] [[DOTFCA_24_INSERT105]], i32 [[DOTFCA_25_EXTRACT]], 25
; CLEANUP-NEXT-NEXT:    [[DOTFCA_26_INSERT111:%.*]] = insertvalue [30 x i32] [[DOTFCA_25_INSERT108]], i32 [[DOTFCA_26_EXTRACT]], 26
; CLEANUP-NEXT-NEXT:    [[DOTFCA_27_INSERT114:%.*]] = insertvalue [30 x i32] [[DOTFCA_26_INSERT111]], i32 [[DOTFCA_27_EXTRACT]], 27
; CLEANUP-NEXT-NEXT:    [[DOTFCA_28_INSERT117:%.*]] = insertvalue [30 x i32] [[DOTFCA_27_INSERT114]], i32 [[DOTFCA_28_EXTRACT]], 28
; CLEANUP-NEXT-NEXT:    [[DOTFCA_29_INSERT120:%.*]] = insertvalue [30 x i32] [[DOTFCA_28_INSERT117]], i32 [[DOTFCA_29_EXTRACT]], 29
; CLEANUP-NEXT-NEXT:    [[TMP23:%.*]] = load i32, ptr [[CSP]], align 4
; CLEANUP-NEXT-NEXT:    [[TMP24:%.*]] = add i32 [[TMP23]], -12
; CLEANUP-NEXT-NEXT:    store i32 [[TMP24]], ptr [[CSP]], align 4
; CLEANUP-NEXT-NEXT:    [[TMP25:%.*]] = load i32, ptr [[CSP]], align 4
; CLEANUP-NEXT-NEXT:    call void (...) @lgc.cps.jump(i32 [[RELOAD_ROW1_RETURNADDR_]], i32 8, i32 [[TMP25]], i32 poison, i32 poison, [[STRUCT_TRAVERSALDATA]] [[DOTFCA_5_INSERT287]], {} poison, [8 x i32] poison, [30 x i32] [[DOTFCA_29_INSERT120]]), !continuation.registercount [[META32]]
; CLEANUP-NEXT-NEXT:    unreachable
; CLEANUP-NEXT:       26:
; CLEANUP-NEXT-NEXT:    [[TMP27:%.*]] = add i32 [[TMP8]], 4
; CLEANUP-NEXT-NEXT:    [[TMP28:%.*]] = add i32 [[TMP8]], 8
; CLEANUP-NEXT-NEXT:    [[TMP29:%.*]] = inttoptr i32 [[TMP27]] to ptr addrspace(21)
; CLEANUP-NEXT-NEXT:    [[TMP30:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP29]], i32 0
; CLEANUP-NEXT-NEXT:    [[RELOAD_ROW1_RETURNADDR_1:%.*]] = load i32, ptr addrspace(21) [[TMP30]], align 4
; CLEANUP-NEXT-NEXT:    [[TMP31:%.*]] = inttoptr i32 [[TMP28]] to ptr addrspace(21)
; CLEANUP-NEXT-NEXT:    [[TMP32:%.*]] = getelementptr i8, ptr addrspace(21) [[TMP31]], i32 0
; CLEANUP-NEXT-NEXT:    [[RELOAD_ROW2__:%.*]] = load float, ptr addrspace(21) [[TMP32]], align 4
; CLEANUP-NEXT-NEXT:    call void @opaqueFunc(float [[RES_I2]])
; CLEANUP-NEXT-NEXT:    call void @opaqueFunc(float [[RELOAD_ROW2__]])
; CLEANUP-NEXT-NEXT:    [[DOTFCA_0_0_0_INSERT290:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] poison, <3 x i32> [[DOTFCA_0_0_0_EXTRACT]], 0, 0, 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_0_1_0_INSERT293:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_0_0_INSERT290]], <2 x float> [[DOTFCA_0_1_0_EXTRACT]], 0, 1, 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_1_0_INSERT296:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_1_0_INSERT293]], float [[DOTFCA_1_0_EXTRACT]], 1, 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_1_1_INSERT299:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_0_INSERT296]], i32 [[DOTFCA_1_1_EXTRACT]], 1, 1
; CLEANUP-NEXT-NEXT:    [[DOTFCA_2_INSERT302:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_1_INSERT299]], <3 x float> [[DOTFCA_2_EXTRACT271]], 2
; CLEANUP-NEXT-NEXT:    [[DOTFCA_3_INSERT305:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_2_INSERT302]], <3 x float> [[DOTFCA_3_EXTRACT272]], 3
; CLEANUP-NEXT-NEXT:    [[DOTFCA_4_INSERT308:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_3_INSERT305]], float [[DOTFCA_4_EXTRACT273]], 4
; CLEANUP-NEXT-NEXT:    [[DOTFCA_5_INSERT311:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_4_INSERT308]], i32 [[DOTFCA_5_EXTRACT274]], 5
; CLEANUP-NEXT-NEXT:    [[DOTFCA_0_INSERT123:%.*]] = insertvalue [30 x i32] poison, i32 [[DOTFCA_0_EXTRACT]], 0
; CLEANUP-NEXT-NEXT:    [[DOTFCA_1_INSERT126:%.*]] = insertvalue [30 x i32] [[DOTFCA_0_INSERT123]], i32 [[DOTFCA_1_EXTRACT]], 1
; CLEANUP-NEXT-NEXT:    [[DOTFCA_2_INSERT129:%.*]] = insertvalue [30 x i32] [[DOTFCA_1_INSERT126]], i32 [[DOTFCA_2_EXTRACT]], 2
; CLEANUP-NEXT-NEXT:    [[DOTFCA_3_INSERT132:%.*]] = insertvalue [30 x i32] [[DOTFCA_2_INSERT129]], i32 [[DOTFCA_3_EXTRACT]], 3
; CLEANUP-NEXT-NEXT:    [[DOTFCA_4_INSERT135:%.*]] = insertvalue [30 x i32] [[DOTFCA_3_INSERT132]], i32 [[DOTFCA_4_EXTRACT]], 4
; CLEANUP-NEXT-NEXT:    [[DOTFCA_5_INSERT138:%.*]] = insertvalue [30 x i32] [[DOTFCA_4_INSERT135]], i32 [[DOTFCA_5_EXTRACT]], 5
; CLEANUP-NEXT-NEXT:    [[DOTFCA_6_INSERT141:%.*]] = insertvalue [30 x i32] [[DOTFCA_5_INSERT138]], i32 [[DOTFCA_6_EXTRACT]], 6
; CLEANUP-NEXT-NEXT:    [[DOTFCA_7_INSERT144:%.*]] = insertvalue [30 x i32] [[DOTFCA_6_INSERT141]], i32 [[DOTFCA_7_EXTRACT]], 7
; CLEANUP-NEXT-NEXT:    [[DOTFCA_8_INSERT147:%.*]] = insertvalue [30 x i32] [[DOTFCA_7_INSERT144]], i32 [[DOTFCA_8_EXTRACT]], 8
; CLEANUP-NEXT-NEXT:    [[DOTFCA_9_INSERT150:%.*]] = insertvalue [30 x i32] [[DOTFCA_8_INSERT147]], i32 [[DOTFCA_9_EXTRACT]], 9
; CLEANUP-NEXT-NEXT:    [[DOTFCA_10_INSERT153:%.*]] = insertvalue [30 x i32] [[DOTFCA_9_INSERT150]], i32 [[DOTFCA_10_EXTRACT]], 10
; CLEANUP-NEXT-NEXT:    [[DOTFCA_11_INSERT156:%.*]] = insertvalue [30 x i32] [[DOTFCA_10_INSERT153]], i32 [[DOTFCA_11_EXTRACT]], 11
; CLEANUP-NEXT-NEXT:    [[DOTFCA_12_INSERT159:%.*]] = insertvalue [30 x i32] [[DOTFCA_11_INSERT156]], i32 [[DOTFCA_12_EXTRACT]], 12
; CLEANUP-NEXT-NEXT:    [[DOTFCA_13_INSERT162:%.*]] = insertvalue [30 x i32] [[DOTFCA_12_INSERT159]], i32 [[DOTFCA_13_EXTRACT]], 13
; CLEANUP-NEXT-NEXT:    [[DOTFCA_14_INSERT165:%.*]] = insertvalue [30 x i32] [[DOTFCA_13_INSERT162]], i32 [[DOTFCA_14_EXTRACT]], 14
; CLEANUP-NEXT-NEXT:    [[DOTFCA_15_INSERT168:%.*]] = insertvalue [30 x i32] [[DOTFCA_14_INSERT165]], i32 [[DOTFCA_15_EXTRACT]], 15
; CLEANUP-NEXT-NEXT:    [[DOTFCA_16_INSERT171:%.*]] = insertvalue [30 x i32] [[DOTFCA_15_INSERT168]], i32 [[DOTFCA_16_EXTRACT]], 16
; CLEANUP-NEXT-NEXT:    [[DOTFCA_17_INSERT174:%.*]] = insertvalue [30 x i32] [[DOTFCA_16_INSERT171]], i32 [[DOTFCA_17_EXTRACT]], 17
; CLEANUP-NEXT-NEXT:    [[DOTFCA_18_INSERT177:%.*]] = insertvalue [30 x i32] [[DOTFCA_17_INSERT174]], i32 [[DOTFCA_18_EXTRACT]], 18
; CLEANUP-NEXT-NEXT:    [[DOTFCA_19_INSERT180:%.*]] = insertvalue [30 x i32] [[DOTFCA_18_INSERT177]], i32 [[DOTFCA_19_EXTRACT]], 19
; CLEANUP-NEXT-NEXT:    [[DOTFCA_20_INSERT183:%.*]] = insertvalue [30 x i32] [[DOTFCA_19_INSERT180]], i32 [[DOTFCA_20_EXTRACT]], 20
; CLEANUP-NEXT-NEXT:    [[DOTFCA_21_INSERT186:%.*]] = insertvalue [30 x i32] [[DOTFCA_20_INSERT183]], i32 [[DOTFCA_21_EXTRACT]], 21
; CLEANUP-NEXT-NEXT:    [[DOTFCA_22_INSERT189:%.*]] = insertvalue [30 x i32] [[DOTFCA_21_INSERT186]], i32 [[DOTFCA_22_EXTRACT]], 22
; CLEANUP-NEXT-NEXT:    [[DOTFCA_23_INSERT192:%.*]] = insertvalue [30 x i32] [[DOTFCA_22_INSERT189]], i32 [[DOTFCA_23_EXTRACT]], 23
; CLEANUP-NEXT-NEXT:    [[DOTFCA_24_INSERT195:%.*]] = insertvalue [30 x i32] [[DOTFCA_23_INSERT192]], i32 [[DOTFCA_24_EXTRACT]], 24
; CLEANUP-NEXT-NEXT:    [[DOTFCA_25_INSERT198:%.*]] = insertvalue [30 x i32] [[DOTFCA_24_INSERT195]], i32 [[DOTFCA_25_EXTRACT]], 25
; CLEANUP-NEXT-NEXT:    [[DOTFCA_26_INSERT201:%.*]] = insertvalue [30 x i32] [[DOTFCA_25_INSERT198]], i32 [[DOTFCA_26_EXTRACT]], 26
; CLEANUP-NEXT-NEXT:    [[DOTFCA_27_INSERT204:%.*]] = insertvalue [30 x i32] [[DOTFCA_26_INSERT201]], i32 [[DOTFCA_27_EXTRACT]], 27
; CLEANUP-NEXT-NEXT:    [[DOTFCA_28_INSERT207:%.*]] = insertvalue [30 x i32] [[DOTFCA_27_INSERT204]], i32 [[DOTFCA_28_EXTRACT]], 28
; CLEANUP-NEXT-NEXT:    [[DOTFCA_29_INSERT210:%.*]] = insertvalue [30 x i32] [[DOTFCA_28_INSERT207]], i32 [[DOTFCA_29_EXTRACT]], 29
; CLEANUP-NEXT-NEXT:    [[TMP33:%.*]] = load i32, ptr [[CSP]], align 4
; CLEANUP-NEXT-NEXT:    [[TMP34:%.*]] = add i32 [[TMP33]], -12
; CLEANUP-NEXT-NEXT:    store i32 [[TMP34]], ptr [[CSP]], align 4
; CLEANUP-NEXT-NEXT:    [[TMP35:%.*]] = load i32, ptr [[CSP]], align 4
; CLEANUP-NEXT-NEXT:    call void (...) @lgc.cps.jump(i32 [[RELOAD_ROW1_RETURNADDR_1]], i32 8, i32 [[TMP35]], i32 poison, i32 poison, [[STRUCT_TRAVERSALDATA]] [[DOTFCA_5_INSERT311]], {} poison, [8 x i32] poison, [30 x i32] [[DOTFCA_29_INSERT210]]), !continuation.registercount [[META32]]
; CLEANUP-NEXT-NEXT:    unreachable
;
