; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --include-generated-funcs
; RUN: opt --opaque-pointers=0 --enforce-pointer-metadata=1 --verify-each -passes='add-types-metadata,dxil-cont-lgc-rt-op-converter,lint,lower-raytracing-pipeline,lint,remove-types-metadata' -S %s 2>%t0.stderr | FileCheck -check-prefix=LOWERRAYTRACINGPIPELINE %s
; RUN: count 0 < %t0.stderr
; RUN: opt --opaque-pointers=0 --enforce-pointer-metadata=1 --verify-each -passes='add-types-metadata,dxil-cont-lgc-rt-op-converter,lint,lower-raytracing-pipeline,lint,inline,lint,dxil-cont-pre-coroutine,lint,sroa,lint,lower-await,lint,coro-early,dxil-coro-split,coro-cleanup,lint,cleanup-continuations,lint,register-buffer,lint,save-continuation-state,lint,dxil-cont-post-process,lint,remove-types-metadata' -S %s 2>%t1.stderr | FileCheck -check-prefix=DXILCONTPOSTPROCESS %s
; RUN: count 0 < %t1.stderr

target datalayout = "e-m:e-p:64:32-p20:32:32-p21:32:32-i1:32-i8:8-i16:32-i32:32-i64:32-f16:32-f32:32-f64:32-v16:32-v32:32-v48:32-v64:32-v80:32-v96:32-v112:32-v128:32-v144:32-v160:32-v176:32-v192:32-v208:32-v224:32-v240:32-v256:32-n8:16:32"

%struct.HitData = type { float, i32 }
%struct.DispatchSystemData = type { <3 x i32> }
%struct.BuiltInTriangleIntersectionAttributes = type { <2 x float> }
%struct.SystemData = type { %struct.DispatchSystemData, %struct.BuiltInTriangleIntersectionAttributes }
%struct.TraversalData = type { %struct.SystemData, %struct.HitData, <3 x float>, <3 x float>, float, i64 }

declare i32 @_cont_GetContinuationStackAddr() #4
declare %struct.DispatchSystemData @_cont_SetupRayGen() #4
declare %struct.DispatchSystemData @_AmdAwaitTraversal(i64, %struct.TraversalData) #4
declare %struct.DispatchSystemData @_AmdAwaitShader(i64, %struct.DispatchSystemData) #4
declare %struct.TraversalData @_AmdAwaitAnyHit(i64, %struct.TraversalData, float, i32) #4
declare i32 @_cont_HitKind(%struct.SystemData*) #4
declare i64 @_AmdGetResumePointAddr() #1
declare %struct.HitData @_cont_GetCommittedState(%struct.SystemData*) #4
declare void @_AmdRestoreSystemData(%struct.DispatchSystemData* %data) #1
declare void @_AmdRestoreSystemDataAnyHit(%struct.TraversalData* %data) #1
declare void @_cont_AcceptHit(%struct.TraversalData* nocapture readnone %data) #1
declare void @_AmdAcceptHitAttributes(%struct.TraversalData* %data) #1

declare i1 @opaqueIsEnd() #4
define i1 @_cont_IsEndSearch(%struct.TraversalData* %data) #4 {
  %isEnd = call i1 @opaqueIsEnd()
  ret i1 %isEnd
}

define %struct.BuiltInTriangleIntersectionAttributes @_cont_GetTriangleHitAttributes(%struct.SystemData* %data) #4 {
  %addr = getelementptr %struct.SystemData, %struct.SystemData* %data, i32 0, i32 1
  %val = load %struct.BuiltInTriangleIntersectionAttributes, %struct.BuiltInTriangleIntersectionAttributes* %addr
  ret %struct.BuiltInTriangleIntersectionAttributes %val
}

define void @_cont_SetTriangleHitAttributes(%struct.SystemData* %data, %struct.BuiltInTriangleIntersectionAttributes %val) #4 {
  %addr = getelementptr %struct.SystemData, %struct.SystemData* %data, i32 0, i32 1
  store %struct.BuiltInTriangleIntersectionAttributes %val, %struct.BuiltInTriangleIntersectionAttributes* %addr
  ret void
}

define i32 @_cont_GetLocalRootIndex(%struct.DispatchSystemData* %data) #4 {
  ret i32 5
}

define void @_cont_TraceRay(%struct.DispatchSystemData* %data, i64, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float) #4 {
  %dis_data = load %struct.DispatchSystemData, %struct.DispatchSystemData* %data
  %sys_data = insertvalue %struct.SystemData undef, %struct.DispatchSystemData %dis_data, 0
  %trav_data = insertvalue %struct.TraversalData undef, %struct.SystemData %sys_data, 0
  %addr = call i64 @_AmdGetResumePointAddr() #2
  %trav_data2 = insertvalue %struct.TraversalData %trav_data, i64 %addr, 5
  %newdata = call %struct.DispatchSystemData @_AmdAwaitTraversal(i64 4, %struct.TraversalData %trav_data2)
  store %struct.DispatchSystemData %newdata, %struct.DispatchSystemData* %data
  call void @_AmdRestoreSystemData(%struct.DispatchSystemData* %data)
  ret void
}

define void @_cont_CallShader(%struct.DispatchSystemData* %data, i32) #4 {
  %dis_data = load %struct.DispatchSystemData, %struct.DispatchSystemData* %data
  %newdata = call %struct.DispatchSystemData @_AmdAwaitShader(i64 2, %struct.DispatchSystemData %dis_data)
  store %struct.DispatchSystemData %newdata, %struct.DispatchSystemData* %data
  call void @_AmdRestoreSystemData(%struct.DispatchSystemData* %data)
  ret void
}

; reporthit skeleton that conditionally either calls anyhit or directly
; accepts the hit attributes
define i1 @_cont_ReportHit(%struct.TraversalData* %data, float %t, i32 %hitKind) #5 {
  %doanyhit = fcmp fast ogt float %t, 0.000000e+00
  br i1 %doanyhit, label %anyhit, label %accepthit
anyhit:
  %trav_data = load %struct.TraversalData, %struct.TraversalData* %data
  %newdata = call %struct.TraversalData @_AmdAwaitAnyHit(i64 3, %struct.TraversalData %trav_data, float %t, i32 %hitKind)
  store %struct.TraversalData %newdata, %struct.TraversalData* %data
  call void @_AmdRestoreSystemDataAnyHit(%struct.TraversalData* %data)
  ret i1 1
accepthit:
  call void @_AmdAcceptHitAttributes(%struct.TraversalData* %data)
  ret i1 1
}

define %struct.HitData @_cont_GetCandidateState(%struct.TraversalData* %data) #4 {
  %resPtr = getelementptr %struct.TraversalData, %struct.TraversalData* %data, i32 0, i32 1
  %res = load %struct.HitData, %struct.HitData* %resPtr
  ret %struct.HitData %res
}

define float @_cont_RayTCurrent(%struct.DispatchSystemData* nocapture readnone %data, %struct.HitData* %hitData) {
  %resPtr = getelementptr %struct.HitData, %struct.HitData* %hitData, i32 0, i32 0
  %res = load float, float* %resPtr
  ret float %res
}

declare <3 x i32> @_cont_DispatchRaysIndex3(%struct.DispatchSystemData* nocapture readnone %data) #2
declare <3 x float> @_cont_ObjectRayOrigin3(%struct.DispatchSystemData* nocapture readnone %data, %struct.HitData*) #2
declare <3 x float> @_cont_ObjectRayDirection3(%struct.DispatchSystemData* nocapture readnone %data, %struct.HitData*) #2
declare void @_cont_AcceptHitAndEndSearch(%struct.DispatchSystemData* nocapture readnone %data) #1

%dx.types.Handle = type { i8* }
%struct.RayPayload = type { <4 x float> }
%dx.types.ResourceProperties = type { i32, i32 }
; Don't use maximum possible size of 8 floats to test that the actual size is used
%struct.LargeIntersectionAttributes = type { [7 x i32] }
%struct.RaytracingAccelerationStructure = type { i32 }
%"class.RWTexture2D<vector<float, 4> >" = type { <4 x float> }

@"\01?Scene@@3URaytracingAccelerationStructure@@A" = external constant %dx.types.Handle, align 4
@"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4

; Function Attrs: nounwind
define void @MyRayGen() #0 {
  %1 = load %dx.types.Handle, %dx.types.Handle* @"\01?Scene@@3URaytracingAccelerationStructure@@A", align 4
  %2 = load %dx.types.Handle, %dx.types.Handle* @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A", align 4
  %3 = alloca %struct.RayPayload, align 4
  %4 = bitcast %struct.RayPayload* %3 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %3, i32 0, i32 0
  store <4 x float> zeroinitializer, <4 x float>* %5, align 4, !tbaa !31
  %6 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %1)  ; CreateHandleForLib(Resource)
  %7 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %6, %dx.types.ResourceProperties { i32 16, i32 0 })  ; AnnotateHandle(res,props)  resource: RTAccelerationStructure
  call void @dx.op.traceRay.struct.RayPayload(i32 157, %dx.types.Handle %7, i32 16, i32 -1, i32 0, i32 1, i32 0, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3F50624DE0000000, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+04, %struct.RayPayload* nonnull %3)  ; TraceRay(AccelerationStructure,RayFlags,InstanceInclusionMask,RayContributionToHitGroupIndex,MultiplierForGeometryContributionToShaderIndex,MissShaderIndex,Origin_X,Origin_Y,Origin_Z,TMin,Direction_X,Direction_Y,Direction_Z,TMax,payload)
  %8 = load <4 x float>, <4 x float>* %5, align 4, !tbaa !31
  %9 = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 0)  ; DispatchRaysIndex(col)
  %10 = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 1)  ; DispatchRaysIndex(col)
  %11 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %2)  ; CreateHandleForLib(Resource)
  %12 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %11, %dx.types.ResourceProperties { i32 4098, i32 1033 })  ; AnnotateHandle(res,props)  resource: RWTexture2D<4xF32>
  %13 = extractelement <4 x float> %8, i64 0
  %14 = extractelement <4 x float> %8, i64 1
  %15 = extractelement <4 x float> %8, i64 2
  %16 = extractelement <4 x float> %8, i64 3
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %12, i32 %9, i32 %10, i32 undef, float %13, float %14, float %15, float %16, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  call void @llvm.lifetime.end(i64 16, i8* %4) #1
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind
define void @MyClosestHitShader(%struct.RayPayload* noalias nocapture %payload, %struct.BuiltInTriangleIntersectionAttributes* nocapture readonly %attr) #0 {
  %1 = getelementptr inbounds %struct.BuiltInTriangleIntersectionAttributes, %struct.BuiltInTriangleIntersectionAttributes* %attr, i32 0, i32 0
  %2 = load <2 x float>, <2 x float>* %1, align 4
  %3 = extractelement <2 x float> %2, i32 0
  %4 = fsub fast float 1.000000e+00, %3
  %5 = extractelement <2 x float> %2, i32 1
  %6 = fsub fast float %4, %5
  %7 = insertelement <4 x float> undef, float %6, i64 0
  %8 = insertelement <4 x float> %7, float %3, i64 1
  %9 = insertelement <4 x float> %8, float %5, i64 2
  %10 = insertelement <4 x float> %9, float 1.000000e+00, i64 3
  %11 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %payload, i32 0, i32 0
  store <4 x float> %10, <4 x float>* %11, align 4
  ret void
}

; Function Attrs: nounwind
define void @MyAnyHitShader(%struct.RayPayload* noalias nocapture %payload, %struct.BuiltInTriangleIntersectionAttributes* nocapture readnone %attr) #0 {
  %1 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %payload, i32 0, i32 0
  %2 = load <4 x float>, <4 x float>* %1, align 4
  %3 = call float @dx.op.objectRayOrigin.f32(i32 149, i8 0)  ; ObjectRayOrigin(col)
  %4 = call float @dx.op.objectRayDirection.f32(i32 150, i8 0)  ; ObjectRayDirection(col)
  %5 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %6 = fmul fast float %5, %4
  %7 = fadd fast float %6, %3
  %8 = fcmp fast ogt float %7, 0.000000e+00
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %0
  store <4 x float> %2, <4 x float>* %1, align 4
  call void @dx.op.acceptHitAndEndSearch(i32 156)  ; AcceptHitAndEndSearch()
  unreachable

; <label>:10                                      ; preds = %0
  store <4 x float> %2, <4 x float>* %1, align 4
  ret void
}

; Function Attrs: nounwind
define void @MyIntersectionShader() #0 {
  %1 = alloca %struct.BuiltInTriangleIntersectionAttributes, align 4
  %2 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %3 = bitcast %struct.BuiltInTriangleIntersectionAttributes* %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = call i1 @dx.op.reportHit.struct.BuiltInTriangleIntersectionAttributes(i32 158, float %2, i32 0, %struct.BuiltInTriangleIntersectionAttributes* nonnull %1)  ; ReportHit(THit,HitKind,Attributes)
  call void @llvm.lifetime.end(i64 8, i8* %3) #1
  ret void
}

; Function Attrs: nounwind
define void @MyIntersectionShaderLargeAttrs() #0 {
  %1 = alloca %struct.LargeIntersectionAttributes, align 4
  %2 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %ptr0 = getelementptr %struct.LargeIntersectionAttributes, %struct.LargeIntersectionAttributes* %1, i32 0, i32 0, i32 0
  store i32 100, i32* %ptr0
  %ptr1 = getelementptr %struct.LargeIntersectionAttributes, %struct.LargeIntersectionAttributes* %1, i32 0, i32 0, i32 1
  store i32 101, i32* %ptr1
  %ptr2 = getelementptr %struct.LargeIntersectionAttributes, %struct.LargeIntersectionAttributes* %1, i32 0, i32 0, i32 2
  store i32 102, i32* %ptr2
  %ptr3 = getelementptr %struct.LargeIntersectionAttributes, %struct.LargeIntersectionAttributes* %1, i32 0, i32 0, i32 3
  store i32 103, i32* %ptr3
  %ptr4 = getelementptr %struct.LargeIntersectionAttributes, %struct.LargeIntersectionAttributes* %1, i32 0, i32 0, i32 4
  store i32 104, i32* %ptr4
  %ptr5 = getelementptr %struct.LargeIntersectionAttributes, %struct.LargeIntersectionAttributes* %1, i32 0, i32 0, i32 5
  store i32 105, i32* %ptr5
  %ptr6 = getelementptr %struct.LargeIntersectionAttributes, %struct.LargeIntersectionAttributes* %1, i32 0, i32 0, i32 6
  store i32 106, i32* %ptr6
  %3 = bitcast %struct.LargeIntersectionAttributes* %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = call i1 @dx.op.reportHit.struct.LargeIntersectionAttributes(i32 158, float %2, i32 0, %struct.LargeIntersectionAttributes* nonnull %1)  ; ReportHit(THit,HitKind,Attributes)
  call void @llvm.lifetime.end(i64 8, i8* %3) #1
  ret void
}

; Function Attrs: nounwind
define void @MyMissShader(%struct.RayPayload* noalias nocapture %payload) #0 {
  %1 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %payload, i32 0, i32 0
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %1, align 4
  ret void
}

; Function Attrs: nounwind
declare void @dx.op.traceRay.struct.RayPayload(i32, %dx.types.Handle, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, %struct.RayPayload*) #1

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.dispatchRaysIndex.i32(i32, i8) #2

; Function Attrs: nounwind readnone
declare float @dx.op.objectRayDirection.f32(i32, i8) #2

; Function Attrs: nounwind readnone
declare float @dx.op.objectRayOrigin.f32(i32, i8) #2

; Function Attrs: nounwind readonly
declare float @dx.op.rayTCurrent.f32(i32) #3

; Function Attrs: noreturn nounwind
declare void @dx.op.acceptHitAndEndSearch(i32) #4

; Function Attrs: nounwind
declare i1 @dx.op.reportHit.struct.BuiltInTriangleIntersectionAttributes(i32, float, i32, %struct.BuiltInTriangleIntersectionAttributes*) #1

; Function Attrs: nounwind
declare i1 @dx.op.reportHit.struct.LargeIntersectionAttributes(i32, float, i32, %struct.LargeIntersectionAttributes*) #1

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32, %dx.types.Handle) #3

attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="0" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readonly }
attributes #4 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="0" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { alwaysinline }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!1}
!dx.shaderModel = !{!2}
!dx.resources = !{!3}
!dx.typeAnnotations = !{!10}
!dx.entryPoints = !{!18, !20, !23, !25, !27, !29, !34}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 6}
!2 = !{!"lib", i32 6, i32 6}
!3 = !{!4, !7, null, null}
!4 = !{!5}
!5 = !{i32 0, %struct.RaytracingAccelerationStructure* bitcast (%dx.types.Handle* @"\01?Scene@@3URaytracingAccelerationStructure@@A" to %struct.RaytracingAccelerationStructure*), !"Scene", i32 0, i32 0, i32 1, i32 16, i32 0, !6}
!6 = !{i32 0, i32 4}
!7 = !{!8}
!8 = !{i32 0, %"class.RWTexture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A" to %"class.RWTexture2D<vector<float, 4> >"*), !"RenderTarget", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !9}
!9 = !{i32 0, i32 9}
!10 = !{i32 1, void ()* @MyRayGen, !11, void (%struct.RayPayload*, %struct.BuiltInTriangleIntersectionAttributes*)* @MyClosestHitShader, !14, void (%struct.RayPayload*, %struct.BuiltInTriangleIntersectionAttributes*)* @MyAnyHitShader, !14, void ()* @MyIntersectionShader, !11, void (%struct.RayPayload*)* @MyMissShader, !17}
!11 = !{!12}
!12 = !{i32 1, !13, !13}
!13 = !{}
!14 = !{!12, !15, !16}
!15 = !{i32 2, !13, !13}
!16 = !{i32 0, !13, !13}
!17 = !{!12, !15}
!18 = !{null, !"", null, !3, !19}
!19 = !{i32 0, i64 65536}
!20 = !{void (%struct.RayPayload*, %struct.BuiltInTriangleIntersectionAttributes*)* @MyAnyHitShader, !"MyAnyHitShader", null, null, !21}
!21 = !{i32 8, i32 9, i32 6, i32 16, i32 7, i32 8, i32 5, !22}
!22 = !{i32 0}
!23 = !{void (%struct.RayPayload*, %struct.BuiltInTriangleIntersectionAttributes*)* @MyClosestHitShader, !"MyClosestHitShader", null, null, !24}
!24 = !{i32 8, i32 10, i32 6, i32 16, i32 7, i32 8, i32 5, !22}
!25 = !{void ()* @MyIntersectionShader, !"MyIntersectionShader", null, null, !26}
!26 = !{i32 8, i32 8, i32 5, !22}
!27 = !{void (%struct.RayPayload*)* @MyMissShader, !"MyMissShader", null, null, !28}
!28 = !{i32 8, i32 11, i32 6, i32 16, i32 5, !22}
!29 = !{void ()* @MyRayGen, !"MyRayGen", null, null, !30}
!30 = !{i32 8, i32 7, i32 5, !22}
!31 = !{!32, !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !{void ()* @MyIntersectionShaderLargeAttrs, !"MyIntersectionShaderLargeAttrs", null, null, !35}
!35 = !{i32 8, i32 8, i32 5, !22}
; LOWERRAYTRACINGPIPELINE-LABEL: @_cont_IsEndSearch(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[ISEND:%.*]] = call i1 @opaqueIsEnd()
; LOWERRAYTRACINGPIPELINE-NEXT:    ret i1 [[ISEND]]
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @_cont_GetTriangleHitAttributes(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[ADDR:%.*]] = getelementptr [[STRUCT_SYSTEMDATA:%.*]], %struct.SystemData* [[DATA:%.*]], i32 0, i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[VAL:%.*]] = load [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]], %struct.BuiltInTriangleIntersectionAttributes* [[ADDR]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    ret [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[VAL]]
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @_cont_SetTriangleHitAttributes(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[ADDR:%.*]] = getelementptr [[STRUCT_SYSTEMDATA:%.*]], %struct.SystemData* [[DATA:%.*]], i32 0, i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]] [[VAL:%.*]], %struct.BuiltInTriangleIntersectionAttributes* [[ADDR]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    ret void
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @_cont_GetLocalRootIndex(
; LOWERRAYTRACINGPIPELINE-NEXT:    ret i32 5
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @_cont_TraceRay.struct.RayPayload.attr_max_32_bytes(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[DIS_DATA:%.*]] = load [[STRUCT_DISPATCHSYSTEMDATA:%.*]], %struct.DispatchSystemData* [[DATA:%.*]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[SYS_DATA:%.*]] = insertvalue [[STRUCT_SYSTEMDATA:%.*]] undef, [[STRUCT_DISPATCHSYSTEMDATA]] [[DIS_DATA]], 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TRAV_DATA:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA:%.*]] undef, [[STRUCT_SYSTEMDATA]] [[SYS_DATA]], 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[ADDR:%.*]] = call i64 @_AmdGetResumePointAddr() #[[ATTR3:[0-9]+]]
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TRAV_DATA2:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA]], i64 [[ADDR]], 5
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP16:%.*]] = getelementptr inbounds [[STRUCT_RAYPAYLOAD:%.*]], %struct.RayPayload* [[TMP14:%.*]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP17:%.*]] = bitcast <4 x float>* [[TMP16]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP18:%.*]] = getelementptr i32, i32* [[TMP17]], i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP19:%.*]] = getelementptr i32, i32* [[TMP18]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP20:%.*]] = load i32, i32* [[TMP19]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP20]], i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_0_CALLER_OUT:%.*]], %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out*), i32 0, i32 0, i32 0), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP21:%.*]] = getelementptr i32, i32* [[TMP17]], i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP22:%.*]] = getelementptr i32, i32* [[TMP21]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP23:%.*]] = load i32, i32* [[TMP22]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP23]], i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_0_CALLER_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out*), i32 0, i32 0, i32 7), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP24:%.*]] = getelementptr i32, i32* [[TMP21]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP25:%.*]] = load i32, i32* [[TMP24]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP25]], i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_0_CALLER_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out*), i32 0, i32 0, i64 8), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP26:%.*]] = getelementptr i32, i32* [[TMP21]], i64 2
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP27:%.*]] = load i32, i32* [[TMP26]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP27]], i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_0_CALLER_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out*), i32 0, i32 0, i64 9), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP28:%.*]] = call %continuation.token* inttoptr (i64 4 to %continuation.token* ([[STRUCT_TRAVERSALDATA]])*)([[STRUCT_TRAVERSALDATA]] [[TRAV_DATA2]]), !continuation.registercount !35, !continuation.returnedRegistercount !35
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP29:%.*]] = call [[STRUCT_DISPATCHSYSTEMDATA]] @await.struct.DispatchSystemData(%continuation.token* [[TMP28]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP30:%.*]] = getelementptr inbounds [[STRUCT_RAYPAYLOAD]], %struct.RayPayload* [[TMP14]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP31:%.*]] = bitcast <4 x float>* [[TMP30]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP32:%.*]] = getelementptr i32, i32* [[TMP31]], i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP33:%.*]] = getelementptr i32, i32* [[TMP32]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP34:%.*]] = load i32, i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT:%.*]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i32 0), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP34]], i32* [[TMP33]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP35:%.*]] = getelementptr i32, i32* [[TMP31]], i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP36:%.*]] = getelementptr i32, i32* [[TMP35]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP37:%.*]] = load i32, i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i32 7), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP37]], i32* [[TMP36]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP38:%.*]] = getelementptr i32, i32* [[TMP35]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP39:%.*]] = load i32, i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i64 8), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP39]], i32* [[TMP38]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP40:%.*]] = getelementptr i32, i32* [[TMP35]], i64 2
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP41:%.*]] = load i32, i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i64 9), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP41]], i32* [[TMP40]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[STRUCT_DISPATCHSYSTEMDATA]] [[TMP29]], %struct.DispatchSystemData* [[DATA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[LOCAL_ROOT_INDEX:%.*]] = call i32 @_cont_GetLocalRootIndex(%struct.DispatchSystemData* [[DATA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @amd.dx.setLocalRootIndex(i32 [[LOCAL_ROOT_INDEX]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @_AmdRestoreSystemData(%struct.DispatchSystemData* [[DATA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    ret void
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @_cont_TraceRay(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[DIS_DATA:%.*]] = load [[STRUCT_DISPATCHSYSTEMDATA:%.*]], %struct.DispatchSystemData* [[DATA:%.*]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[SYS_DATA:%.*]] = insertvalue [[STRUCT_SYSTEMDATA:%.*]] undef, [[STRUCT_DISPATCHSYSTEMDATA]] [[DIS_DATA]], 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TRAV_DATA:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA:%.*]] undef, [[STRUCT_SYSTEMDATA]] [[SYS_DATA]], 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[ADDR:%.*]] = call i64 @_AmdGetResumePointAddr() #[[ATTR3]]
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TRAV_DATA2:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA]], i64 [[ADDR]], 5
; LOWERRAYTRACINGPIPELINE-NEXT:    [[NEWDATA:%.*]] = call [[STRUCT_DISPATCHSYSTEMDATA]] @_AmdAwaitTraversal(i64 4, [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA2]])
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[STRUCT_DISPATCHSYSTEMDATA]] [[NEWDATA]], %struct.DispatchSystemData* [[DATA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[LOCAL_ROOT_INDEX:%.*]] = call i32 @_cont_GetLocalRootIndex(%struct.DispatchSystemData* [[DATA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @amd.dx.setLocalRootIndex(i32 [[LOCAL_ROOT_INDEX]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @_AmdRestoreSystemData(%struct.DispatchSystemData* [[DATA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    ret void
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @_cont_CallShader(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[DIS_DATA:%.*]] = load [[STRUCT_DISPATCHSYSTEMDATA:%.*]], %struct.DispatchSystemData* [[DATA:%.*]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[NEWDATA:%.*]] = call [[STRUCT_DISPATCHSYSTEMDATA]] @_AmdAwaitShader(i64 2, [[STRUCT_DISPATCHSYSTEMDATA]] [[DIS_DATA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[STRUCT_DISPATCHSYSTEMDATA]] [[NEWDATA]], %struct.DispatchSystemData* [[DATA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[LOCAL_ROOT_INDEX:%.*]] = call i32 @_cont_GetLocalRootIndex(%struct.DispatchSystemData* [[DATA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @amd.dx.setLocalRootIndex(i32 [[LOCAL_ROOT_INDEX]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @_AmdRestoreSystemData(%struct.DispatchSystemData* [[DATA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    ret void
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @_cont_ReportHit.struct.BuiltInTriangleIntersectionAttributes(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP2:%.*]] = alloca [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[DOANYHIT:%.*]] = fcmp fast ogt float [[T:%.*]], 0.000000e+00
; LOWERRAYTRACINGPIPELINE-NEXT:    br i1 [[DOANYHIT]], label [[ANYHIT:%.*]], label [[ACCEPTHIT:%.*]]
; LOWERRAYTRACINGPIPELINE:       anyhit:
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TRAV_DATA:%.*]] = load [[STRUCT_TRAVERSALDATA:%.*]], %struct.TraversalData* [[DATA:%.*]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP3:%.*]] = load [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]], %struct.BuiltInTriangleIntersectionAttributes* [[TMP0:%.*]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP4:%.*]] = call %continuation.token* inttoptr (i64 3 to %continuation.token* ([[STRUCT_TRAVERSALDATA]], float, i32, [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]])*)([[STRUCT_TRAVERSALDATA]] [[TRAV_DATA]], float [[T]], i32 [[HITKIND:%.*]], [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[TMP3]]), !continuation.registercount !33, !continuation.returnedRegistercount !33
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP5:%.*]] = call [[STRUCT_TRAVERSALDATA]] @await.struct.TraversalData(%continuation.token* [[TMP4]])
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[STRUCT_TRAVERSALDATA]] [[TMP5]], %struct.TraversalData* [[DATA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP6:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[DATA]], i32 0, i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[LOCAL_ROOT_INDEX:%.*]] = call i32 @_cont_GetLocalRootIndex(%struct.DispatchSystemData* [[TMP6]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @amd.dx.setLocalRootIndex(i32 [[LOCAL_ROOT_INDEX]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @_AmdRestoreSystemDataAnyHit(%struct.TraversalData* [[DATA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    ret i1 true
; LOWERRAYTRACINGPIPELINE:       accepthit:
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP7:%.*]] = bitcast %struct.BuiltInTriangleIntersectionAttributes* [[TMP2]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP8:%.*]] = bitcast %struct.BuiltInTriangleIntersectionAttributes* [[TMP0]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP9:%.*]] = getelementptr inbounds i32, i32* [[TMP8]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP10:%.*]] = getelementptr inbounds i32, i32* [[TMP7]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP11:%.*]] = load i32, i32* [[TMP9]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP11]], i32* [[TMP10]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP12:%.*]] = getelementptr inbounds i32, i32* [[TMP8]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP13:%.*]] = getelementptr inbounds i32, i32* [[TMP7]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP14:%.*]] = load i32, i32* [[TMP12]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP14]], i32* [[TMP13]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP15:%.*]] = load [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]], %struct.BuiltInTriangleIntersectionAttributes* [[TMP2]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP16:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[DATA]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @_cont_SetTriangleHitAttributes(%struct.SystemData* [[TMP16]], [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[TMP15]])
; LOWERRAYTRACINGPIPELINE-NEXT:    ret i1 true
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @_cont_ReportHit.struct.LargeIntersectionAttributes(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP2:%.*]] = alloca [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[DOANYHIT:%.*]] = fcmp fast ogt float [[T:%.*]], 0.000000e+00
; LOWERRAYTRACINGPIPELINE-NEXT:    br i1 [[DOANYHIT]], label [[ANYHIT:%.*]], label [[ACCEPTHIT:%.*]]
; LOWERRAYTRACINGPIPELINE:       anyhit:
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TRAV_DATA:%.*]] = load [[STRUCT_TRAVERSALDATA:%.*]], %struct.TraversalData* [[DATA:%.*]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP3:%.*]] = load [[STRUCT_LARGEINTERSECTIONATTRIBUTES:%.*]], %struct.LargeIntersectionAttributes* [[TMP0:%.*]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP4:%.*]] = call %continuation.token* inttoptr (i64 3 to %continuation.token* ([[STRUCT_TRAVERSALDATA]], float, i32, [[STRUCT_LARGEINTERSECTIONATTRIBUTES]])*)([[STRUCT_TRAVERSALDATA]] [[TRAV_DATA]], float [[T]], i32 [[HITKIND:%.*]], [[STRUCT_LARGEINTERSECTIONATTRIBUTES]] [[TMP3]]), !continuation.registercount !33, !continuation.returnedRegistercount !33
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP5:%.*]] = call [[STRUCT_TRAVERSALDATA]] @await.struct.TraversalData(%continuation.token* [[TMP4]])
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[STRUCT_TRAVERSALDATA]] [[TMP5]], %struct.TraversalData* [[DATA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP6:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[DATA]], i32 0, i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[LOCAL_ROOT_INDEX:%.*]] = call i32 @_cont_GetLocalRootIndex(%struct.DispatchSystemData* [[TMP6]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @amd.dx.setLocalRootIndex(i32 [[LOCAL_ROOT_INDEX]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @_AmdRestoreSystemDataAnyHit(%struct.TraversalData* [[DATA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    ret i1 true
; LOWERRAYTRACINGPIPELINE:       accepthit:
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP7:%.*]] = bitcast %struct.BuiltInTriangleIntersectionAttributes* [[TMP2]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP8:%.*]] = bitcast %struct.LargeIntersectionAttributes* [[TMP0]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP9:%.*]] = getelementptr inbounds i32, i32* [[TMP8]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP10:%.*]] = getelementptr inbounds i32, i32* [[TMP7]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP11:%.*]] = load i32, i32* [[TMP9]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP11]], i32* [[TMP10]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP12:%.*]] = getelementptr inbounds i32, i32* [[TMP8]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP13:%.*]] = getelementptr inbounds i32, i32* [[TMP7]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP14:%.*]] = load i32, i32* [[TMP12]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP14]], i32* [[TMP13]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP15:%.*]] = getelementptr inbounds i32, i32* [[TMP8]], i64 2
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP16:%.*]] = load i32, i32* [[TMP15]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP16]], i32* getelementptr inbounds ([30 x i32], [30 x i32]* @PAYLOAD, i32 0, i32 1), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP17:%.*]] = getelementptr inbounds i32, i32* [[TMP8]], i64 3
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP18:%.*]] = load i32, i32* [[TMP17]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP18]], i32* getelementptr inbounds ([30 x i32], [30 x i32]* @PAYLOAD, i32 0, i64 2), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP19:%.*]] = getelementptr inbounds i32, i32* [[TMP8]], i64 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP20:%.*]] = load i32, i32* [[TMP19]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP20]], i32* getelementptr inbounds ([30 x i32], [30 x i32]* @PAYLOAD, i32 0, i64 3), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP21:%.*]] = getelementptr inbounds i32, i32* [[TMP8]], i64 5
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP22:%.*]] = load i32, i32* [[TMP21]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP22]], i32* getelementptr inbounds ([30 x i32], [30 x i32]* @PAYLOAD, i32 0, i64 4), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP23:%.*]] = getelementptr inbounds i32, i32* [[TMP8]], i64 6
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP24:%.*]] = load i32, i32* [[TMP23]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP24]], i32* getelementptr inbounds ([30 x i32], [30 x i32]* @PAYLOAD, i32 0, i64 5), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP25:%.*]] = load [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]], %struct.BuiltInTriangleIntersectionAttributes* [[TMP2]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP26:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[DATA]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @_cont_SetTriangleHitAttributes(%struct.SystemData* [[TMP26]], [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[TMP25]])
; LOWERRAYTRACINGPIPELINE-NEXT:    ret i1 true
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @_cont_ReportHit(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[DOANYHIT:%.*]] = fcmp fast ogt float [[T:%.*]], 0.000000e+00
; LOWERRAYTRACINGPIPELINE-NEXT:    br i1 [[DOANYHIT]], label [[ANYHIT:%.*]], label [[ACCEPTHIT:%.*]]
; LOWERRAYTRACINGPIPELINE:       anyhit:
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TRAV_DATA:%.*]] = load [[STRUCT_TRAVERSALDATA:%.*]], %struct.TraversalData* [[DATA:%.*]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[NEWDATA:%.*]] = call [[STRUCT_TRAVERSALDATA]] @_AmdAwaitAnyHit(i64 3, [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA]], float [[T]], i32 [[HITKIND:%.*]])
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[STRUCT_TRAVERSALDATA]] [[NEWDATA]], %struct.TraversalData* [[DATA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP1:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[DATA]], i32 0, i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[LOCAL_ROOT_INDEX:%.*]] = call i32 @_cont_GetLocalRootIndex(%struct.DispatchSystemData* [[TMP1]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @amd.dx.setLocalRootIndex(i32 [[LOCAL_ROOT_INDEX]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @_AmdRestoreSystemDataAnyHit(%struct.TraversalData* [[DATA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    ret i1 true
; LOWERRAYTRACINGPIPELINE:       accepthit:
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @_AmdAcceptHitAttributes(%struct.TraversalData* [[DATA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    ret i1 true
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @_cont_GetCandidateState(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RESPTR:%.*]] = getelementptr [[STRUCT_TRAVERSALDATA:%.*]], %struct.TraversalData* [[DATA:%.*]], i32 0, i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RES:%.*]] = load [[STRUCT_HITDATA:%.*]], %struct.HitData* [[RESPTR]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    ret [[STRUCT_HITDATA]] [[RES]]
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @_cont_RayTCurrent(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RESPTR:%.*]] = getelementptr [[STRUCT_HITDATA:%.*]], %struct.HitData* [[HITDATA:%.*]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RES:%.*]] = load float, float* [[RESPTR]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    ret float [[RES]]
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @MyRayGen(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[SYSTEM_DATA_ALLOCA:%.*]] = alloca [[STRUCT_DISPATCHSYSTEMDATA:%.*]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP1:%.*]] = call [[STRUCT_DISPATCHSYSTEMDATA]] @continuations.getSystemData.s_struct.DispatchSystemDatas()
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[STRUCT_DISPATCHSYSTEMDATA]] [[TMP1]], %struct.DispatchSystemData* [[SYSTEM_DATA_ALLOCA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[LOCAL_ROOT_INDEX:%.*]] = call i32 @_cont_GetLocalRootIndex(%struct.DispatchSystemData* [[SYSTEM_DATA_ALLOCA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @amd.dx.setLocalRootIndex(i32 [[LOCAL_ROOT_INDEX]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP2:%.*]] = load [[DX_TYPES_HANDLE:%.*]], %dx.types.Handle* @"\01?Scene@@3URaytracingAccelerationStructure@@A", align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP3:%.*]] = load [[DX_TYPES_HANDLE]], %dx.types.Handle* @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A", align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP4:%.*]] = alloca [[STRUCT_RAYPAYLOAD:%.*]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP5:%.*]] = bitcast %struct.RayPayload* [[TMP4]] to i8*
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @llvm.lifetime.start.p0i8(i64 16, i8* [[TMP5]]) #[[ATTR1:[0-9]+]]
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP6:%.*]] = getelementptr inbounds [[STRUCT_RAYPAYLOAD]], %struct.RayPayload* [[TMP4]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    store <4 x float> zeroinitializer, <4 x float>* [[TMP6]], align 4, !tbaa [[TBAA37:![0-9]+]]
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP7:%.*]] = call [[DX_TYPES_HANDLE]] @dx.op.createHandleForLib.dx.types.Handle(i32 160, [[DX_TYPES_HANDLE]] [[TMP2]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP8:%.*]] = call [[DX_TYPES_HANDLE]] @dx.op.annotateHandle(i32 216, [[DX_TYPES_HANDLE]] [[TMP7]], [[DX_TYPES_RESOURCEPROPERTIES:%.*]] { i32 16, i32 0 })
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP9:%.*]] = call i64 @amd.dx.getAccelStructAddr([[DX_TYPES_HANDLE]] [[TMP8]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @_cont_TraceRay.struct.RayPayload.attr_max_32_bytes(%struct.DispatchSystemData* [[SYSTEM_DATA_ALLOCA]], i64 [[TMP9]], i32 16, i32 -1, i32 0, i32 1, i32 0, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3F50624DE0000000, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+04, %struct.RayPayload* [[TMP4]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP10:%.*]] = load <4 x float>, <4 x float>* [[TMP6]], align 4, !tbaa [[TBAA37]]
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP11:%.*]] = call <3 x i32> @lgc.rt.dispatch.rays.index()
; LOWERRAYTRACINGPIPELINE-NEXT:    [[EXTRACT:%.*]] = extractelement <3 x i32> [[TMP11]], i8 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP12:%.*]] = call <3 x i32> @lgc.rt.dispatch.rays.index()
; LOWERRAYTRACINGPIPELINE-NEXT:    [[EXTRACT1:%.*]] = extractelement <3 x i32> [[TMP12]], i8 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP13:%.*]] = call [[DX_TYPES_HANDLE]] @dx.op.createHandleForLib.dx.types.Handle(i32 160, [[DX_TYPES_HANDLE]] [[TMP3]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP14:%.*]] = call [[DX_TYPES_HANDLE]] @dx.op.annotateHandle(i32 216, [[DX_TYPES_HANDLE]] [[TMP13]], [[DX_TYPES_RESOURCEPROPERTIES]] { i32 4098, i32 1033 })
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP15:%.*]] = extractelement <4 x float> [[TMP10]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP16:%.*]] = extractelement <4 x float> [[TMP10]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP17:%.*]] = extractelement <4 x float> [[TMP10]], i64 2
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP18:%.*]] = extractelement <4 x float> [[TMP10]], i64 3
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @dx.op.textureStore.f32(i32 67, [[DX_TYPES_HANDLE]] [[TMP14]], i32 [[EXTRACT]], i32 [[EXTRACT1]], i32 undef, float [[TMP15]], float [[TMP16]], float [[TMP17]], float [[TMP18]], i8 15)
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @llvm.lifetime.end.p0i8(i64 16, i8* [[TMP5]]) #[[ATTR1]]
; LOWERRAYTRACINGPIPELINE-NEXT:    ret void
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @MyClosestHitShader(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP2:%.*]] = alloca [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[SYSTEM_DATA_ALLOCA:%.*]] = alloca [[STRUCT_SYSTEMDATA:%.*]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP3:%.*]] = alloca [[STRUCT_RAYPAYLOAD:%.*]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[HITATTRS:%.*]] = alloca [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP4:%.*]] = call [[STRUCT_SYSTEMDATA]] @continuations.getSystemData.s_struct.SystemDatas()
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[STRUCT_SYSTEMDATA]] [[TMP4]], %struct.SystemData* [[SYSTEM_DATA_ALLOCA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP5:%.*]] = getelementptr inbounds [[STRUCT_SYSTEMDATA]], %struct.SystemData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[LOCAL_ROOT_INDEX:%.*]] = call i32 @_cont_GetLocalRootIndex(%struct.DispatchSystemData* [[TMP5]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @amd.dx.setLocalRootIndex(i32 [[LOCAL_ROOT_INDEX]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP6:%.*]] = getelementptr inbounds [[STRUCT_RAYPAYLOAD]], %struct.RayPayload* [[TMP3]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP7:%.*]] = bitcast <4 x float>* [[TMP6]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP8:%.*]] = getelementptr i32, i32* [[TMP7]], i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP9:%.*]] = getelementptr i32, i32* [[TMP8]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP10:%.*]] = load i32, i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S:%.*]], %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s*), i32 0, i32 0, i32 0), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP10]], i32* [[TMP9]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP11:%.*]] = getelementptr i32, i32* [[TMP7]], i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP12:%.*]] = getelementptr i32, i32* [[TMP11]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP13:%.*]] = load i32, i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]], %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s*), i32 0, i32 0, i32 7), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP13]], i32* [[TMP12]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP14:%.*]] = getelementptr i32, i32* [[TMP11]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP15:%.*]] = load i32, i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]], %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s*), i32 0, i32 0, i64 8), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP15]], i32* [[TMP14]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP16:%.*]] = getelementptr i32, i32* [[TMP11]], i64 2
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP17:%.*]] = load i32, i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]], %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s*), i32 0, i32 0, i64 9), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP17]], i32* [[TMP16]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    call void (...) @registerbuffer.setpointerbarrier([30 x i32]* @PAYLOAD)
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP18:%.*]] = bitcast %struct.BuiltInTriangleIntersectionAttributes* [[TMP2]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP19:%.*]] = call [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] @_cont_GetTriangleHitAttributes(%struct.SystemData* [[SYSTEM_DATA_ALLOCA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[TMP19]], %struct.BuiltInTriangleIntersectionAttributes* [[TMP2]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP20:%.*]] = bitcast %struct.BuiltInTriangleIntersectionAttributes* [[HITATTRS]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP21:%.*]] = getelementptr inbounds i32, i32* [[TMP20]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP22:%.*]] = getelementptr inbounds i32, i32* [[TMP18]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP23:%.*]] = load i32, i32* [[TMP22]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP23]], i32* [[TMP21]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP24:%.*]] = getelementptr inbounds i32, i32* [[TMP20]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP25:%.*]] = getelementptr inbounds i32, i32* [[TMP18]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP26:%.*]] = load i32, i32* [[TMP25]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP26]], i32* [[TMP24]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP27:%.*]] = getelementptr inbounds [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]], %struct.BuiltInTriangleIntersectionAttributes* [[HITATTRS]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP28:%.*]] = load <2 x float>, <2 x float>* [[TMP27]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP29:%.*]] = extractelement <2 x float> [[TMP28]], i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP30:%.*]] = fsub fast float 1.000000e+00, [[TMP29]]
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP31:%.*]] = extractelement <2 x float> [[TMP28]], i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP32:%.*]] = fsub fast float [[TMP30]], [[TMP31]]
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP33:%.*]] = insertelement <4 x float> undef, float [[TMP32]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP34:%.*]] = insertelement <4 x float> [[TMP33]], float [[TMP29]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP35:%.*]] = insertelement <4 x float> [[TMP34]], float [[TMP31]], i64 2
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP36:%.*]] = insertelement <4 x float> [[TMP35]], float 1.000000e+00, i64 3
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP37:%.*]] = getelementptr inbounds [[STRUCT_RAYPAYLOAD]], %struct.RayPayload* [[TMP3]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    store <4 x float> [[TMP36]], <4 x float>* [[TMP37]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    call void (...) @registerbuffer.setpointerbarrier([30 x i32]* @PAYLOAD)
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP38:%.*]] = getelementptr inbounds [[STRUCT_RAYPAYLOAD]], %struct.RayPayload* [[TMP3]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP39:%.*]] = bitcast <4 x float>* [[TMP38]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP40:%.*]] = getelementptr i32, i32* [[TMP39]], i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP41:%.*]] = getelementptr i32, i32* [[TMP40]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP42:%.*]] = load i32, i32* [[TMP41]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP42]], i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT:%.*]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i32 0), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP43:%.*]] = getelementptr i32, i32* [[TMP39]], i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP44:%.*]] = getelementptr i32, i32* [[TMP43]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP45:%.*]] = load i32, i32* [[TMP44]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP45]], i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i32 7), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP46:%.*]] = getelementptr i32, i32* [[TMP43]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP47:%.*]] = load i32, i32* [[TMP46]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP47]], i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i64 8), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP48:%.*]] = getelementptr i32, i32* [[TMP43]], i64 2
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP49:%.*]] = load i32, i32* [[TMP48]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP49]], i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i64 9), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP50:%.*]] = getelementptr inbounds [[STRUCT_SYSTEMDATA]], %struct.SystemData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP51:%.*]] = load [[STRUCT_DISPATCHSYSTEMDATA:%.*]], %struct.DispatchSystemData* [[TMP50]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    ret [[STRUCT_DISPATCHSYSTEMDATA]] [[TMP51]], !continuation.registercount !35
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @MyAnyHitShader(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP3:%.*]] = alloca [[STRUCT_HITDATA:%.*]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP4:%.*]] = alloca [[STRUCT_HITDATA]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP5:%.*]] = alloca [[STRUCT_HITDATA]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP6:%.*]] = alloca [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP7:%.*]] = alloca [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP8:%.*]] = alloca [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[SYSTEM_DATA_ALLOCA:%.*]] = alloca [[STRUCT_TRAVERSALDATA:%.*]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP9:%.*]] = alloca [[STRUCT_RAYPAYLOAD:%.*]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[ORIGHITATTRS:%.*]] = alloca [8 x i32], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[HITATTRSALLOCA:%.*]] = alloca [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP10:%.*]] = call [[STRUCT_TRAVERSALDATA]] @continuations.getSystemData.s_struct.TraversalDatas()
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[STRUCT_TRAVERSALDATA]] [[TMP10]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP11:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[LOCAL_ROOT_INDEX:%.*]] = call i32 @_cont_GetLocalRootIndex(%struct.DispatchSystemData* [[TMP11]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @amd.dx.setLocalRootIndex(i32 [[LOCAL_ROOT_INDEX]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP12:%.*]] = getelementptr inbounds [[STRUCT_RAYPAYLOAD]], %struct.RayPayload* [[TMP9]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP13:%.*]] = bitcast <4 x float>* [[TMP12]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP14:%.*]] = getelementptr i32, i32* [[TMP13]], i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP15:%.*]] = getelementptr i32, i32* [[TMP14]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP16:%.*]] = load i32, i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_1_ANYHIT_IN:%.*]], %struct.RayPayload.attr_max_8_i32s.layout_1_anyhit_in* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_1_anyhit_in*), i32 0, i32 0, i32 0), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP16]], i32* [[TMP15]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP17:%.*]] = getelementptr i32, i32* [[TMP13]], i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP18:%.*]] = getelementptr i32, i32* [[TMP17]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP19:%.*]] = load i32, i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_1_ANYHIT_IN]], %struct.RayPayload.attr_max_8_i32s.layout_1_anyhit_in* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_1_anyhit_in*), i32 0, i32 0, i32 7), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP19]], i32* [[TMP18]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP20:%.*]] = getelementptr i32, i32* [[TMP17]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP21:%.*]] = load i32, i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_1_ANYHIT_IN]], %struct.RayPayload.attr_max_8_i32s.layout_1_anyhit_in* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_1_anyhit_in*), i32 0, i32 0, i64 8), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP21]], i32* [[TMP20]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP22:%.*]] = getelementptr i32, i32* [[TMP17]], i64 2
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP23:%.*]] = load i32, i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_1_ANYHIT_IN]], %struct.RayPayload.attr_max_8_i32s.layout_1_anyhit_in* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_1_anyhit_in*), i32 0, i32 0, i64 9), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP23]], i32* [[TMP22]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    call void (...) @registerbuffer.setpointerbarrier([30 x i32]* @PAYLOAD)
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP24:%.*]] = bitcast %struct.BuiltInTriangleIntersectionAttributes* [[TMP8]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP25:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP26:%.*]] = call [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] @_cont_GetTriangleHitAttributes(%struct.SystemData* [[TMP25]])
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[TMP26]], %struct.BuiltInTriangleIntersectionAttributes* [[TMP8]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP27:%.*]] = bitcast [8 x i32]* [[ORIGHITATTRS]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP28:%.*]] = getelementptr inbounds i32, i32* [[TMP27]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP29:%.*]] = getelementptr inbounds i32, i32* [[TMP24]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP30:%.*]] = load i32, i32* [[TMP29]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP30]], i32* [[TMP28]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP31:%.*]] = getelementptr inbounds i32, i32* [[TMP27]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP32:%.*]] = getelementptr inbounds i32, i32* [[TMP24]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP33:%.*]] = load i32, i32* [[TMP32]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP33]], i32* [[TMP31]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[TMP1:%.*]], %struct.BuiltInTriangleIntersectionAttributes* [[HITATTRSALLOCA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP34:%.*]] = getelementptr inbounds [[STRUCT_RAYPAYLOAD]], %struct.RayPayload* [[TMP9]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP35:%.*]] = load <4 x float>, <4 x float>* [[TMP34]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP36:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP37:%.*]] = call [[STRUCT_HITDATA]] @_cont_GetCandidateState(%struct.TraversalData* [[SYSTEM_DATA_ALLOCA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[STRUCT_HITDATA]] [[TMP37]], %struct.HitData* [[TMP4]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP38:%.*]] = call <3 x float> @_cont_ObjectRayOrigin3(%struct.DispatchSystemData* [[TMP36]], %struct.HitData* [[TMP4]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[EXTRACT1:%.*]] = extractelement <3 x float> [[TMP38]], i8 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP39:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP40:%.*]] = call [[STRUCT_HITDATA]] @_cont_GetCandidateState(%struct.TraversalData* [[SYSTEM_DATA_ALLOCA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[STRUCT_HITDATA]] [[TMP40]], %struct.HitData* [[TMP5]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP41:%.*]] = call <3 x float> @_cont_ObjectRayDirection3(%struct.DispatchSystemData* [[TMP39]], %struct.HitData* [[TMP5]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[EXTRACT:%.*]] = extractelement <3 x float> [[TMP41]], i8 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP42:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP43:%.*]] = call [[STRUCT_HITDATA]] @_cont_GetCandidateState(%struct.TraversalData* [[SYSTEM_DATA_ALLOCA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[STRUCT_HITDATA]] [[TMP43]], %struct.HitData* [[TMP3]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP44:%.*]] = call float @_cont_RayTCurrent(%struct.DispatchSystemData* [[TMP42]], %struct.HitData* [[TMP3]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP45:%.*]] = fmul fast float [[TMP44]], [[EXTRACT]]
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP46:%.*]] = fadd fast float [[TMP45]], [[EXTRACT1]]
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP47:%.*]] = fcmp fast ogt float [[TMP46]], 0.000000e+00
; LOWERRAYTRACINGPIPELINE-NEXT:    br i1 [[TMP47]], label [[TMP48:%.*]], label [[TMP73:%.*]]
; LOWERRAYTRACINGPIPELINE:       48:
; LOWERRAYTRACINGPIPELINE-NEXT:    store <4 x float> [[TMP35]], <4 x float>* [[TMP34]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP49:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @_cont_AcceptHitAndEndSearch(%struct.DispatchSystemData* [[TMP49]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void (...) @registerbuffer.setpointerbarrier([30 x i32]* @PAYLOAD)
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP50:%.*]] = getelementptr inbounds [[STRUCT_RAYPAYLOAD]], %struct.RayPayload* [[TMP9]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP51:%.*]] = bitcast <4 x float>* [[TMP50]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP52:%.*]] = getelementptr i32, i32* [[TMP51]], i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP53:%.*]] = getelementptr i32, i32* [[TMP52]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP54:%.*]] = load i32, i32* [[TMP53]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP54]], i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S:%.*]], %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s*), i32 0, i32 0, i32 0), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP55:%.*]] = getelementptr i32, i32* [[TMP51]], i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP56:%.*]] = getelementptr i32, i32* [[TMP55]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP57:%.*]] = load i32, i32* [[TMP56]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP57]], i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]], %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s*), i32 0, i32 0, i32 7), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP58:%.*]] = getelementptr i32, i32* [[TMP55]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP59:%.*]] = load i32, i32* [[TMP58]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP59]], i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]], %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s*), i32 0, i32 0, i64 8), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP60:%.*]] = getelementptr i32, i32* [[TMP55]], i64 2
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP61:%.*]] = load i32, i32* [[TMP60]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP61]], i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]], %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s*), i32 0, i32 0, i64 9), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP62:%.*]] = bitcast %struct.BuiltInTriangleIntersectionAttributes* [[TMP7]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP63:%.*]] = bitcast %struct.BuiltInTriangleIntersectionAttributes* [[HITATTRSALLOCA]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP64:%.*]] = getelementptr inbounds i32, i32* [[TMP63]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP65:%.*]] = getelementptr inbounds i32, i32* [[TMP62]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP66:%.*]] = load i32, i32* [[TMP64]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP66]], i32* [[TMP65]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP67:%.*]] = getelementptr inbounds i32, i32* [[TMP63]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP68:%.*]] = getelementptr inbounds i32, i32* [[TMP62]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP69:%.*]] = load i32, i32* [[TMP67]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP69]], i32* [[TMP68]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP70:%.*]] = load [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]], %struct.BuiltInTriangleIntersectionAttributes* [[TMP7]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP71:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @_cont_SetTriangleHitAttributes(%struct.SystemData* [[TMP71]], [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[TMP70]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP72:%.*]] = load [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    ret [[STRUCT_TRAVERSALDATA]] [[TMP72]], !continuation.registercount !35
; LOWERRAYTRACINGPIPELINE:       73:
; LOWERRAYTRACINGPIPELINE-NEXT:    store <4 x float> [[TMP35]], <4 x float>* [[TMP34]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @_cont_AcceptHit(%struct.TraversalData* [[SYSTEM_DATA_ALLOCA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void (...) @registerbuffer.setpointerbarrier([30 x i32]* @PAYLOAD)
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP74:%.*]] = getelementptr inbounds [[STRUCT_RAYPAYLOAD]], %struct.RayPayload* [[TMP9]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP75:%.*]] = bitcast <4 x float>* [[TMP74]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP76:%.*]] = getelementptr i32, i32* [[TMP75]], i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP77:%.*]] = getelementptr i32, i32* [[TMP76]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP78:%.*]] = load i32, i32* [[TMP77]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP78]], i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_2_ANYHIT_OUT_ACCEPT_PAYLOAD_ATTR_0_I32S:%.*]], %struct.RayPayload.attr_max_8_i32s.layout_2_anyhit_out_accept.payload_attr_0_i32s* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_2_anyhit_out_accept.payload_attr_0_i32s*), i32 0, i32 0, i32 0), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP79:%.*]] = getelementptr i32, i32* [[TMP75]], i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP80:%.*]] = getelementptr i32, i32* [[TMP79]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP81:%.*]] = load i32, i32* [[TMP80]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP81]], i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_2_ANYHIT_OUT_ACCEPT_PAYLOAD_ATTR_0_I32S]], %struct.RayPayload.attr_max_8_i32s.layout_2_anyhit_out_accept.payload_attr_0_i32s* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_2_anyhit_out_accept.payload_attr_0_i32s*), i32 0, i32 0, i32 7), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP82:%.*]] = getelementptr i32, i32* [[TMP79]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP83:%.*]] = load i32, i32* [[TMP82]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP83]], i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_2_ANYHIT_OUT_ACCEPT_PAYLOAD_ATTR_0_I32S]], %struct.RayPayload.attr_max_8_i32s.layout_2_anyhit_out_accept.payload_attr_0_i32s* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_2_anyhit_out_accept.payload_attr_0_i32s*), i32 0, i32 0, i64 8), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP84:%.*]] = getelementptr i32, i32* [[TMP79]], i64 2
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP85:%.*]] = load i32, i32* [[TMP84]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP85]], i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_2_ANYHIT_OUT_ACCEPT_PAYLOAD_ATTR_0_I32S]], %struct.RayPayload.attr_max_8_i32s.layout_2_anyhit_out_accept.payload_attr_0_i32s* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_2_anyhit_out_accept.payload_attr_0_i32s*), i32 0, i32 0, i64 9), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP86:%.*]] = bitcast %struct.BuiltInTriangleIntersectionAttributes* [[TMP6]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP87:%.*]] = bitcast %struct.BuiltInTriangleIntersectionAttributes* [[HITATTRSALLOCA]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP88:%.*]] = getelementptr inbounds i32, i32* [[TMP87]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP89:%.*]] = getelementptr inbounds i32, i32* [[TMP86]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP90:%.*]] = load i32, i32* [[TMP88]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP90]], i32* [[TMP89]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP91:%.*]] = getelementptr inbounds i32, i32* [[TMP87]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP92:%.*]] = getelementptr inbounds i32, i32* [[TMP86]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP93:%.*]] = load i32, i32* [[TMP91]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP93]], i32* [[TMP92]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP94:%.*]] = load [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]], %struct.BuiltInTriangleIntersectionAttributes* [[TMP6]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP95:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @_cont_SetTriangleHitAttributes(%struct.SystemData* [[TMP95]], [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[TMP94]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP96:%.*]] = load [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    ret [[STRUCT_TRAVERSALDATA]] [[TMP96]], !continuation.registercount !35
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @MyIntersectionShader(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP2:%.*]] = alloca [[STRUCT_HITDATA:%.*]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP3:%.*]] = alloca [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[SYSTEM_DATA_ALLOCA:%.*]] = alloca [[STRUCT_TRAVERSALDATA:%.*]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP4:%.*]] = call [[STRUCT_TRAVERSALDATA]] @continuations.getSystemData.s_struct.TraversalDatas()
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[STRUCT_TRAVERSALDATA]] [[TMP4]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP5:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[LOCAL_ROOT_INDEX:%.*]] = call i32 @_cont_GetLocalRootIndex(%struct.DispatchSystemData* [[TMP5]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @amd.dx.setLocalRootIndex(i32 [[LOCAL_ROOT_INDEX]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP6:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP7:%.*]] = call [[STRUCT_HITDATA]] @_cont_GetCandidateState(%struct.TraversalData* [[SYSTEM_DATA_ALLOCA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[STRUCT_HITDATA]] [[TMP7]], %struct.HitData* [[TMP2]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP8:%.*]] = call float @_cont_RayTCurrent(%struct.DispatchSystemData* [[TMP6]], %struct.HitData* [[TMP2]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP9:%.*]] = bitcast %struct.BuiltInTriangleIntersectionAttributes* [[TMP3]] to i8*
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @llvm.lifetime.start.p0i8(i64 8, i8* [[TMP9]]) #[[ATTR1]]
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP10:%.*]] = call i1 @_cont_ReportHit.struct.BuiltInTriangleIntersectionAttributes(%struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], float [[TMP8]], i32 0, %struct.BuiltInTriangleIntersectionAttributes* [[TMP3]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP11:%.*]] = call i1 @_cont_IsEndSearch(%struct.TraversalData* [[SYSTEM_DATA_ALLOCA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    br i1 [[TMP11]], label [[TMP12:%.*]], label [[TMP14:%.*]]
; LOWERRAYTRACINGPIPELINE:       12:
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP13:%.*]] = load [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    ret [[STRUCT_TRAVERSALDATA]] [[TMP13]], !continuation.registercount !33
; LOWERRAYTRACINGPIPELINE:       14:
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @llvm.lifetime.end.p0i8(i64 8, i8* [[TMP9]]) #[[ATTR1]]
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP15:%.*]] = load [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    ret [[STRUCT_TRAVERSALDATA]] [[TMP15]], !continuation.registercount !33
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @MyIntersectionShaderLargeAttrs(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP2:%.*]] = alloca [[STRUCT_HITDATA:%.*]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP3:%.*]] = alloca [[STRUCT_LARGEINTERSECTIONATTRIBUTES:%.*]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[SYSTEM_DATA_ALLOCA:%.*]] = alloca [[STRUCT_TRAVERSALDATA:%.*]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP4:%.*]] = call [[STRUCT_TRAVERSALDATA]] @continuations.getSystemData.s_struct.TraversalDatas()
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[STRUCT_TRAVERSALDATA]] [[TMP4]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP5:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[LOCAL_ROOT_INDEX:%.*]] = call i32 @_cont_GetLocalRootIndex(%struct.DispatchSystemData* [[TMP5]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @amd.dx.setLocalRootIndex(i32 [[LOCAL_ROOT_INDEX]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP6:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP7:%.*]] = call [[STRUCT_HITDATA]] @_cont_GetCandidateState(%struct.TraversalData* [[SYSTEM_DATA_ALLOCA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[STRUCT_HITDATA]] [[TMP7]], %struct.HitData* [[TMP2]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP8:%.*]] = call float @_cont_RayTCurrent(%struct.DispatchSystemData* [[TMP6]], %struct.HitData* [[TMP2]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[PTR0:%.*]] = getelementptr [[STRUCT_LARGEINTERSECTIONATTRIBUTES]], %struct.LargeIntersectionAttributes* [[TMP3]], i32 0, i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 100, i32* [[PTR0]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[PTR1:%.*]] = getelementptr [[STRUCT_LARGEINTERSECTIONATTRIBUTES]], %struct.LargeIntersectionAttributes* [[TMP3]], i32 0, i32 0, i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 101, i32* [[PTR1]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[PTR2:%.*]] = getelementptr [[STRUCT_LARGEINTERSECTIONATTRIBUTES]], %struct.LargeIntersectionAttributes* [[TMP3]], i32 0, i32 0, i32 2
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 102, i32* [[PTR2]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[PTR3:%.*]] = getelementptr [[STRUCT_LARGEINTERSECTIONATTRIBUTES]], %struct.LargeIntersectionAttributes* [[TMP3]], i32 0, i32 0, i32 3
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 103, i32* [[PTR3]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[PTR4:%.*]] = getelementptr [[STRUCT_LARGEINTERSECTIONATTRIBUTES]], %struct.LargeIntersectionAttributes* [[TMP3]], i32 0, i32 0, i32 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 104, i32* [[PTR4]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[PTR5:%.*]] = getelementptr [[STRUCT_LARGEINTERSECTIONATTRIBUTES]], %struct.LargeIntersectionAttributes* [[TMP3]], i32 0, i32 0, i32 5
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 105, i32* [[PTR5]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[PTR6:%.*]] = getelementptr [[STRUCT_LARGEINTERSECTIONATTRIBUTES]], %struct.LargeIntersectionAttributes* [[TMP3]], i32 0, i32 0, i32 6
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 106, i32* [[PTR6]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP9:%.*]] = bitcast %struct.LargeIntersectionAttributes* [[TMP3]] to i8*
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @llvm.lifetime.start.p0i8(i64 8, i8* [[TMP9]]) #[[ATTR1]]
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP10:%.*]] = call i1 @_cont_ReportHit.struct.LargeIntersectionAttributes(%struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], float [[TMP8]], i32 0, %struct.LargeIntersectionAttributes* [[TMP3]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP11:%.*]] = call i1 @_cont_IsEndSearch(%struct.TraversalData* [[SYSTEM_DATA_ALLOCA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    br i1 [[TMP11]], label [[TMP12:%.*]], label [[TMP14:%.*]]
; LOWERRAYTRACINGPIPELINE:       12:
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP13:%.*]] = load [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    ret [[STRUCT_TRAVERSALDATA]] [[TMP13]], !continuation.registercount !33
; LOWERRAYTRACINGPIPELINE:       14:
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @llvm.lifetime.end.p0i8(i64 8, i8* [[TMP9]]) #[[ATTR1]]
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP15:%.*]] = load [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    ret [[STRUCT_TRAVERSALDATA]] [[TMP15]], !continuation.registercount !33
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @MyMissShader(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[SYSTEM_DATA_ALLOCA:%.*]] = alloca [[STRUCT_SYSTEMDATA:%.*]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP2:%.*]] = alloca [[STRUCT_RAYPAYLOAD:%.*]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP3:%.*]] = call [[STRUCT_SYSTEMDATA]] @continuations.getSystemData.s_struct.SystemDatas()
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[STRUCT_SYSTEMDATA]] [[TMP3]], %struct.SystemData* [[SYSTEM_DATA_ALLOCA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP4:%.*]] = getelementptr inbounds [[STRUCT_SYSTEMDATA]], %struct.SystemData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[LOCAL_ROOT_INDEX:%.*]] = call i32 @_cont_GetLocalRootIndex(%struct.DispatchSystemData* [[TMP4]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @amd.dx.setLocalRootIndex(i32 [[LOCAL_ROOT_INDEX]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP5:%.*]] = getelementptr inbounds [[STRUCT_RAYPAYLOAD]], %struct.RayPayload* [[TMP2]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP6:%.*]] = bitcast <4 x float>* [[TMP5]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP7:%.*]] = getelementptr i32, i32* [[TMP6]], i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP8:%.*]] = getelementptr i32, i32* [[TMP7]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP9:%.*]] = load i32, i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_4_MISS_IN:%.*]], %struct.RayPayload.attr_max_8_i32s.layout_4_miss_in* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_4_miss_in*), i32 0, i32 0, i32 0), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP9]], i32* [[TMP8]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP10:%.*]] = getelementptr i32, i32* [[TMP6]], i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP11:%.*]] = getelementptr i32, i32* [[TMP10]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP12:%.*]] = load i32, i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_4_MISS_IN]], %struct.RayPayload.attr_max_8_i32s.layout_4_miss_in* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_4_miss_in*), i32 0, i32 0, i32 7), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP12]], i32* [[TMP11]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP13:%.*]] = getelementptr i32, i32* [[TMP10]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP14:%.*]] = load i32, i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_4_MISS_IN]], %struct.RayPayload.attr_max_8_i32s.layout_4_miss_in* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_4_miss_in*), i32 0, i32 0, i64 8), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP14]], i32* [[TMP13]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP15:%.*]] = getelementptr i32, i32* [[TMP10]], i64 2
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP16:%.*]] = load i32, i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_4_MISS_IN]], %struct.RayPayload.attr_max_8_i32s.layout_4_miss_in* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_4_miss_in*), i32 0, i32 0, i64 9), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP16]], i32* [[TMP15]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    call void (...) @registerbuffer.setpointerbarrier([30 x i32]* @PAYLOAD)
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP17:%.*]] = getelementptr inbounds [[STRUCT_RAYPAYLOAD]], %struct.RayPayload* [[TMP2]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* [[TMP17]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    call void (...) @registerbuffer.setpointerbarrier([30 x i32]* @PAYLOAD)
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP18:%.*]] = getelementptr inbounds [[STRUCT_RAYPAYLOAD]], %struct.RayPayload* [[TMP2]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP19:%.*]] = bitcast <4 x float>* [[TMP18]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP20:%.*]] = getelementptr i32, i32* [[TMP19]], i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP21:%.*]] = getelementptr i32, i32* [[TMP20]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP22:%.*]] = load i32, i32* [[TMP21]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP22]], i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_6_MISS_OUT:%.*]], %struct.RayPayload.attr_max_8_i32s.layout_6_miss_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_6_miss_out*), i32 0, i32 0, i32 0), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP23:%.*]] = getelementptr i32, i32* [[TMP19]], i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP24:%.*]] = getelementptr i32, i32* [[TMP23]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP25:%.*]] = load i32, i32* [[TMP24]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP25]], i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_6_MISS_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_6_miss_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_6_miss_out*), i32 0, i32 0, i32 7), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP26:%.*]] = getelementptr i32, i32* [[TMP23]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP27:%.*]] = load i32, i32* [[TMP26]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP27]], i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_6_MISS_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_6_miss_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_6_miss_out*), i32 0, i32 0, i64 8), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP28:%.*]] = getelementptr i32, i32* [[TMP23]], i64 2
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP29:%.*]] = load i32, i32* [[TMP28]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP29]], i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_6_MISS_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_6_miss_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_6_miss_out*), i32 0, i32 0, i64 9), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP30:%.*]] = getelementptr inbounds [[STRUCT_SYSTEMDATA]], %struct.SystemData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP31:%.*]] = load [[STRUCT_DISPATCHSYSTEMDATA:%.*]], %struct.DispatchSystemData* [[TMP30]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    ret [[STRUCT_DISPATCHSYSTEMDATA]] [[TMP31]], !continuation.registercount !35
;
;
; DXILCONTPOSTPROCESS-LABEL: @_cont_IsEndSearch(
; DXILCONTPOSTPROCESS-NEXT:    [[ISEND:%.*]] = call i1 @opaqueIsEnd()
; DXILCONTPOSTPROCESS-NEXT:    ret i1 [[ISEND]]
;
;
; DXILCONTPOSTPROCESS-LABEL: @_cont_GetTriangleHitAttributes(
; DXILCONTPOSTPROCESS-NEXT:    [[ADDR:%.*]] = getelementptr [[STRUCT_SYSTEMDATA:%.*]], %struct.SystemData* [[DATA:%.*]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[VAL:%.*]] = load [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]], %struct.BuiltInTriangleIntersectionAttributes* [[ADDR]], align 4
; DXILCONTPOSTPROCESS-NEXT:    ret [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[VAL]]
;
;
; DXILCONTPOSTPROCESS-LABEL: @_cont_SetTriangleHitAttributes(
; DXILCONTPOSTPROCESS-NEXT:    [[ADDR:%.*]] = getelementptr [[STRUCT_SYSTEMDATA:%.*]], %struct.SystemData* [[DATA:%.*]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    store [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]] [[VAL:%.*]], %struct.BuiltInTriangleIntersectionAttributes* [[ADDR]], align 4
; DXILCONTPOSTPROCESS-NEXT:    ret void
;
;
; DXILCONTPOSTPROCESS-LABEL: @_cont_GetLocalRootIndex(
; DXILCONTPOSTPROCESS-NEXT:    ret i32 5
;
;
; DXILCONTPOSTPROCESS-LABEL: @_cont_GetCandidateState(
; DXILCONTPOSTPROCESS-NEXT:    [[RESPTR:%.*]] = getelementptr [[STRUCT_TRAVERSALDATA:%.*]], %struct.TraversalData* [[DATA:%.*]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[RES:%.*]] = load [[STRUCT_HITDATA:%.*]], %struct.HitData* [[RESPTR]], align 4
; DXILCONTPOSTPROCESS-NEXT:    ret [[STRUCT_HITDATA]] [[RES]]
;
;
; DXILCONTPOSTPROCESS-LABEL: @_cont_RayTCurrent(
; DXILCONTPOSTPROCESS-NEXT:    [[RESPTR:%.*]] = getelementptr [[STRUCT_HITDATA:%.*]], %struct.HitData* [[HITDATA:%.*]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[RES:%.*]] = load float, float* [[RESPTR]], align 4
; DXILCONTPOSTPROCESS-NEXT:    ret float [[RES]]
;
;
; DXILCONTPOSTPROCESS-LABEL: @MyRayGen(
; DXILCONTPOSTPROCESS-NEXT:  AllocaSpillBB:
; DXILCONTPOSTPROCESS-NEXT:    [[SYSTEM_DATA:%.*]] = alloca [[STRUCT_DISPATCHSYSTEMDATA:%.*]], align 8
; DXILCONTPOSTPROCESS-NEXT:    [[CONT_STATE:%.*]] = alloca [2 x i32], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[CSP:%.*]] = alloca i32, align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP0:%.*]] = call [[STRUCT_DISPATCHSYSTEMDATA]] @_cont_SetupRayGen()
; DXILCONTPOSTPROCESS-NEXT:    store [[STRUCT_DISPATCHSYSTEMDATA]] [[TMP0]], %struct.DispatchSystemData* [[SYSTEM_DATA]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP1:%.*]] = call i32 @_cont_GetContinuationStackAddr()
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP1]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP2:%.*]] = bitcast [2 x i32]* [[CONT_STATE]] to i8*
; DXILCONTPOSTPROCESS-NEXT:    [[FRAMEPTR:%.*]] = bitcast i8* [[TMP2]] to %MyRayGen.Frame*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP3:%.*]] = load [[STRUCT_DISPATCHSYSTEMDATA]], %struct.DispatchSystemData* [[SYSTEM_DATA]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_DISPATCHSYSTEMDATA]] [[TMP3]], 0
; DXILCONTPOSTPROCESS-NEXT:    call void @amd.dx.setLocalRootIndex(i32 5)
; DXILCONTPOSTPROCESS-NEXT:    [[TMP4:%.*]] = load [[DX_TYPES_HANDLE:%.*]], %dx.types.Handle* @"\01?Scene@@3URaytracingAccelerationStructure@@A", align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP5:%.*]] = load [[DX_TYPES_HANDLE]], %dx.types.Handle* @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A", align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP6:%.*]] = call [[DX_TYPES_HANDLE]] @dx.op.createHandleForLib.dx.types.Handle(i32 160, [[DX_TYPES_HANDLE]] [[TMP4]])
; DXILCONTPOSTPROCESS-NEXT:    [[TMP7:%.*]] = call [[DX_TYPES_HANDLE]] @dx.op.annotateHandle(i32 216, [[DX_TYPES_HANDLE]] [[TMP6]], [[DX_TYPES_RESOURCEPROPERTIES:%.*]] { i32 16, i32 0 })
; DXILCONTPOSTPROCESS-NEXT:    [[TMP8:%.*]] = call i64 @amd.dx.getAccelStructAddr([[DX_TYPES_HANDLE]] [[TMP7]])
; DXILCONTPOSTPROCESS-NEXT:    [[DIS_DATA_I_FCA_0_INSERT:%.*]] = insertvalue [[STRUCT_DISPATCHSYSTEMDATA]] poison, <3 x i32> [[DOTFCA_0_EXTRACT]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[SYS_DATA_I:%.*]] = insertvalue [[STRUCT_SYSTEMDATA:%.*]] undef, [[STRUCT_DISPATCHSYSTEMDATA]] [[DIS_DATA_I_FCA_0_INSERT]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[TRAV_DATA_I:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA:%.*]] undef, [[STRUCT_SYSTEMDATA]] [[SYS_DATA_I]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP9:%.*]] = call i64 @continuation.getAddrAndMD(i64 ptrtoint (void (i32, [[STRUCT_DISPATCHSYSTEMDATA]])* @MyRayGen.resume.0 to i64))
; DXILCONTPOSTPROCESS-NEXT:    [[TRAV_DATA2_I:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I]], i64 [[TMP9]], 5
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_0_VEC_EXTRACT:%.*]] = extractelement <4 x float> zeroinitializer, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP10:%.*]] = bitcast float [[DOTSROA_0_0_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP10]], i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_0_CALLER_OUT:%.*]], %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_0_CALLER_OUT]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_0_CALLER_OUT]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out*), i32 0, i32 0, i32 0) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_4_VEC_EXTRACT:%.*]] = extractelement <4 x float> zeroinitializer, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP11:%.*]] = bitcast float [[DOTSROA_0_4_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP11]], i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_0_CALLER_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_0_CALLER_OUT]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_0_CALLER_OUT]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out*), i32 0, i32 0, i32 7) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_8_VEC_EXTRACT:%.*]] = extractelement <4 x float> zeroinitializer, i32 2
; DXILCONTPOSTPROCESS-NEXT:    [[TMP12:%.*]] = bitcast float [[DOTSROA_0_8_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP12]], i32 addrspace(20)* addrspacecast (i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_0_CALLER_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_0_CALLER_OUT]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_0_CALLER_OUT]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out*), i32 0, i32 0, i64 8) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_12_VEC_EXTRACT:%.*]] = extractelement <4 x float> zeroinitializer, i32 3
; DXILCONTPOSTPROCESS-NEXT:    [[TMP13:%.*]] = bitcast float [[DOTSROA_0_12_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP13]], i32 addrspace(20)* addrspacecast (i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_0_CALLER_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_0_CALLER_OUT]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_0_CALLER_OUT]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out*), i32 0, i32 0, i64 9) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP14:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP15:%.*]] = add i32 [[TMP14]], 8
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP15]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP16:%.*]] = getelementptr inbounds [2 x i32], [2 x i32]* [[CONT_STATE]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP17:%.*]] = load i32, i32* [[TMP16]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP18:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP19:%.*]] = inttoptr i32 [[TMP18]] to i8 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP20:%.*]] = getelementptr i8, i8 addrspace(21)* [[TMP19]], i64 -8
; DXILCONTPOSTPROCESS-NEXT:    [[TMP21:%.*]] = bitcast i8 addrspace(21)* [[TMP20]] to i32 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP22:%.*]] = getelementptr i32, i32 addrspace(21)* [[TMP21]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP23:%.*]] = bitcast i32 addrspace(21)* [[TMP22]] to [0 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP24:%.*]] = bitcast [0 x i32] addrspace(21)* [[TMP23]] to [2 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP25:%.*]] = getelementptr [2 x i32], [2 x i32] addrspace(21)* [[TMP24]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP17]], i32 addrspace(21)* [[TMP25]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP26:%.*]] = getelementptr inbounds [2 x i32], [2 x i32]* [[CONT_STATE]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP27:%.*]] = load i32, i32* [[TMP26]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP28:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP29:%.*]] = inttoptr i32 [[TMP28]] to i8 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP30:%.*]] = getelementptr i8, i8 addrspace(21)* [[TMP29]], i64 -8
; DXILCONTPOSTPROCESS-NEXT:    [[TMP31:%.*]] = bitcast i8 addrspace(21)* [[TMP30]] to i32 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP32:%.*]] = getelementptr i32, i32 addrspace(21)* [[TMP31]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP33:%.*]] = bitcast i32 addrspace(21)* [[TMP32]] to [0 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP34:%.*]] = bitcast [0 x i32] addrspace(21)* [[TMP33]] to [2 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP35:%.*]] = getelementptr [2 x i32], [2 x i32] addrspace(21)* [[TMP34]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP27]], i32 addrspace(21)* [[TMP35]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP36:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    call void (i64, ...) @continuation.continue(i64 4, i32 [[TMP36]], [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA2_I]]), !continuation.registercount !36, !continuation.returnedRegistercount !36
; DXILCONTPOSTPROCESS-NEXT:    unreachable
;
;
; DXILCONTPOSTPROCESS-LABEL: @MyRayGen.resume.0(
; DXILCONTPOSTPROCESS-NEXT:  entryresume.0:
; DXILCONTPOSTPROCESS-NEXT:    [[SYSTEM_DATA:%.*]] = alloca [[STRUCT_DISPATCHSYSTEMDATA:%.*]], align 8
; DXILCONTPOSTPROCESS-NEXT:    [[CONT_STATE:%.*]] = alloca [2 x i32], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[CSP:%.*]] = alloca i32, align 4
; DXILCONTPOSTPROCESS-NEXT:    store [[STRUCT_DISPATCHSYSTEMDATA]] [[TMP1:%.*]], %struct.DispatchSystemData* [[SYSTEM_DATA]], align 4
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP0:%.*]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP2:%.*]] = getelementptr inbounds [2 x i32], [2 x i32]* [[CONT_STATE]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP3:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP4:%.*]] = inttoptr i32 [[TMP3]] to i8 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP5:%.*]] = getelementptr i8, i8 addrspace(21)* [[TMP4]], i64 -8
; DXILCONTPOSTPROCESS-NEXT:    [[TMP6:%.*]] = bitcast i8 addrspace(21)* [[TMP5]] to i32 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP7:%.*]] = getelementptr i32, i32 addrspace(21)* [[TMP6]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP8:%.*]] = bitcast i32 addrspace(21)* [[TMP7]] to [0 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP9:%.*]] = bitcast [0 x i32] addrspace(21)* [[TMP8]] to [2 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP10:%.*]] = getelementptr [2 x i32], [2 x i32] addrspace(21)* [[TMP9]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP11:%.*]] = load i32, i32 addrspace(21)* [[TMP10]], align 4
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP11]], i32* [[TMP2]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP12:%.*]] = getelementptr inbounds [2 x i32], [2 x i32]* [[CONT_STATE]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP13:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP14:%.*]] = inttoptr i32 [[TMP13]] to i8 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP15:%.*]] = getelementptr i8, i8 addrspace(21)* [[TMP14]], i64 -8
; DXILCONTPOSTPROCESS-NEXT:    [[TMP16:%.*]] = bitcast i8 addrspace(21)* [[TMP15]] to i32 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP17:%.*]] = getelementptr i32, i32 addrspace(21)* [[TMP16]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP18:%.*]] = bitcast i32 addrspace(21)* [[TMP17]] to [0 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP19:%.*]] = bitcast [0 x i32] addrspace(21)* [[TMP18]] to [2 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP20:%.*]] = getelementptr [2 x i32], [2 x i32] addrspace(21)* [[TMP19]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP21:%.*]] = load i32, i32 addrspace(21)* [[TMP20]], align 4
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP21]], i32* [[TMP12]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP22:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP23:%.*]] = add i32 [[TMP22]], -8
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP23]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP24:%.*]] = bitcast [2 x i32]* [[CONT_STATE]] to i8*
; DXILCONTPOSTPROCESS-NEXT:    [[FRAMEPTR:%.*]] = bitcast i8* [[TMP24]] to %MyRayGen.Frame*
; DXILCONTPOSTPROCESS-NEXT:    [[VFRAME:%.*]] = bitcast %MyRayGen.Frame* [[FRAMEPTR]] to i8*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP25:%.*]] = load i32, i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT:%.*]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i32 0) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP26:%.*]] = bitcast i32 [[TMP25]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_0_VEC_INSERT:%.*]] = insertelement <4 x float> zeroinitializer, float [[TMP26]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP27:%.*]] = load i32, i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i32 7) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP28:%.*]] = bitcast i32 [[TMP27]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_4_VEC_INSERT:%.*]] = insertelement <4 x float> [[DOTSROA_0_0_VEC_INSERT]], float [[TMP28]], i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP29:%.*]] = load i32, i32 addrspace(20)* addrspacecast (i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i64 8) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP30:%.*]] = bitcast i32 [[TMP29]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_8_VEC_INSERT:%.*]] = insertelement <4 x float> [[DOTSROA_0_4_VEC_INSERT]], float [[TMP30]], i32 2
; DXILCONTPOSTPROCESS-NEXT:    [[TMP31:%.*]] = load i32, i32 addrspace(20)* addrspacecast (i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i64 9) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP32:%.*]] = bitcast i32 [[TMP31]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_12_VEC_INSERT:%.*]] = insertelement <4 x float> [[DOTSROA_0_8_VEC_INSERT]], float [[TMP32]], i32 3
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_EXTRACT8:%.*]] = extractvalue [[STRUCT_DISPATCHSYSTEMDATA]] [[TMP1]], 0
; DXILCONTPOSTPROCESS-NEXT:    call void @amd.dx.setLocalRootIndex(i32 5)
; DXILCONTPOSTPROCESS-NEXT:    [[TMP33:%.*]] = load [[DX_TYPES_HANDLE:%.*]], %dx.types.Handle* @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A", align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP34:%.*]] = call <3 x i32> @_cont_DispatchRaysIndex3(%struct.DispatchSystemData* [[SYSTEM_DATA]])
; DXILCONTPOSTPROCESS-NEXT:    [[EXTRACT:%.*]] = extractelement <3 x i32> [[TMP34]], i8 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP35:%.*]] = call <3 x i32> @_cont_DispatchRaysIndex3(%struct.DispatchSystemData* [[SYSTEM_DATA]])
; DXILCONTPOSTPROCESS-NEXT:    [[EXTRACT1:%.*]] = extractelement <3 x i32> [[TMP35]], i8 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP36:%.*]] = call [[DX_TYPES_HANDLE]] @dx.op.createHandleForLib.dx.types.Handle(i32 160, [[DX_TYPES_HANDLE]] [[TMP33]])
; DXILCONTPOSTPROCESS-NEXT:    [[TMP37:%.*]] = call [[DX_TYPES_HANDLE]] @dx.op.annotateHandle(i32 216, [[DX_TYPES_HANDLE]] [[TMP36]], [[DX_TYPES_RESOURCEPROPERTIES:%.*]] { i32 4098, i32 1033 })
; DXILCONTPOSTPROCESS-NEXT:    [[TMP38:%.*]] = extractelement <4 x float> [[DOTSROA_0_12_VEC_INSERT]], i64 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP39:%.*]] = extractelement <4 x float> [[DOTSROA_0_12_VEC_INSERT]], i64 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP40:%.*]] = extractelement <4 x float> [[DOTSROA_0_12_VEC_INSERT]], i64 2
; DXILCONTPOSTPROCESS-NEXT:    [[TMP41:%.*]] = extractelement <4 x float> [[DOTSROA_0_12_VEC_INSERT]], i64 3
; DXILCONTPOSTPROCESS-NEXT:    call void @dx.op.textureStore.f32(i32 67, [[DX_TYPES_HANDLE]] [[TMP37]], i32 [[EXTRACT]], i32 [[EXTRACT1]], i32 undef, float [[TMP38]], float [[TMP39]], float [[TMP40]], float [[TMP41]], i8 15)
; DXILCONTPOSTPROCESS-NEXT:    call void @continuation.complete()
; DXILCONTPOSTPROCESS-NEXT:    unreachable
;
;
; DXILCONTPOSTPROCESS-LABEL: @MyClosestHitShader(
; DXILCONTPOSTPROCESS-NEXT:  AllocaSpillBB:
; DXILCONTPOSTPROCESS-NEXT:    [[SYSTEM_DATA:%.*]] = alloca [[STRUCT_SYSTEMDATA:%.*]], align 8
; DXILCONTPOSTPROCESS-NEXT:    [[CONT_STATE:%.*]] = alloca [0 x i32], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[CSP:%.*]] = alloca i32, align 4
; DXILCONTPOSTPROCESS-NEXT:    store [[STRUCT_SYSTEMDATA]] [[TMP0:%.*]], %struct.SystemData* [[SYSTEM_DATA]], align 4
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[CSPINIT:%.*]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP1:%.*]] = bitcast [0 x i32]* [[CONT_STATE]] to i8*
; DXILCONTPOSTPROCESS-NEXT:    [[FRAMEPTR:%.*]] = bitcast i8* undef to %MyClosestHitShader.Frame*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP2:%.*]] = load [[STRUCT_SYSTEMDATA]], %struct.SystemData* [[SYSTEM_DATA]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_EXTRACT:%.*]] = extractvalue [[STRUCT_SYSTEMDATA]] [[TMP2]], 0, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_SYSTEMDATA]] [[TMP2]], 1, 0
; DXILCONTPOSTPROCESS-NEXT:    call void @amd.dx.setLocalRootIndex(i32 5)
; DXILCONTPOSTPROCESS-NEXT:    [[TMP3:%.*]] = load i32, i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S:%.*]], %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s*), i32 0, i32 0, i32 0) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP4:%.*]] = bitcast i32 [[TMP3]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_0_VEC_INSERT:%.*]] = insertelement <4 x float> undef, float [[TMP4]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP5:%.*]] = load i32, i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]], %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s*), i32 0, i32 0, i32 7) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP6:%.*]] = bitcast i32 [[TMP5]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_4_VEC_INSERT:%.*]] = insertelement <4 x float> [[DOTSROA_0_0_VEC_INSERT]], float [[TMP6]], i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP7:%.*]] = load i32, i32 addrspace(20)* addrspacecast (i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]], %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s*), i32 0, i32 0, i64 8) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP8:%.*]] = bitcast i32 [[TMP7]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_8_VEC_INSERT:%.*]] = insertelement <4 x float> [[DOTSROA_0_4_VEC_INSERT]], float [[TMP8]], i32 2
; DXILCONTPOSTPROCESS-NEXT:    [[TMP9:%.*]] = load i32, i32 addrspace(20)* addrspacecast (i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]], %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s*), i32 0, i32 0, i64 9) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP10:%.*]] = bitcast i32 [[TMP9]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_12_VEC_INSERT:%.*]] = insertelement <4 x float> [[DOTSROA_0_8_VEC_INSERT]], float [[TMP10]], i32 3
; DXILCONTPOSTPROCESS-NEXT:    [[VAL_I_FCA_0_INSERT:%.*]] = insertvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]] poison, <2 x float> [[DOTFCA_1_0_EXTRACT]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[VAL_I_FCA_0_INSERT]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_06_0_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP11:%.*]] = bitcast float [[DOTSROA_06_0_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    [[TMP12:%.*]] = bitcast i32 [[TMP11]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[HITATTRS_SROA_0_0_VEC_INSERT:%.*]] = insertelement <2 x float> undef, float [[TMP12]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_06_4_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT]], i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP13:%.*]] = bitcast float [[DOTSROA_06_4_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    [[TMP14:%.*]] = bitcast i32 [[TMP13]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[HITATTRS_SROA_0_4_VEC_INSERT:%.*]] = insertelement <2 x float> [[HITATTRS_SROA_0_0_VEC_INSERT]], float [[TMP14]], i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP15:%.*]] = extractelement <2 x float> [[HITATTRS_SROA_0_4_VEC_INSERT]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP16:%.*]] = fsub fast float 1.000000e+00, [[TMP15]]
; DXILCONTPOSTPROCESS-NEXT:    [[TMP17:%.*]] = extractelement <2 x float> [[HITATTRS_SROA_0_4_VEC_INSERT]], i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP18:%.*]] = fsub fast float [[TMP16]], [[TMP17]]
; DXILCONTPOSTPROCESS-NEXT:    [[TMP19:%.*]] = insertelement <4 x float> undef, float [[TMP18]], i64 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP20:%.*]] = insertelement <4 x float> [[TMP19]], float [[TMP15]], i64 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP21:%.*]] = insertelement <4 x float> [[TMP20]], float [[TMP17]], i64 2
; DXILCONTPOSTPROCESS-NEXT:    [[TMP22:%.*]] = insertelement <4 x float> [[TMP21]], float 1.000000e+00, i64 3
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_0_VEC_EXTRACT:%.*]] = extractelement <4 x float> [[TMP22]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP23:%.*]] = bitcast float [[DOTSROA_0_0_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP23]], i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT:%.*]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i32 0) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_4_VEC_EXTRACT:%.*]] = extractelement <4 x float> [[TMP22]], i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP24:%.*]] = bitcast float [[DOTSROA_0_4_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP24]], i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i32 7) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_8_VEC_EXTRACT:%.*]] = extractelement <4 x float> [[TMP22]], i32 2
; DXILCONTPOSTPROCESS-NEXT:    [[TMP25:%.*]] = bitcast float [[DOTSROA_0_8_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP25]], i32 addrspace(20)* addrspacecast (i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i64 8) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_12_VEC_EXTRACT:%.*]] = extractelement <4 x float> [[TMP22]], i32 3
; DXILCONTPOSTPROCESS-NEXT:    [[TMP26:%.*]] = bitcast float [[DOTSROA_0_12_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP26]], i32 addrspace(20)* addrspacecast (i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i64 9) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_INSERT:%.*]] = insertvalue [[STRUCT_DISPATCHSYSTEMDATA:%.*]] poison, <3 x i32> [[DOTFCA_0_0_EXTRACT]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP27:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    call void (i64, ...) @continuation.continue(i64 [[RETURNADDR:%.*]], i32 [[TMP27]], [[STRUCT_DISPATCHSYSTEMDATA]] [[DOTFCA_0_INSERT]]), !continuation.registercount !36
; DXILCONTPOSTPROCESS-NEXT:    unreachable
;
;
; DXILCONTPOSTPROCESS-LABEL: @MyAnyHitShader(
; DXILCONTPOSTPROCESS-NEXT:  AllocaSpillBB:
; DXILCONTPOSTPROCESS-NEXT:    [[SYSTEM_DATA:%.*]] = alloca [[STRUCT_TRAVERSALDATA:%.*]], align 8
; DXILCONTPOSTPROCESS-NEXT:    [[TMP2:%.*]] = alloca [[STRUCT_HITDATA:%.*]], align 8
; DXILCONTPOSTPROCESS-NEXT:    [[TMP3:%.*]] = alloca [[STRUCT_HITDATA]], align 8
; DXILCONTPOSTPROCESS-NEXT:    [[SYSTEM_DATA_ALLOCA:%.*]] = alloca [[STRUCT_TRAVERSALDATA]], align 8
; DXILCONTPOSTPROCESS-NEXT:    [[CONT_STATE:%.*]] = alloca [0 x i32], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[CSP:%.*]] = alloca i32, align 4
; DXILCONTPOSTPROCESS-NEXT:    store [[STRUCT_TRAVERSALDATA]] [[TMP0:%.*]], %struct.TraversalData* [[SYSTEM_DATA]], align 4
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[CSPINIT:%.*]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP4:%.*]] = bitcast [0 x i32]* [[CONT_STATE]] to i8*
; DXILCONTPOSTPROCESS-NEXT:    [[FRAMEPTR:%.*]] = bitcast i8* undef to %MyAnyHitShader.Frame*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP5:%.*]] = load [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_0_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 0, 0, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    store <3 x i32> [[DOTFCA_0_0_0_EXTRACT]], <3 x i32>* [[DOTFCA_0_0_0_GEP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 0, 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_1_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 1, i32 0
; DXILCONTPOSTPROCESS-NEXT:    store <2 x float> [[DOTFCA_0_1_0_EXTRACT]], <2 x float>* [[DOTFCA_0_1_0_GEP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1, i32 0
; DXILCONTPOSTPROCESS-NEXT:    store float [[DOTFCA_1_0_EXTRACT]], float* [[DOTFCA_1_0_GEP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_1_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 1, 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_1_GEP:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1, i32 1
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[DOTFCA_1_1_EXTRACT]], i32* [[DOTFCA_1_1_GEP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_2_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 2
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_2_GEP:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 2
; DXILCONTPOSTPROCESS-NEXT:    store <3 x float> [[DOTFCA_2_EXTRACT]], <3 x float>* [[DOTFCA_2_GEP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_3_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 3
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_3_GEP:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 3
; DXILCONTPOSTPROCESS-NEXT:    store <3 x float> [[DOTFCA_3_EXTRACT]], <3 x float>* [[DOTFCA_3_GEP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_4_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_4_GEP:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 4
; DXILCONTPOSTPROCESS-NEXT:    store float [[DOTFCA_4_EXTRACT]], float* [[DOTFCA_4_GEP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_5_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 5
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_5_GEP:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 5
; DXILCONTPOSTPROCESS-NEXT:    store i64 [[DOTFCA_5_EXTRACT]], i64* [[DOTFCA_5_GEP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP6:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    call void @amd.dx.setLocalRootIndex(i32 5)
; DXILCONTPOSTPROCESS-NEXT:    [[TMP7:%.*]] = load i32, i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_1_ANYHIT_IN:%.*]], %struct.RayPayload.attr_max_8_i32s.layout_1_anyhit_in* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_1_ANYHIT_IN]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_1_ANYHIT_IN]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_1_anyhit_in*), i32 0, i32 0, i32 0) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP8:%.*]] = bitcast i32 [[TMP7]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_0_VEC_INSERT:%.*]] = insertelement <4 x float> undef, float [[TMP8]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP9:%.*]] = load i32, i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_1_ANYHIT_IN]], %struct.RayPayload.attr_max_8_i32s.layout_1_anyhit_in* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_1_ANYHIT_IN]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_1_ANYHIT_IN]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_1_anyhit_in*), i32 0, i32 0, i32 7) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP10:%.*]] = bitcast i32 [[TMP9]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_4_VEC_INSERT:%.*]] = insertelement <4 x float> [[DOTSROA_0_0_VEC_INSERT]], float [[TMP10]], i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP11:%.*]] = load i32, i32 addrspace(20)* addrspacecast (i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_1_ANYHIT_IN]], %struct.RayPayload.attr_max_8_i32s.layout_1_anyhit_in* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_1_ANYHIT_IN]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_1_ANYHIT_IN]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_1_anyhit_in*), i32 0, i32 0, i64 8) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP12:%.*]] = bitcast i32 [[TMP11]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_8_VEC_INSERT:%.*]] = insertelement <4 x float> [[DOTSROA_0_4_VEC_INSERT]], float [[TMP12]], i32 2
; DXILCONTPOSTPROCESS-NEXT:    [[TMP13:%.*]] = load i32, i32 addrspace(20)* addrspacecast (i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_1_ANYHIT_IN]], %struct.RayPayload.attr_max_8_i32s.layout_1_anyhit_in* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_1_ANYHIT_IN]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_1_ANYHIT_IN]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_1_anyhit_in*), i32 0, i32 0, i64 9) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP14:%.*]] = bitcast i32 [[TMP13]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_12_VEC_INSERT:%.*]] = insertelement <4 x float> [[DOTSROA_0_8_VEC_INSERT]], float [[TMP14]], i32 3
; DXILCONTPOSTPROCESS-NEXT:    [[TMP15:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[ADDR_I:%.*]] = getelementptr [[STRUCT_SYSTEMDATA:%.*]], %struct.SystemData* [[TMP15]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[VAL_I_FCA_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]], %struct.BuiltInTriangleIntersectionAttributes* [[ADDR_I]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[VAL_I_FCA_0_LOAD:%.*]] = load <2 x float>, <2 x float>* [[VAL_I_FCA_0_GEP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[VAL_I_FCA_0_INSERT:%.*]] = insertvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] poison, <2 x float> [[VAL_I_FCA_0_LOAD]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[VAL_I_FCA_0_INSERT]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_061_0_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP16:%.*]] = bitcast float [[DOTSROA_061_0_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_061_4_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[VAL_I_FCA_0_INSERT_FCA_0_EXTRACT]], i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP17:%.*]] = bitcast float [[DOTSROA_061_4_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[TMP1:%.*]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP18:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[RESPTR_I:%.*]] = getelementptr [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I_FCA_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_HITDATA]], %struct.HitData* [[RESPTR_I]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I_FCA_0_LOAD:%.*]] = load float, float* [[RES_I_FCA_0_GEP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I_FCA_0_INSERT:%.*]] = insertvalue [[STRUCT_HITDATA]] poison, float [[RES_I_FCA_0_LOAD]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I_FCA_1_GEP:%.*]] = getelementptr inbounds [[STRUCT_HITDATA]], %struct.HitData* [[RESPTR_I]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I_FCA_1_LOAD:%.*]] = load i32, i32* [[RES_I_FCA_1_GEP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I_FCA_1_INSERT:%.*]] = insertvalue [[STRUCT_HITDATA]] [[RES_I_FCA_0_INSERT]], i32 [[RES_I_FCA_1_LOAD]], 1
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I_FCA_1_INSERT_FCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_HITDATA]] [[RES_I_FCA_1_INSERT]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I_FCA_1_INSERT_FCA_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_HITDATA]], %struct.HitData* [[TMP2]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    store float [[RES_I_FCA_1_INSERT_FCA_0_EXTRACT]], float* [[RES_I_FCA_1_INSERT_FCA_0_GEP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I_FCA_1_INSERT_FCA_1_EXTRACT:%.*]] = extractvalue [[STRUCT_HITDATA]] [[RES_I_FCA_1_INSERT]], 1
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I_FCA_1_INSERT_FCA_1_GEP:%.*]] = getelementptr inbounds [[STRUCT_HITDATA]], %struct.HitData* [[TMP2]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[RES_I_FCA_1_INSERT_FCA_1_EXTRACT]], i32* [[RES_I_FCA_1_INSERT_FCA_1_GEP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP19:%.*]] = call <3 x float> @_cont_ObjectRayOrigin3(%struct.DispatchSystemData* [[TMP18]], %struct.HitData* [[TMP2]])
; DXILCONTPOSTPROCESS-NEXT:    [[EXTRACT1:%.*]] = extractelement <3 x float> [[TMP19]], i8 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP20:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[RESPTR_I1:%.*]] = getelementptr [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I2_FCA_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_HITDATA]], %struct.HitData* [[RESPTR_I1]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I2_FCA_0_LOAD:%.*]] = load float, float* [[RES_I2_FCA_0_GEP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I2_FCA_0_INSERT:%.*]] = insertvalue [[STRUCT_HITDATA]] poison, float [[RES_I2_FCA_0_LOAD]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I2_FCA_1_GEP:%.*]] = getelementptr inbounds [[STRUCT_HITDATA]], %struct.HitData* [[RESPTR_I1]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I2_FCA_1_LOAD:%.*]] = load i32, i32* [[RES_I2_FCA_1_GEP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I2_FCA_1_INSERT:%.*]] = insertvalue [[STRUCT_HITDATA]] [[RES_I2_FCA_0_INSERT]], i32 [[RES_I2_FCA_1_LOAD]], 1
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I2_FCA_1_INSERT_FCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_HITDATA]] [[RES_I2_FCA_1_INSERT]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I2_FCA_1_INSERT_FCA_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_HITDATA]], %struct.HitData* [[TMP3]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    store float [[RES_I2_FCA_1_INSERT_FCA_0_EXTRACT]], float* [[RES_I2_FCA_1_INSERT_FCA_0_GEP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I2_FCA_1_INSERT_FCA_1_EXTRACT:%.*]] = extractvalue [[STRUCT_HITDATA]] [[RES_I2_FCA_1_INSERT]], 1
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I2_FCA_1_INSERT_FCA_1_GEP:%.*]] = getelementptr inbounds [[STRUCT_HITDATA]], %struct.HitData* [[TMP3]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[RES_I2_FCA_1_INSERT_FCA_1_EXTRACT]], i32* [[RES_I2_FCA_1_INSERT_FCA_1_GEP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP21:%.*]] = call <3 x float> @_cont_ObjectRayDirection3(%struct.DispatchSystemData* [[TMP20]], %struct.HitData* [[TMP3]])
; DXILCONTPOSTPROCESS-NEXT:    [[EXTRACT:%.*]] = extractelement <3 x float> [[TMP21]], i8 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP22:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[RESPTR_I3:%.*]] = getelementptr [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I4_FCA_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_HITDATA]], %struct.HitData* [[RESPTR_I3]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I4_FCA_0_LOAD:%.*]] = load float, float* [[RES_I4_FCA_0_GEP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I4_FCA_0_INSERT:%.*]] = insertvalue [[STRUCT_HITDATA]] poison, float [[RES_I4_FCA_0_LOAD]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I4_FCA_1_GEP:%.*]] = getelementptr inbounds [[STRUCT_HITDATA]], %struct.HitData* [[RESPTR_I3]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I4_FCA_1_LOAD:%.*]] = load i32, i32* [[RES_I4_FCA_1_GEP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I4_FCA_1_INSERT:%.*]] = insertvalue [[STRUCT_HITDATA]] [[RES_I4_FCA_0_INSERT]], i32 [[RES_I4_FCA_1_LOAD]], 1
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I4_FCA_1_INSERT_FCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_HITDATA]] [[RES_I4_FCA_1_INSERT]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I4_FCA_1_INSERT_FCA_1_EXTRACT:%.*]] = extractvalue [[STRUCT_HITDATA]] [[RES_I4_FCA_1_INSERT]], 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP23:%.*]] = fmul fast float [[RES_I4_FCA_1_INSERT_FCA_0_EXTRACT]], [[EXTRACT]]
; DXILCONTPOSTPROCESS-NEXT:    [[TMP24:%.*]] = fadd fast float [[TMP23]], [[EXTRACT1]]
; DXILCONTPOSTPROCESS-NEXT:    [[TMP25:%.*]] = fcmp fast ogt float [[TMP24]], 0.000000e+00
; DXILCONTPOSTPROCESS-NEXT:    br i1 [[TMP25]], label [[TMP26:%.*]], label [[TMP38:%.*]]
; DXILCONTPOSTPROCESS:       26:
; DXILCONTPOSTPROCESS-NEXT:    [[TMP27:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    call void @_cont_AcceptHitAndEndSearch(%struct.DispatchSystemData* [[TMP27]])
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_0_VEC_EXTRACT:%.*]] = extractelement <4 x float> [[DOTSROA_0_12_VEC_INSERT]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP28:%.*]] = bitcast float [[DOTSROA_0_0_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP28]], i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S:%.*]], %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s*), i32 0, i32 0, i32 0) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_4_VEC_EXTRACT:%.*]] = extractelement <4 x float> [[DOTSROA_0_12_VEC_INSERT]], i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP29:%.*]] = bitcast float [[DOTSROA_0_4_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP29]], i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]], %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s*), i32 0, i32 0, i32 7) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_8_VEC_EXTRACT:%.*]] = extractelement <4 x float> [[DOTSROA_0_12_VEC_INSERT]], i32 2
; DXILCONTPOSTPROCESS-NEXT:    [[TMP30:%.*]] = bitcast float [[DOTSROA_0_8_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP30]], i32 addrspace(20)* addrspacecast (i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]], %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s*), i32 0, i32 0, i64 8) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_12_VEC_EXTRACT:%.*]] = extractelement <4 x float> [[DOTSROA_0_12_VEC_INSERT]], i32 3
; DXILCONTPOSTPROCESS-NEXT:    [[TMP31:%.*]] = bitcast float [[DOTSROA_0_12_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP31]], i32 addrspace(20)* addrspacecast (i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]], %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s*), i32 0, i32 0, i64 9) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[HITATTRSALLOCA_SROA_0_0_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[DOTFCA_0_EXTRACT]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP32:%.*]] = bitcast float [[HITATTRSALLOCA_SROA_0_0_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    [[TMP33:%.*]] = bitcast i32 [[TMP32]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_063_0_VEC_INSERT:%.*]] = insertelement <2 x float> undef, float [[TMP33]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[HITATTRSALLOCA_SROA_0_4_VEC_EXTRACT:%.*]] = extractelement <2 x float> [[DOTFCA_0_EXTRACT]], i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP34:%.*]] = bitcast float [[HITATTRSALLOCA_SROA_0_4_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    [[TMP35:%.*]] = bitcast i32 [[TMP34]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_063_4_VEC_INSERT:%.*]] = insertelement <2 x float> [[DOTSROA_063_0_VEC_INSERT]], float [[TMP35]], i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_INSERT:%.*]] = insertvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] poison, <2 x float> [[DOTSROA_063_4_VEC_INSERT]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP36:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[ADDR_I7:%.*]] = getelementptr [[STRUCT_SYSTEMDATA]], %struct.SystemData* [[TMP36]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_EXTRACT26:%.*]] = extractvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[DOTFCA_0_INSERT]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_GEP:%.*]] = getelementptr inbounds [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]], %struct.BuiltInTriangleIntersectionAttributes* [[ADDR_I7]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    store <2 x float> [[DOTFCA_0_EXTRACT26]], <2 x float>* [[DOTFCA_0_GEP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_0_GEP27:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_0_LOAD:%.*]] = load <3 x i32>, <3 x i32>* [[DOTFCA_0_0_0_GEP27]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] poison, <3 x i32> [[DOTFCA_0_0_0_LOAD]], 0, 0, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_1_0_GEP28:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 1, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_1_0_LOAD:%.*]] = load <2 x float>, <2 x float>* [[DOTFCA_0_1_0_GEP28]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_1_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_0_0_INSERT]], <2 x float> [[DOTFCA_0_1_0_LOAD]], 0, 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_0_GEP29:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_0_LOAD:%.*]] = load float, float* [[DOTFCA_1_0_GEP29]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_1_0_INSERT]], float [[DOTFCA_1_0_LOAD]], 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_1_GEP30:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_1_LOAD:%.*]] = load i32, i32* [[DOTFCA_1_1_GEP30]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_1_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_0_INSERT]], i32 [[DOTFCA_1_1_LOAD]], 1, 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_2_GEP31:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 2
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_2_LOAD:%.*]] = load <3 x float>, <3 x float>* [[DOTFCA_2_GEP31]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_2_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_1_INSERT]], <3 x float> [[DOTFCA_2_LOAD]], 2
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_3_GEP32:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 3
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_3_LOAD:%.*]] = load <3 x float>, <3 x float>* [[DOTFCA_3_GEP32]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_3_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_2_INSERT]], <3 x float> [[DOTFCA_3_LOAD]], 3
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_4_GEP33:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_4_LOAD:%.*]] = load float, float* [[DOTFCA_4_GEP33]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_4_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_3_INSERT]], float [[DOTFCA_4_LOAD]], 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_5_GEP34:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 5
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_5_LOAD:%.*]] = load i64, i64* [[DOTFCA_5_GEP34]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_5_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_4_INSERT]], i64 [[DOTFCA_5_LOAD]], 5
; DXILCONTPOSTPROCESS-NEXT:    [[TMP37:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    call void (i64, ...) @continuation.continue(i64 [[RETURNADDR:%.*]], i32 [[TMP37]], [[STRUCT_TRAVERSALDATA]] [[DOTFCA_5_INSERT]]), !continuation.registercount !36
; DXILCONTPOSTPROCESS-NEXT:    unreachable
; DXILCONTPOSTPROCESS:       38:
; DXILCONTPOSTPROCESS-NEXT:    call void @_cont_AcceptHit(%struct.TraversalData* [[SYSTEM_DATA_ALLOCA]])
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_0_VEC_EXTRACT16:%.*]] = extractelement <4 x float> [[DOTSROA_0_12_VEC_INSERT]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP39:%.*]] = bitcast float [[DOTSROA_0_0_VEC_EXTRACT16]] to i32
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP39]], i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_2_ANYHIT_OUT_ACCEPT_PAYLOAD_ATTR_0_I32S:%.*]], %struct.RayPayload.attr_max_8_i32s.layout_2_anyhit_out_accept.payload_attr_0_i32s* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_2_ANYHIT_OUT_ACCEPT_PAYLOAD_ATTR_0_I32S]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_2_ANYHIT_OUT_ACCEPT_PAYLOAD_ATTR_0_I32S]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_2_anyhit_out_accept.payload_attr_0_i32s*), i32 0, i32 0, i32 0) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_4_VEC_EXTRACT19:%.*]] = extractelement <4 x float> [[DOTSROA_0_12_VEC_INSERT]], i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP40:%.*]] = bitcast float [[DOTSROA_0_4_VEC_EXTRACT19]] to i32
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP40]], i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_2_ANYHIT_OUT_ACCEPT_PAYLOAD_ATTR_0_I32S]], %struct.RayPayload.attr_max_8_i32s.layout_2_anyhit_out_accept.payload_attr_0_i32s* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_2_ANYHIT_OUT_ACCEPT_PAYLOAD_ATTR_0_I32S]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_2_ANYHIT_OUT_ACCEPT_PAYLOAD_ATTR_0_I32S]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_2_anyhit_out_accept.payload_attr_0_i32s*), i32 0, i32 0, i32 7) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_8_VEC_EXTRACT22:%.*]] = extractelement <4 x float> [[DOTSROA_0_12_VEC_INSERT]], i32 2
; DXILCONTPOSTPROCESS-NEXT:    [[TMP41:%.*]] = bitcast float [[DOTSROA_0_8_VEC_EXTRACT22]] to i32
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP41]], i32 addrspace(20)* addrspacecast (i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_2_ANYHIT_OUT_ACCEPT_PAYLOAD_ATTR_0_I32S]], %struct.RayPayload.attr_max_8_i32s.layout_2_anyhit_out_accept.payload_attr_0_i32s* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_2_ANYHIT_OUT_ACCEPT_PAYLOAD_ATTR_0_I32S]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_2_ANYHIT_OUT_ACCEPT_PAYLOAD_ATTR_0_I32S]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_2_anyhit_out_accept.payload_attr_0_i32s*), i32 0, i32 0, i64 8) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_12_VEC_EXTRACT25:%.*]] = extractelement <4 x float> [[DOTSROA_0_12_VEC_INSERT]], i32 3
; DXILCONTPOSTPROCESS-NEXT:    [[TMP42:%.*]] = bitcast float [[DOTSROA_0_12_VEC_EXTRACT25]] to i32
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP42]], i32 addrspace(20)* addrspacecast (i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_2_ANYHIT_OUT_ACCEPT_PAYLOAD_ATTR_0_I32S]], %struct.RayPayload.attr_max_8_i32s.layout_2_anyhit_out_accept.payload_attr_0_i32s* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_2_ANYHIT_OUT_ACCEPT_PAYLOAD_ATTR_0_I32S]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_2_ANYHIT_OUT_ACCEPT_PAYLOAD_ATTR_0_I32S]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_2_anyhit_out_accept.payload_attr_0_i32s*), i32 0, i32 0, i64 9) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[HITATTRSALLOCA_SROA_0_0_VEC_EXTRACT10:%.*]] = extractelement <2 x float> [[DOTFCA_0_EXTRACT]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP43:%.*]] = bitcast float [[HITATTRSALLOCA_SROA_0_0_VEC_EXTRACT10]] to i32
; DXILCONTPOSTPROCESS-NEXT:    [[TMP44:%.*]] = bitcast i32 [[TMP43]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_067_0_VEC_INSERT:%.*]] = insertelement <2 x float> undef, float [[TMP44]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[HITATTRSALLOCA_SROA_0_4_VEC_EXTRACT12:%.*]] = extractelement <2 x float> [[DOTFCA_0_EXTRACT]], i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP45:%.*]] = bitcast float [[HITATTRSALLOCA_SROA_0_4_VEC_EXTRACT12]] to i32
; DXILCONTPOSTPROCESS-NEXT:    [[TMP46:%.*]] = bitcast i32 [[TMP45]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_067_4_VEC_INSERT:%.*]] = insertelement <2 x float> [[DOTSROA_067_0_VEC_INSERT]], float [[TMP46]], i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_INSERT66:%.*]] = insertvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] poison, <2 x float> [[DOTSROA_067_4_VEC_INSERT]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP47:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[ADDR_I8:%.*]] = getelementptr [[STRUCT_SYSTEMDATA]], %struct.SystemData* [[TMP47]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_EXTRACT35:%.*]] = extractvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[DOTFCA_0_INSERT66]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_GEP36:%.*]] = getelementptr inbounds [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]], %struct.BuiltInTriangleIntersectionAttributes* [[ADDR_I8]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    store <2 x float> [[DOTFCA_0_EXTRACT35]], <2 x float>* [[DOTFCA_0_GEP36]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_0_GEP37:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_0_LOAD38:%.*]] = load <3 x i32>, <3 x i32>* [[DOTFCA_0_0_0_GEP37]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_0_INSERT39:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] poison, <3 x i32> [[DOTFCA_0_0_0_LOAD38]], 0, 0, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_1_0_GEP40:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0, i32 1, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_1_0_LOAD41:%.*]] = load <2 x float>, <2 x float>* [[DOTFCA_0_1_0_GEP40]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_1_0_INSERT42:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_0_0_INSERT39]], <2 x float> [[DOTFCA_0_1_0_LOAD41]], 0, 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_0_GEP43:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_0_LOAD44:%.*]] = load float, float* [[DOTFCA_1_0_GEP43]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_0_INSERT45:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_1_0_INSERT42]], float [[DOTFCA_1_0_LOAD44]], 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_1_GEP46:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 1, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_1_LOAD47:%.*]] = load i32, i32* [[DOTFCA_1_1_GEP46]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_1_INSERT48:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_0_INSERT45]], i32 [[DOTFCA_1_1_LOAD47]], 1, 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_2_GEP49:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 2
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_2_LOAD50:%.*]] = load <3 x float>, <3 x float>* [[DOTFCA_2_GEP49]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_2_INSERT51:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_1_INSERT48]], <3 x float> [[DOTFCA_2_LOAD50]], 2
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_3_GEP52:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 3
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_3_LOAD53:%.*]] = load <3 x float>, <3 x float>* [[DOTFCA_3_GEP52]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_3_INSERT54:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_2_INSERT51]], <3 x float> [[DOTFCA_3_LOAD53]], 3
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_4_GEP55:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_4_LOAD56:%.*]] = load float, float* [[DOTFCA_4_GEP55]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_4_INSERT57:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_3_INSERT54]], float [[DOTFCA_4_LOAD56]], 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_5_GEP58:%.*]] = getelementptr inbounds [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 5
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_5_LOAD59:%.*]] = load i64, i64* [[DOTFCA_5_GEP58]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_5_INSERT60:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_4_INSERT57]], i64 [[DOTFCA_5_LOAD59]], 5
; DXILCONTPOSTPROCESS-NEXT:    [[TMP48:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    call void (i64, ...) @continuation.continue(i64 [[RETURNADDR]], i32 [[TMP48]], [[STRUCT_TRAVERSALDATA]] [[DOTFCA_5_INSERT60]]), !continuation.registercount !36
; DXILCONTPOSTPROCESS-NEXT:    unreachable
;
;
; DXILCONTPOSTPROCESS-LABEL: @MyIntersectionShader(
; DXILCONTPOSTPROCESS-NEXT:  AllocaSpillBB:
; DXILCONTPOSTPROCESS-NEXT:    [[SYSTEM_DATA:%.*]] = alloca [[STRUCT_TRAVERSALDATA:%.*]], align 8
; DXILCONTPOSTPROCESS-NEXT:    [[CONT_STATE:%.*]] = alloca [2 x i32], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[CSP:%.*]] = alloca i32, align 4
; DXILCONTPOSTPROCESS-NEXT:    store [[STRUCT_TRAVERSALDATA]] [[TMP0:%.*]], %struct.TraversalData* [[SYSTEM_DATA]], align 4
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[CSPINIT:%.*]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP1:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP2:%.*]] = add i32 [[TMP1]], 0
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP2]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP3:%.*]] = inttoptr i32 [[TMP1]] to i8 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP4:%.*]] = bitcast [2 x i32]* [[CONT_STATE]] to i8*
; DXILCONTPOSTPROCESS-NEXT:    [[FRAMEPTR:%.*]] = bitcast i8* [[TMP4]] to %MyIntersectionShader.Frame*
; DXILCONTPOSTPROCESS-NEXT:    [[RETURNADDR_SPILL_ADDR:%.*]] = getelementptr inbounds [[MYINTERSECTIONSHADER_FRAME:%.*]], %MyIntersectionShader.Frame* [[FRAMEPTR]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    store i64 [[RETURNADDR:%.*]], i64* [[RETURNADDR_SPILL_ADDR]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP5:%.*]] = load [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_0_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 0, 0, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 0, 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_1_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 1, 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_2_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 2
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_3_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 3
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_4_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_5_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 5
; DXILCONTPOSTPROCESS-NEXT:    call void @amd.dx.setLocalRootIndex(i32 5)
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I_FCA_0_INSERT:%.*]] = insertvalue [[STRUCT_HITDATA:%.*]] poison, float [[DOTFCA_1_0_EXTRACT]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I_FCA_1_INSERT:%.*]] = insertvalue [[STRUCT_HITDATA]] [[RES_I_FCA_0_INSERT]], i32 [[DOTFCA_1_1_EXTRACT]], 1
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I_FCA_1_INSERT_FCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_HITDATA]] [[RES_I_FCA_1_INSERT]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I_FCA_1_INSERT_FCA_1_EXTRACT:%.*]] = extractvalue [[STRUCT_HITDATA]] [[RES_I_FCA_1_INSERT]], 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOANYHIT_I:%.*]] = fcmp fast ogt float [[RES_I_FCA_1_INSERT_FCA_0_EXTRACT]], 0.000000e+00
; DXILCONTPOSTPROCESS-NEXT:    br i1 [[DOANYHIT_I]], label [[ANYHIT_I:%.*]], label [[ACCEPTHIT_I:%.*]]
; DXILCONTPOSTPROCESS:       anyhit.i:
; DXILCONTPOSTPROCESS-NEXT:    [[TRAV_DATA_I_FCA_0_0_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] poison, <3 x i32> [[DOTFCA_0_0_0_EXTRACT]], 0, 0, 0
; DXILCONTPOSTPROCESS-NEXT:    [[TRAV_DATA_I_FCA_0_1_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_0_0_0_INSERT]], <2 x float> [[DOTFCA_0_1_0_EXTRACT]], 0, 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[TRAV_DATA_I_FCA_1_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_0_1_0_INSERT]], float [[DOTFCA_1_0_EXTRACT]], 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[TRAV_DATA_I_FCA_1_1_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_1_0_INSERT]], i32 [[DOTFCA_1_1_EXTRACT]], 1, 1
; DXILCONTPOSTPROCESS-NEXT:    [[TRAV_DATA_I_FCA_2_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_1_1_INSERT]], <3 x float> [[DOTFCA_2_EXTRACT]], 2
; DXILCONTPOSTPROCESS-NEXT:    [[TRAV_DATA_I_FCA_3_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_2_INSERT]], <3 x float> [[DOTFCA_3_EXTRACT]], 3
; DXILCONTPOSTPROCESS-NEXT:    [[TRAV_DATA_I_FCA_4_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_3_INSERT]], float [[DOTFCA_4_EXTRACT]], 4
; DXILCONTPOSTPROCESS-NEXT:    [[TRAV_DATA_I_FCA_5_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_4_INSERT]], i64 [[DOTFCA_5_EXTRACT]], 5
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_INSERT:%.*]] = insertvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]] poison, <2 x float> undef, 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP6:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP7:%.*]] = add i32 [[TMP6]], 8
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP7]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP8:%.*]] = getelementptr inbounds [2 x i32], [2 x i32]* [[CONT_STATE]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP9:%.*]] = load i32, i32* [[TMP8]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP10:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP11:%.*]] = inttoptr i32 [[TMP10]] to i8 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP12:%.*]] = getelementptr i8, i8 addrspace(21)* [[TMP11]], i64 -8
; DXILCONTPOSTPROCESS-NEXT:    [[TMP13:%.*]] = bitcast i8 addrspace(21)* [[TMP12]] to i32 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP14:%.*]] = getelementptr i32, i32 addrspace(21)* [[TMP13]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP15:%.*]] = bitcast i32 addrspace(21)* [[TMP14]] to [0 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP16:%.*]] = bitcast [0 x i32] addrspace(21)* [[TMP15]] to [2 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP17:%.*]] = getelementptr [2 x i32], [2 x i32] addrspace(21)* [[TMP16]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP9]], i32 addrspace(21)* [[TMP17]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP18:%.*]] = getelementptr inbounds [2 x i32], [2 x i32]* [[CONT_STATE]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP19:%.*]] = load i32, i32* [[TMP18]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP20:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP21:%.*]] = inttoptr i32 [[TMP20]] to i8 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP22:%.*]] = getelementptr i8, i8 addrspace(21)* [[TMP21]], i64 -8
; DXILCONTPOSTPROCESS-NEXT:    [[TMP23:%.*]] = bitcast i8 addrspace(21)* [[TMP22]] to i32 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP24:%.*]] = getelementptr i32, i32 addrspace(21)* [[TMP23]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP25:%.*]] = bitcast i32 addrspace(21)* [[TMP24]] to [0 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP26:%.*]] = bitcast [0 x i32] addrspace(21)* [[TMP25]] to [2 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP27:%.*]] = getelementptr [2 x i32], [2 x i32] addrspace(21)* [[TMP26]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP19]], i32 addrspace(21)* [[TMP27]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP28:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP29:%.*]] = call i64 @continuation.getAddrAndMD(i64 ptrtoint (void (i32, [[STRUCT_TRAVERSALDATA]])* @MyIntersectionShader.resume.0 to i64))
; DXILCONTPOSTPROCESS-NEXT:    call void (i64, ...) @continuation.continue(i64 3, i32 [[TMP28]], i64 [[TMP29]], [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_5_INSERT]], float [[RES_I_FCA_1_INSERT_FCA_0_EXTRACT]], i32 0, [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[DOTFCA_0_INSERT]]), !continuation.registercount !32, !continuation.returnedRegistercount !32
; DXILCONTPOSTPROCESS-NEXT:    unreachable
; DXILCONTPOSTPROCESS:       accepthit.i:
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_0_VEC_EXTRACT:%.*]] = extractelement <2 x float> undef, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP30:%.*]] = bitcast float [[DOTSROA_0_0_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    [[TMP31:%.*]] = bitcast i32 [[TMP30]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_068_0_VEC_INSERT:%.*]] = insertelement <2 x float> undef, float [[TMP31]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_4_VEC_EXTRACT:%.*]] = extractelement <2 x float> undef, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP32:%.*]] = bitcast float [[DOTSROA_0_4_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    [[TMP33:%.*]] = bitcast i32 [[TMP32]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_068_4_VEC_INSERT:%.*]] = insertelement <2 x float> [[DOTSROA_068_0_VEC_INSERT]], float [[TMP33]], i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_INSERT67:%.*]] = insertvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] poison, <2 x float> [[DOTSROA_068_4_VEC_INSERT]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[DOTFCA_0_INSERT67]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[ISEND_I:%.*]] = call i1 @opaqueIsEnd()
; DXILCONTPOSTPROCESS-NEXT:    br i1 [[ISEND_I]], label [[TMP34:%.*]], label [[TMP39:%.*]]
; DXILCONTPOSTPROCESS:       34:
; DXILCONTPOSTPROCESS-NEXT:    [[RETURNADDR_RELOAD_ADDR1:%.*]] = getelementptr inbounds [[MYINTERSECTIONSHADER_FRAME]], %MyIntersectionShader.Frame* [[FRAMEPTR]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[RETURNADDR_RELOAD2:%.*]] = load i64, i64* [[RETURNADDR_RELOAD_ADDR1]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_0_INSERT13:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] poison, <3 x i32> [[DOTFCA_0_0_0_EXTRACT]], 0, 0, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_1_0_INSERT16:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_0_0_INSERT13]], <2 x float> [[DOTFCA_0_EXTRACT]], 0, 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_0_INSERT19:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_1_0_INSERT16]], float [[DOTFCA_1_0_EXTRACT]], 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_1_INSERT22:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_0_INSERT19]], i32 [[DOTFCA_1_1_EXTRACT]], 1, 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_2_INSERT25:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_1_INSERT22]], <3 x float> [[DOTFCA_2_EXTRACT]], 2
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_3_INSERT28:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_2_INSERT25]], <3 x float> [[DOTFCA_3_EXTRACT]], 3
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_4_INSERT31:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_3_INSERT28]], float [[DOTFCA_4_EXTRACT]], 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_5_INSERT34:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_4_INSERT31]], i64 [[DOTFCA_5_EXTRACT]], 5
; DXILCONTPOSTPROCESS-NEXT:    [[TMP35:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP36:%.*]] = add i32 [[TMP35]], 0
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP36]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP37:%.*]] = inttoptr i32 [[TMP36]] to i8 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP38:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    call void (i64, ...) @continuation.continue(i64 [[RETURNADDR_RELOAD2]], i32 [[TMP38]], [[STRUCT_TRAVERSALDATA]] [[DOTFCA_5_INSERT34]]), !continuation.registercount !32
; DXILCONTPOSTPROCESS-NEXT:    unreachable
; DXILCONTPOSTPROCESS:       39:
; DXILCONTPOSTPROCESS-NEXT:    [[RETURNADDR_RELOAD_ADDR:%.*]] = getelementptr inbounds [[MYINTERSECTIONSHADER_FRAME]], %MyIntersectionShader.Frame* [[FRAMEPTR]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[RETURNADDR_RELOAD:%.*]] = load i64, i64* [[RETURNADDR_RELOAD_ADDR]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] poison, <3 x i32> [[DOTFCA_0_0_0_EXTRACT]], 0, 0, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_1_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_0_0_INSERT]], <2 x float> [[DOTFCA_0_EXTRACT]], 0, 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_1_0_INSERT]], float [[DOTFCA_1_0_EXTRACT]], 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_1_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_0_INSERT]], i32 [[DOTFCA_1_1_EXTRACT]], 1, 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_2_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_1_INSERT]], <3 x float> [[DOTFCA_2_EXTRACT]], 2
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_3_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_2_INSERT]], <3 x float> [[DOTFCA_3_EXTRACT]], 3
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_4_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_3_INSERT]], float [[DOTFCA_4_EXTRACT]], 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_5_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_4_INSERT]], i64 [[DOTFCA_5_EXTRACT]], 5
; DXILCONTPOSTPROCESS-NEXT:    [[TMP40:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP41:%.*]] = add i32 [[TMP40]], 0
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP41]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP42:%.*]] = inttoptr i32 [[TMP41]] to i8 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP43:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    call void (i64, ...) @continuation.continue(i64 [[RETURNADDR_RELOAD]], i32 [[TMP43]], [[STRUCT_TRAVERSALDATA]] [[DOTFCA_5_INSERT]]), !continuation.registercount !32
; DXILCONTPOSTPROCESS-NEXT:    unreachable
;
;
; DXILCONTPOSTPROCESS-LABEL: @MyIntersectionShader.resume.0(
; DXILCONTPOSTPROCESS-NEXT:  entryresume.0:
; DXILCONTPOSTPROCESS-NEXT:    [[SYSTEM_DATA:%.*]] = alloca [[STRUCT_TRAVERSALDATA:%.*]], align 8
; DXILCONTPOSTPROCESS-NEXT:    [[CONT_STATE:%.*]] = alloca [2 x i32], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[CSP:%.*]] = alloca i32, align 4
; DXILCONTPOSTPROCESS-NEXT:    store [[STRUCT_TRAVERSALDATA]] [[TMP1:%.*]], %struct.TraversalData* [[SYSTEM_DATA]], align 4
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP0:%.*]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP2:%.*]] = getelementptr inbounds [2 x i32], [2 x i32]* [[CONT_STATE]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP3:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP4:%.*]] = inttoptr i32 [[TMP3]] to i8 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP5:%.*]] = getelementptr i8, i8 addrspace(21)* [[TMP4]], i64 -8
; DXILCONTPOSTPROCESS-NEXT:    [[TMP6:%.*]] = bitcast i8 addrspace(21)* [[TMP5]] to i32 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP7:%.*]] = getelementptr i32, i32 addrspace(21)* [[TMP6]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP8:%.*]] = bitcast i32 addrspace(21)* [[TMP7]] to [0 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP9:%.*]] = bitcast [0 x i32] addrspace(21)* [[TMP8]] to [2 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP10:%.*]] = getelementptr [2 x i32], [2 x i32] addrspace(21)* [[TMP9]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP11:%.*]] = load i32, i32 addrspace(21)* [[TMP10]], align 4
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP11]], i32* [[TMP2]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP12:%.*]] = getelementptr inbounds [2 x i32], [2 x i32]* [[CONT_STATE]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP13:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP14:%.*]] = inttoptr i32 [[TMP13]] to i8 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP15:%.*]] = getelementptr i8, i8 addrspace(21)* [[TMP14]], i64 -8
; DXILCONTPOSTPROCESS-NEXT:    [[TMP16:%.*]] = bitcast i8 addrspace(21)* [[TMP15]] to i32 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP17:%.*]] = getelementptr i32, i32 addrspace(21)* [[TMP16]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP18:%.*]] = bitcast i32 addrspace(21)* [[TMP17]] to [0 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP19:%.*]] = bitcast [0 x i32] addrspace(21)* [[TMP18]] to [2 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP20:%.*]] = getelementptr [2 x i32], [2 x i32] addrspace(21)* [[TMP19]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP21:%.*]] = load i32, i32 addrspace(21)* [[TMP20]], align 4
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP21]], i32* [[TMP12]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP22:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP23:%.*]] = add i32 [[TMP22]], -8
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP23]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP24:%.*]] = bitcast [2 x i32]* [[CONT_STATE]] to i8*
; DXILCONTPOSTPROCESS-NEXT:    [[FRAMEPTR:%.*]] = bitcast i8* [[TMP24]] to %MyIntersectionShader.Frame*
; DXILCONTPOSTPROCESS-NEXT:    [[VFRAME:%.*]] = bitcast %MyIntersectionShader.Frame* [[FRAMEPTR]] to i8*
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_0_EXTRACT35:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP1]], 0, 0, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_1_0_EXTRACT37:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP1]], 0, 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_0_EXTRACT39:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP1]], 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_1_EXTRACT41:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP1]], 1, 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_2_EXTRACT43:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP1]], 2
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_3_EXTRACT45:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP1]], 3
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_4_EXTRACT47:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP1]], 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_5_EXTRACT49:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP1]], 5
; DXILCONTPOSTPROCESS-NEXT:    call void @amd.dx.setLocalRootIndex(i32 5)
; DXILCONTPOSTPROCESS-NEXT:    [[ISEND_I:%.*]] = call i1 @opaqueIsEnd()
; DXILCONTPOSTPROCESS-NEXT:    br i1 [[ISEND_I]], label [[TMP25:%.*]], label [[TMP30:%.*]]
; DXILCONTPOSTPROCESS:       25:
; DXILCONTPOSTPROCESS-NEXT:    [[RETURNADDR_RELOAD_ADDR1:%.*]] = getelementptr inbounds [[MYINTERSECTIONSHADER_FRAME:%.*]], %MyIntersectionShader.Frame* [[FRAMEPTR]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[RETURNADDR_RELOAD2:%.*]] = load i64, i64* [[RETURNADDR_RELOAD_ADDR1]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_0_INSERT13:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] poison, <3 x i32> [[DOTFCA_0_0_0_EXTRACT35]], 0, 0, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_1_0_INSERT16:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_0_0_INSERT13]], <2 x float> [[DOTFCA_0_1_0_EXTRACT37]], 0, 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_0_INSERT19:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_1_0_INSERT16]], float [[DOTFCA_1_0_EXTRACT39]], 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_1_INSERT22:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_0_INSERT19]], i32 [[DOTFCA_1_1_EXTRACT41]], 1, 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_2_INSERT25:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_1_INSERT22]], <3 x float> [[DOTFCA_2_EXTRACT43]], 2
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_3_INSERT28:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_2_INSERT25]], <3 x float> [[DOTFCA_3_EXTRACT45]], 3
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_4_INSERT31:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_3_INSERT28]], float [[DOTFCA_4_EXTRACT47]], 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_5_INSERT34:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_4_INSERT31]], i64 [[DOTFCA_5_EXTRACT49]], 5
; DXILCONTPOSTPROCESS-NEXT:    [[TMP26:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP27:%.*]] = add i32 [[TMP26]], 0
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP27]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP28:%.*]] = inttoptr i32 [[TMP27]] to i8 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP29:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    call void (i64, ...) @continuation.continue(i64 [[RETURNADDR_RELOAD2]], i32 [[TMP29]], [[STRUCT_TRAVERSALDATA]] [[DOTFCA_5_INSERT34]]), !continuation.registercount !32
; DXILCONTPOSTPROCESS-NEXT:    unreachable
; DXILCONTPOSTPROCESS:       30:
; DXILCONTPOSTPROCESS-NEXT:    [[RETURNADDR_RELOAD_ADDR:%.*]] = getelementptr inbounds [[MYINTERSECTIONSHADER_FRAME]], %MyIntersectionShader.Frame* [[FRAMEPTR]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[RETURNADDR_RELOAD:%.*]] = load i64, i64* [[RETURNADDR_RELOAD_ADDR]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] poison, <3 x i32> [[DOTFCA_0_0_0_EXTRACT35]], 0, 0, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_1_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_0_0_INSERT]], <2 x float> [[DOTFCA_0_1_0_EXTRACT37]], 0, 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_1_0_INSERT]], float [[DOTFCA_1_0_EXTRACT39]], 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_1_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_0_INSERT]], i32 [[DOTFCA_1_1_EXTRACT41]], 1, 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_2_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_1_INSERT]], <3 x float> [[DOTFCA_2_EXTRACT43]], 2
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_3_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_2_INSERT]], <3 x float> [[DOTFCA_3_EXTRACT45]], 3
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_4_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_3_INSERT]], float [[DOTFCA_4_EXTRACT47]], 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_5_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_4_INSERT]], i64 [[DOTFCA_5_EXTRACT49]], 5
; DXILCONTPOSTPROCESS-NEXT:    [[TMP31:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP32:%.*]] = add i32 [[TMP31]], 0
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP32]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP33:%.*]] = inttoptr i32 [[TMP32]] to i8 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP34:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    call void (i64, ...) @continuation.continue(i64 [[RETURNADDR_RELOAD]], i32 [[TMP34]], [[STRUCT_TRAVERSALDATA]] [[DOTFCA_5_INSERT]]), !continuation.registercount !32
; DXILCONTPOSTPROCESS-NEXT:    unreachable
;
;
; DXILCONTPOSTPROCESS-LABEL: @MyIntersectionShaderLargeAttrs(
; DXILCONTPOSTPROCESS-NEXT:  AllocaSpillBB:
; DXILCONTPOSTPROCESS-NEXT:    [[SYSTEM_DATA:%.*]] = alloca [[STRUCT_TRAVERSALDATA:%.*]], align 8
; DXILCONTPOSTPROCESS-NEXT:    [[CONT_STATE:%.*]] = alloca [2 x i32], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[CSP:%.*]] = alloca i32, align 4
; DXILCONTPOSTPROCESS-NEXT:    store [[STRUCT_TRAVERSALDATA]] [[TMP0:%.*]], %struct.TraversalData* [[SYSTEM_DATA]], align 4
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[CSPINIT:%.*]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP1:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP2:%.*]] = add i32 [[TMP1]], 0
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP2]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP3:%.*]] = inttoptr i32 [[TMP1]] to i8 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP4:%.*]] = bitcast [2 x i32]* [[CONT_STATE]] to i8*
; DXILCONTPOSTPROCESS-NEXT:    [[FRAMEPTR:%.*]] = bitcast i8* [[TMP4]] to %MyIntersectionShaderLargeAttrs.Frame*
; DXILCONTPOSTPROCESS-NEXT:    [[RETURNADDR_SPILL_ADDR:%.*]] = getelementptr inbounds [[MYINTERSECTIONSHADERLARGEATTRS_FRAME:%.*]], %MyIntersectionShaderLargeAttrs.Frame* [[FRAMEPTR]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    store i64 [[RETURNADDR:%.*]], i64* [[RETURNADDR_SPILL_ADDR]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP5:%.*]] = load [[STRUCT_TRAVERSALDATA]], %struct.TraversalData* [[SYSTEM_DATA]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_0_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 0, 0, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 0, 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_1_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 1, 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_2_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 2
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_3_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 3
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_4_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_5_EXTRACT:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP5]], 5
; DXILCONTPOSTPROCESS-NEXT:    call void @amd.dx.setLocalRootIndex(i32 5)
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I_FCA_0_INSERT:%.*]] = insertvalue [[STRUCT_HITDATA:%.*]] poison, float [[DOTFCA_1_0_EXTRACT]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I_FCA_1_INSERT:%.*]] = insertvalue [[STRUCT_HITDATA]] [[RES_I_FCA_0_INSERT]], i32 [[DOTFCA_1_1_EXTRACT]], 1
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I_FCA_1_INSERT_FCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_HITDATA]] [[RES_I_FCA_1_INSERT]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[RES_I_FCA_1_INSERT_FCA_1_EXTRACT:%.*]] = extractvalue [[STRUCT_HITDATA]] [[RES_I_FCA_1_INSERT]], 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOANYHIT_I:%.*]] = fcmp fast ogt float [[RES_I_FCA_1_INSERT_FCA_0_EXTRACT]], 0.000000e+00
; DXILCONTPOSTPROCESS-NEXT:    br i1 [[DOANYHIT_I]], label [[ANYHIT_I:%.*]], label [[ACCEPTHIT_I:%.*]]
; DXILCONTPOSTPROCESS:       anyhit.i:
; DXILCONTPOSTPROCESS-NEXT:    [[TRAV_DATA_I_FCA_0_0_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] poison, <3 x i32> [[DOTFCA_0_0_0_EXTRACT]], 0, 0, 0
; DXILCONTPOSTPROCESS-NEXT:    [[TRAV_DATA_I_FCA_0_1_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_0_0_0_INSERT]], <2 x float> [[DOTFCA_0_1_0_EXTRACT]], 0, 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[TRAV_DATA_I_FCA_1_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_0_1_0_INSERT]], float [[DOTFCA_1_0_EXTRACT]], 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[TRAV_DATA_I_FCA_1_1_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_1_0_INSERT]], i32 [[DOTFCA_1_1_EXTRACT]], 1, 1
; DXILCONTPOSTPROCESS-NEXT:    [[TRAV_DATA_I_FCA_2_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_1_1_INSERT]], <3 x float> [[DOTFCA_2_EXTRACT]], 2
; DXILCONTPOSTPROCESS-NEXT:    [[TRAV_DATA_I_FCA_3_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_2_INSERT]], <3 x float> [[DOTFCA_3_EXTRACT]], 3
; DXILCONTPOSTPROCESS-NEXT:    [[TRAV_DATA_I_FCA_4_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_3_INSERT]], float [[DOTFCA_4_EXTRACT]], 4
; DXILCONTPOSTPROCESS-NEXT:    [[TRAV_DATA_I_FCA_5_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_4_INSERT]], i64 [[DOTFCA_5_EXTRACT]], 5
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_INSERT:%.*]] = insertvalue [[STRUCT_LARGEINTERSECTIONATTRIBUTES:%.*]] poison, i32 100, 0, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_1_INSERT:%.*]] = insertvalue [[STRUCT_LARGEINTERSECTIONATTRIBUTES]] [[DOTFCA_0_0_INSERT]], i32 101, 0, 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_2_INSERT:%.*]] = insertvalue [[STRUCT_LARGEINTERSECTIONATTRIBUTES]] [[DOTFCA_0_1_INSERT]], i32 102, 0, 2
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_3_INSERT:%.*]] = insertvalue [[STRUCT_LARGEINTERSECTIONATTRIBUTES]] [[DOTFCA_0_2_INSERT]], i32 103, 0, 3
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_4_INSERT:%.*]] = insertvalue [[STRUCT_LARGEINTERSECTIONATTRIBUTES]] [[DOTFCA_0_3_INSERT]], i32 104, 0, 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_5_INSERT:%.*]] = insertvalue [[STRUCT_LARGEINTERSECTIONATTRIBUTES]] [[DOTFCA_0_4_INSERT]], i32 105, 0, 5
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_6_INSERT:%.*]] = insertvalue [[STRUCT_LARGEINTERSECTIONATTRIBUTES]] [[DOTFCA_0_5_INSERT]], i32 106, 0, 6
; DXILCONTPOSTPROCESS-NEXT:    [[TMP6:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP7:%.*]] = add i32 [[TMP6]], 8
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP7]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP8:%.*]] = getelementptr inbounds [2 x i32], [2 x i32]* [[CONT_STATE]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP9:%.*]] = load i32, i32* [[TMP8]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP10:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP11:%.*]] = inttoptr i32 [[TMP10]] to i8 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP12:%.*]] = getelementptr i8, i8 addrspace(21)* [[TMP11]], i64 -8
; DXILCONTPOSTPROCESS-NEXT:    [[TMP13:%.*]] = bitcast i8 addrspace(21)* [[TMP12]] to i32 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP14:%.*]] = getelementptr i32, i32 addrspace(21)* [[TMP13]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP15:%.*]] = bitcast i32 addrspace(21)* [[TMP14]] to [0 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP16:%.*]] = bitcast [0 x i32] addrspace(21)* [[TMP15]] to [2 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP17:%.*]] = getelementptr [2 x i32], [2 x i32] addrspace(21)* [[TMP16]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP9]], i32 addrspace(21)* [[TMP17]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP18:%.*]] = getelementptr inbounds [2 x i32], [2 x i32]* [[CONT_STATE]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP19:%.*]] = load i32, i32* [[TMP18]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP20:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP21:%.*]] = inttoptr i32 [[TMP20]] to i8 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP22:%.*]] = getelementptr i8, i8 addrspace(21)* [[TMP21]], i64 -8
; DXILCONTPOSTPROCESS-NEXT:    [[TMP23:%.*]] = bitcast i8 addrspace(21)* [[TMP22]] to i32 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP24:%.*]] = getelementptr i32, i32 addrspace(21)* [[TMP23]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP25:%.*]] = bitcast i32 addrspace(21)* [[TMP24]] to [0 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP26:%.*]] = bitcast [0 x i32] addrspace(21)* [[TMP25]] to [2 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP27:%.*]] = getelementptr [2 x i32], [2 x i32] addrspace(21)* [[TMP26]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP19]], i32 addrspace(21)* [[TMP27]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP28:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP29:%.*]] = call i64 @continuation.getAddrAndMD(i64 ptrtoint (void (i32, [[STRUCT_TRAVERSALDATA]])* @MyIntersectionShaderLargeAttrs.resume.0 to i64))
; DXILCONTPOSTPROCESS-NEXT:    call void (i64, ...) @continuation.continue(i64 3, i32 [[TMP28]], i64 [[TMP29]], [[STRUCT_TRAVERSALDATA]] [[TRAV_DATA_I_FCA_5_INSERT]], float [[RES_I_FCA_1_INSERT_FCA_0_EXTRACT]], i32 0, [[STRUCT_LARGEINTERSECTIONATTRIBUTES]] [[DOTFCA_0_6_INSERT]]), !continuation.registercount !32, !continuation.returnedRegistercount !32
; DXILCONTPOSTPROCESS-NEXT:    unreachable
; DXILCONTPOSTPROCESS:       accepthit.i:
; DXILCONTPOSTPROCESS-NEXT:    [[TMP30:%.*]] = bitcast i32 100 to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_074_0_VEC_INSERT:%.*]] = insertelement <2 x float> undef, float [[TMP30]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP31:%.*]] = bitcast i32 101 to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_074_4_VEC_INSERT:%.*]] = insertelement <2 x float> [[DOTSROA_074_0_VEC_INSERT]], float [[TMP31]], i32 1
; DXILCONTPOSTPROCESS-NEXT:    store i32 102, i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([30 x i32], [30 x i32]* addrspacecast ([30 x i32] addrspace(20)* @REGISTERS to [30 x i32]*), i32 0, i32 1) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    store i32 103, i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([30 x i32], [30 x i32]* addrspacecast ([30 x i32] addrspace(20)* @REGISTERS to [30 x i32]*), i32 0, i64 2) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    store i32 104, i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([30 x i32], [30 x i32]* addrspacecast ([30 x i32] addrspace(20)* @REGISTERS to [30 x i32]*), i32 0, i64 3) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    store i32 105, i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([30 x i32], [30 x i32]* addrspacecast ([30 x i32] addrspace(20)* @REGISTERS to [30 x i32]*), i32 0, i64 4) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    store i32 106, i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([30 x i32], [30 x i32]* addrspacecast ([30 x i32] addrspace(20)* @REGISTERS to [30 x i32]*), i32 0, i64 5) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_INSERT:%.*]] = insertvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]] poison, <2 x float> [[DOTSROA_074_4_VEC_INSERT]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_EXTRACT:%.*]] = extractvalue [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[DOTFCA_0_INSERT]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[ISEND_I:%.*]] = call i1 @opaqueIsEnd()
; DXILCONTPOSTPROCESS-NEXT:    br i1 [[ISEND_I]], label [[TMP32:%.*]], label [[TMP37:%.*]]
; DXILCONTPOSTPROCESS:       32:
; DXILCONTPOSTPROCESS-NEXT:    [[RETURNADDR_RELOAD_ADDR1:%.*]] = getelementptr inbounds [[MYINTERSECTIONSHADERLARGEATTRS_FRAME]], %MyIntersectionShaderLargeAttrs.Frame* [[FRAMEPTR]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[RETURNADDR_RELOAD2:%.*]] = load i64, i64* [[RETURNADDR_RELOAD_ADDR1]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_0_INSERT13:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] poison, <3 x i32> [[DOTFCA_0_0_0_EXTRACT]], 0, 0, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_1_0_INSERT16:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_0_0_INSERT13]], <2 x float> [[DOTFCA_0_EXTRACT]], 0, 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_0_INSERT19:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_1_0_INSERT16]], float [[DOTFCA_1_0_EXTRACT]], 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_1_INSERT22:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_0_INSERT19]], i32 [[DOTFCA_1_1_EXTRACT]], 1, 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_2_INSERT25:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_1_INSERT22]], <3 x float> [[DOTFCA_2_EXTRACT]], 2
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_3_INSERT28:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_2_INSERT25]], <3 x float> [[DOTFCA_3_EXTRACT]], 3
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_4_INSERT31:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_3_INSERT28]], float [[DOTFCA_4_EXTRACT]], 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_5_INSERT34:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_4_INSERT31]], i64 [[DOTFCA_5_EXTRACT]], 5
; DXILCONTPOSTPROCESS-NEXT:    [[TMP33:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP34:%.*]] = add i32 [[TMP33]], 0
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP34]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP35:%.*]] = inttoptr i32 [[TMP34]] to i8 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP36:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    call void (i64, ...) @continuation.continue(i64 [[RETURNADDR_RELOAD2]], i32 [[TMP36]], [[STRUCT_TRAVERSALDATA]] [[DOTFCA_5_INSERT34]]), !continuation.registercount !32
; DXILCONTPOSTPROCESS-NEXT:    unreachable
; DXILCONTPOSTPROCESS:       37:
; DXILCONTPOSTPROCESS-NEXT:    [[RETURNADDR_RELOAD_ADDR:%.*]] = getelementptr inbounds [[MYINTERSECTIONSHADERLARGEATTRS_FRAME]], %MyIntersectionShaderLargeAttrs.Frame* [[FRAMEPTR]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[RETURNADDR_RELOAD:%.*]] = load i64, i64* [[RETURNADDR_RELOAD_ADDR]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] poison, <3 x i32> [[DOTFCA_0_0_0_EXTRACT]], 0, 0, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_1_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_0_0_INSERT]], <2 x float> [[DOTFCA_0_EXTRACT]], 0, 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_1_0_INSERT]], float [[DOTFCA_1_0_EXTRACT]], 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_1_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_0_INSERT]], i32 [[DOTFCA_1_1_EXTRACT]], 1, 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_2_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_1_INSERT]], <3 x float> [[DOTFCA_2_EXTRACT]], 2
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_3_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_2_INSERT]], <3 x float> [[DOTFCA_3_EXTRACT]], 3
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_4_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_3_INSERT]], float [[DOTFCA_4_EXTRACT]], 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_5_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_4_INSERT]], i64 [[DOTFCA_5_EXTRACT]], 5
; DXILCONTPOSTPROCESS-NEXT:    [[TMP38:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP39:%.*]] = add i32 [[TMP38]], 0
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP39]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP40:%.*]] = inttoptr i32 [[TMP39]] to i8 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP41:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    call void (i64, ...) @continuation.continue(i64 [[RETURNADDR_RELOAD]], i32 [[TMP41]], [[STRUCT_TRAVERSALDATA]] [[DOTFCA_5_INSERT]]), !continuation.registercount !32
; DXILCONTPOSTPROCESS-NEXT:    unreachable
;
;
; DXILCONTPOSTPROCESS-LABEL: @MyIntersectionShaderLargeAttrs.resume.0(
; DXILCONTPOSTPROCESS-NEXT:  entryresume.0:
; DXILCONTPOSTPROCESS-NEXT:    [[SYSTEM_DATA:%.*]] = alloca [[STRUCT_TRAVERSALDATA:%.*]], align 8
; DXILCONTPOSTPROCESS-NEXT:    [[CONT_STATE:%.*]] = alloca [2 x i32], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[CSP:%.*]] = alloca i32, align 4
; DXILCONTPOSTPROCESS-NEXT:    store [[STRUCT_TRAVERSALDATA]] [[TMP1:%.*]], %struct.TraversalData* [[SYSTEM_DATA]], align 4
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP0:%.*]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP2:%.*]] = getelementptr inbounds [2 x i32], [2 x i32]* [[CONT_STATE]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP3:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP4:%.*]] = inttoptr i32 [[TMP3]] to i8 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP5:%.*]] = getelementptr i8, i8 addrspace(21)* [[TMP4]], i64 -8
; DXILCONTPOSTPROCESS-NEXT:    [[TMP6:%.*]] = bitcast i8 addrspace(21)* [[TMP5]] to i32 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP7:%.*]] = getelementptr i32, i32 addrspace(21)* [[TMP6]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP8:%.*]] = bitcast i32 addrspace(21)* [[TMP7]] to [0 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP9:%.*]] = bitcast [0 x i32] addrspace(21)* [[TMP8]] to [2 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP10:%.*]] = getelementptr [2 x i32], [2 x i32] addrspace(21)* [[TMP9]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP11:%.*]] = load i32, i32 addrspace(21)* [[TMP10]], align 4
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP11]], i32* [[TMP2]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP12:%.*]] = getelementptr inbounds [2 x i32], [2 x i32]* [[CONT_STATE]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP13:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP14:%.*]] = inttoptr i32 [[TMP13]] to i8 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP15:%.*]] = getelementptr i8, i8 addrspace(21)* [[TMP14]], i64 -8
; DXILCONTPOSTPROCESS-NEXT:    [[TMP16:%.*]] = bitcast i8 addrspace(21)* [[TMP15]] to i32 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP17:%.*]] = getelementptr i32, i32 addrspace(21)* [[TMP16]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP18:%.*]] = bitcast i32 addrspace(21)* [[TMP17]] to [0 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP19:%.*]] = bitcast [0 x i32] addrspace(21)* [[TMP18]] to [2 x i32] addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP20:%.*]] = getelementptr [2 x i32], [2 x i32] addrspace(21)* [[TMP19]], i32 0, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP21:%.*]] = load i32, i32 addrspace(21)* [[TMP20]], align 4
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP21]], i32* [[TMP12]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP22:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP23:%.*]] = add i32 [[TMP22]], -8
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP23]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP24:%.*]] = bitcast [2 x i32]* [[CONT_STATE]] to i8*
; DXILCONTPOSTPROCESS-NEXT:    [[FRAMEPTR:%.*]] = bitcast i8* [[TMP24]] to %MyIntersectionShaderLargeAttrs.Frame*
; DXILCONTPOSTPROCESS-NEXT:    [[VFRAME:%.*]] = bitcast %MyIntersectionShaderLargeAttrs.Frame* [[FRAMEPTR]] to i8*
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_0_EXTRACT35:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP1]], 0, 0, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_1_0_EXTRACT37:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP1]], 0, 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_0_EXTRACT39:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP1]], 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_1_EXTRACT41:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP1]], 1, 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_2_EXTRACT43:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP1]], 2
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_3_EXTRACT45:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP1]], 3
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_4_EXTRACT47:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP1]], 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_5_EXTRACT49:%.*]] = extractvalue [[STRUCT_TRAVERSALDATA]] [[TMP1]], 5
; DXILCONTPOSTPROCESS-NEXT:    call void @amd.dx.setLocalRootIndex(i32 5)
; DXILCONTPOSTPROCESS-NEXT:    [[ISEND_I:%.*]] = call i1 @opaqueIsEnd()
; DXILCONTPOSTPROCESS-NEXT:    br i1 [[ISEND_I]], label [[TMP25:%.*]], label [[TMP30:%.*]]
; DXILCONTPOSTPROCESS:       25:
; DXILCONTPOSTPROCESS-NEXT:    [[RETURNADDR_RELOAD_ADDR1:%.*]] = getelementptr inbounds [[MYINTERSECTIONSHADERLARGEATTRS_FRAME:%.*]], %MyIntersectionShaderLargeAttrs.Frame* [[FRAMEPTR]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[RETURNADDR_RELOAD2:%.*]] = load i64, i64* [[RETURNADDR_RELOAD_ADDR1]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_0_INSERT13:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] poison, <3 x i32> [[DOTFCA_0_0_0_EXTRACT35]], 0, 0, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_1_0_INSERT16:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_0_0_INSERT13]], <2 x float> [[DOTFCA_0_1_0_EXTRACT37]], 0, 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_0_INSERT19:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_1_0_INSERT16]], float [[DOTFCA_1_0_EXTRACT39]], 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_1_INSERT22:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_0_INSERT19]], i32 [[DOTFCA_1_1_EXTRACT41]], 1, 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_2_INSERT25:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_1_INSERT22]], <3 x float> [[DOTFCA_2_EXTRACT43]], 2
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_3_INSERT28:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_2_INSERT25]], <3 x float> [[DOTFCA_3_EXTRACT45]], 3
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_4_INSERT31:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_3_INSERT28]], float [[DOTFCA_4_EXTRACT47]], 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_5_INSERT34:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_4_INSERT31]], i64 [[DOTFCA_5_EXTRACT49]], 5
; DXILCONTPOSTPROCESS-NEXT:    [[TMP26:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP27:%.*]] = add i32 [[TMP26]], 0
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP27]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP28:%.*]] = inttoptr i32 [[TMP27]] to i8 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP29:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    call void (i64, ...) @continuation.continue(i64 [[RETURNADDR_RELOAD2]], i32 [[TMP29]], [[STRUCT_TRAVERSALDATA]] [[DOTFCA_5_INSERT34]]), !continuation.registercount !32
; DXILCONTPOSTPROCESS-NEXT:    unreachable
; DXILCONTPOSTPROCESS:       30:
; DXILCONTPOSTPROCESS-NEXT:    [[RETURNADDR_RELOAD_ADDR:%.*]] = getelementptr inbounds [[MYINTERSECTIONSHADERLARGEATTRS_FRAME]], %MyIntersectionShaderLargeAttrs.Frame* [[FRAMEPTR]], i32 0, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[RETURNADDR_RELOAD:%.*]] = load i64, i64* [[RETURNADDR_RELOAD_ADDR]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] poison, <3 x i32> [[DOTFCA_0_0_0_EXTRACT35]], 0, 0, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_1_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_0_0_INSERT]], <2 x float> [[DOTFCA_0_1_0_EXTRACT37]], 0, 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_0_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_0_1_0_INSERT]], float [[DOTFCA_1_0_EXTRACT39]], 1, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_1_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_0_INSERT]], i32 [[DOTFCA_1_1_EXTRACT41]], 1, 1
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_2_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_1_1_INSERT]], <3 x float> [[DOTFCA_2_EXTRACT43]], 2
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_3_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_2_INSERT]], <3 x float> [[DOTFCA_3_EXTRACT45]], 3
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_4_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_3_INSERT]], float [[DOTFCA_4_EXTRACT47]], 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_5_INSERT:%.*]] = insertvalue [[STRUCT_TRAVERSALDATA]] [[DOTFCA_4_INSERT]], i64 [[DOTFCA_5_EXTRACT49]], 5
; DXILCONTPOSTPROCESS-NEXT:    [[TMP31:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP32:%.*]] = add i32 [[TMP31]], 0
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP32]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP33:%.*]] = inttoptr i32 [[TMP32]] to i8 addrspace(21)*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP34:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    call void (i64, ...) @continuation.continue(i64 [[RETURNADDR_RELOAD]], i32 [[TMP34]], [[STRUCT_TRAVERSALDATA]] [[DOTFCA_5_INSERT]]), !continuation.registercount !32
; DXILCONTPOSTPROCESS-NEXT:    unreachable
;
;
; DXILCONTPOSTPROCESS-LABEL: @MyMissShader(
; DXILCONTPOSTPROCESS-NEXT:  AllocaSpillBB:
; DXILCONTPOSTPROCESS-NEXT:    [[SYSTEM_DATA:%.*]] = alloca [[STRUCT_SYSTEMDATA:%.*]], align 8
; DXILCONTPOSTPROCESS-NEXT:    [[CONT_STATE:%.*]] = alloca [0 x i32], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[CSP:%.*]] = alloca i32, align 4
; DXILCONTPOSTPROCESS-NEXT:    store [[STRUCT_SYSTEMDATA]] [[TMP0:%.*]], %struct.SystemData* [[SYSTEM_DATA]], align 4
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[CSPINIT:%.*]], i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP1:%.*]] = bitcast [0 x i32]* [[CONT_STATE]] to i8*
; DXILCONTPOSTPROCESS-NEXT:    [[FRAMEPTR:%.*]] = bitcast i8* undef to %MyMissShader.Frame*
; DXILCONTPOSTPROCESS-NEXT:    [[TMP2:%.*]] = load [[STRUCT_SYSTEMDATA]], %struct.SystemData* [[SYSTEM_DATA]], align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_0_EXTRACT:%.*]] = extractvalue [[STRUCT_SYSTEMDATA]] [[TMP2]], 0, 0
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_1_0_EXTRACT:%.*]] = extractvalue [[STRUCT_SYSTEMDATA]] [[TMP2]], 1, 0
; DXILCONTPOSTPROCESS-NEXT:    call void @amd.dx.setLocalRootIndex(i32 5)
; DXILCONTPOSTPROCESS-NEXT:    [[TMP3:%.*]] = load i32, i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_4_MISS_IN:%.*]], %struct.RayPayload.attr_max_8_i32s.layout_4_miss_in* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_4_MISS_IN]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_4_MISS_IN]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_4_miss_in*), i32 0, i32 0, i32 0) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP4:%.*]] = bitcast i32 [[TMP3]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_0_VEC_INSERT:%.*]] = insertelement <4 x float> undef, float [[TMP4]], i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP5:%.*]] = load i32, i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_4_MISS_IN]], %struct.RayPayload.attr_max_8_i32s.layout_4_miss_in* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_4_MISS_IN]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_4_MISS_IN]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_4_miss_in*), i32 0, i32 0, i32 7) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP6:%.*]] = bitcast i32 [[TMP5]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_4_VEC_INSERT:%.*]] = insertelement <4 x float> [[DOTSROA_0_0_VEC_INSERT]], float [[TMP6]], i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP7:%.*]] = load i32, i32 addrspace(20)* addrspacecast (i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_4_MISS_IN]], %struct.RayPayload.attr_max_8_i32s.layout_4_miss_in* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_4_MISS_IN]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_4_MISS_IN]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_4_miss_in*), i32 0, i32 0, i64 8) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP8:%.*]] = bitcast i32 [[TMP7]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_8_VEC_INSERT:%.*]] = insertelement <4 x float> [[DOTSROA_0_4_VEC_INSERT]], float [[TMP8]], i32 2
; DXILCONTPOSTPROCESS-NEXT:    [[TMP9:%.*]] = load i32, i32 addrspace(20)* addrspacecast (i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_4_MISS_IN]], %struct.RayPayload.attr_max_8_i32s.layout_4_miss_in* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_4_MISS_IN]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_4_MISS_IN]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_4_miss_in*), i32 0, i32 0, i64 9) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[TMP10:%.*]] = bitcast i32 [[TMP9]] to float
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_12_VEC_INSERT:%.*]] = insertelement <4 x float> [[DOTSROA_0_8_VEC_INSERT]], float [[TMP10]], i32 3
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_0_VEC_EXTRACT:%.*]] = extractelement <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, i32 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP11:%.*]] = bitcast float [[DOTSROA_0_0_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP11]], i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_6_MISS_OUT:%.*]], %struct.RayPayload.attr_max_8_i32s.layout_6_miss_out* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_6_MISS_OUT]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_6_MISS_OUT]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_6_miss_out*), i32 0, i32 0, i32 0) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_4_VEC_EXTRACT:%.*]] = extractelement <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, i32 1
; DXILCONTPOSTPROCESS-NEXT:    [[TMP12:%.*]] = bitcast float [[DOTSROA_0_4_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP12]], i32 addrspace(20)* addrspacecast (i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_6_MISS_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_6_miss_out* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_6_MISS_OUT]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_6_MISS_OUT]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_6_miss_out*), i32 0, i32 0, i32 7) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_8_VEC_EXTRACT:%.*]] = extractelement <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, i32 2
; DXILCONTPOSTPROCESS-NEXT:    [[TMP13:%.*]] = bitcast float [[DOTSROA_0_8_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP13]], i32 addrspace(20)* addrspacecast (i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_6_MISS_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_6_miss_out* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_6_MISS_OUT]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_6_MISS_OUT]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_6_miss_out*), i32 0, i32 0, i64 8) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTSROA_0_12_VEC_EXTRACT:%.*]] = extractelement <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, i32 3
; DXILCONTPOSTPROCESS-NEXT:    [[TMP14:%.*]] = bitcast float [[DOTSROA_0_12_VEC_EXTRACT]] to i32
; DXILCONTPOSTPROCESS-NEXT:    store i32 [[TMP14]], i32 addrspace(20)* addrspacecast (i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_6_MISS_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_6_miss_out* addrspacecast ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_6_MISS_OUT]] addrspace(20)* bitcast ([30 x i32] addrspace(20)* @REGISTERS to [[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_6_MISS_OUT]] addrspace(20)*) to %struct.RayPayload.attr_max_8_i32s.layout_6_miss_out*), i32 0, i32 0, i64 9) to i32 addrspace(20)*), align 4
; DXILCONTPOSTPROCESS-NEXT:    [[DOTFCA_0_INSERT:%.*]] = insertvalue [[STRUCT_DISPATCHSYSTEMDATA:%.*]] poison, <3 x i32> [[DOTFCA_0_0_EXTRACT]], 0
; DXILCONTPOSTPROCESS-NEXT:    [[TMP15:%.*]] = load i32, i32* [[CSP]], align 4
; DXILCONTPOSTPROCESS-NEXT:    call void (i64, ...) @continuation.continue(i64 [[RETURNADDR:%.*]], i32 [[TMP15]], [[STRUCT_DISPATCHSYSTEMDATA]] [[DOTFCA_0_INSERT]]), !continuation.registercount !36
; DXILCONTPOSTPROCESS-NEXT:    unreachable
;
