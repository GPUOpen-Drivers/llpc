; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --include-generated-funcs
; RUN: opt --opaque-pointers=0 --enforce-pointer-metadata=1 --verify-each -passes='add-types-metadata,dxil-cont-lgc-rt-op-converter,lint,lower-raytracing-pipeline,lint,remove-types-metadata' -S %s 2>%t.stderr | FileCheck -check-prefix=LOWERRAYTRACINGPIPELINE %s
; RUN: count 0 < %t.stderr

; Check that using unnamed types works well with generating intrinsic names

target datalayout = "e-m:e-p:64:32-p20:32:32-p21:32:32-i1:32-i8:8-i16:32-i32:32-i64:32-f16:32-f32:32-f64:32-v16:32-v32:32-v48:32-v64:32-v80:32-v96:32-v112:32-v128:32-v144:32-v160:32-v176:32-v192:32-v208:32-v224:32-v240:32-v256:32-n8:16:32"

%struct.HitData = type { <3 x float>, <3 x float>, float, i32 }
; struct.DispatchSystemData
%0 = type { <3 x i32> }
; struct.SystemData
%1 = type { %0 }
; struct.TraversalData
%2 = type { %1, %struct.HitData, <3 x float>, <3 x float>, float, i64 }
; struct.AnyHitTraversalData
%3 = type { %2, %struct.HitData }

declare i32 @_cont_GetContinuationStackAddr() #4
declare %0 @_cont_SetupRayGen() #4
declare %0 @_AmdAwaitTraversal(i64, %2) #4
declare %0 @_AmdAwaitShader(i64, %0) #4
declare %3 @_AmdAwaitAnyHit(i64, %3, float, i32) #4
declare %struct.HitData @_cont_GetCandidateState(%3*) #4
declare %struct.HitData @_cont_GetCommittedState(%1*) #4
declare %struct.BuiltInTriangleIntersectionAttributes @_cont_GetTriangleHitAttributes(%1*) #4
declare void @_cont_SetTriangleHitAttributes(%1*, %struct.BuiltInTriangleIntersectionAttributes) #4
declare i32 @_cont_GetLocalRootIndex(%0*)
declare i1 @_cont_IsEndSearch(%2*) #4
declare i32 @_cont_HitKind(%1*) #4
declare i64 @_AmdGetResumePointAddr() #1
declare void @_AmdRestoreSystemData(%0* %data) #1
declare void @_AmdRestoreSystemDataAnyHit(%3* %data) #1
declare void @_cont_AcceptHitAndEndSearch(%0* nocapture readnone %data) #1
declare void @_cont_AcceptHit(%3* nocapture readnone %data) #1
declare void @_cont_IgnoreHit(%0* nocapture readnone %data) #1
declare void @_AmdAcceptHitAttributes(%3* nocapture readnone %data) #1

define void @_cont_TraceRay(%0* %data, i64, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float) #4 {
  %dis_data = load %0, %0* %data
  %sys_data = insertvalue %1 undef, %0 %dis_data, 0
  %trav_data = insertvalue %2 undef, %1 %sys_data, 0
  %addr = call i64 @_AmdGetResumePointAddr() #2
  %trav_data2 = insertvalue %2 %trav_data, i64 %addr, 5
  %newdata = call %0 @_AmdAwaitTraversal(i64 4, %2 %trav_data2)
  store %0 %newdata, %0* %data
  call void @_AmdRestoreSystemData(%0* %data)
  ret void
}

define void @_cont_CallShader(%0* %data, i32) #4 {
  %dis_data = load %0, %0* %data
  %newdata = call %0 @_AmdAwaitShader(i64 2, %0 %dis_data)
  store %0 %newdata, %0* %data
  call void @_AmdRestoreSystemData(%0* %data)
  ret void
}

define i1 @_cont_ReportHit(%3* %data, float %t, i32 %hitKind) #4 {
  %origTPtr = getelementptr inbounds %3, %3* %data, i32 0, i32 0, i32 4
  %origT = load float, float* %origTPtr, align 4
  %isNoHit = fcmp fast uge float %t, %origT
  br i1 %isNoHit, label %isEnd, label %callAHit

callAHit:
  %trav_data = load %3, %3* %data
  %newdata = call %3 @_AmdAwaitAnyHit(i64 3, %3 %trav_data, float %t, i32 %hitKind)
  store %3 %newdata, %3* %data
  call void @_AmdRestoreSystemDataAnyHit(%3* %data)
  ret i1 1

isEnd:
  ; Call AcceptHitAttributes, just to simulate it
  call void @_AmdAcceptHitAttributes(%3* %data)
  ret i1 0
}

define <3 x i32> @_cont_DispatchRaysIndex3(%0* %data) {
  %resPtr.1 = getelementptr %0, %0* %data, i32 0, i32 0, i32 0
  %res.1 = load i32, i32* %resPtr.1
  %resPtr.2 = getelementptr %0, %0* %data, i32 0, i32 0, i32 1
  %res.2 = load i32, i32* %resPtr.2
  %resPtr.3 = getelementptr %0, %0* %data, i32 0, i32 0, i32 2
  %res.3 = load i32, i32* %resPtr.3
  %val.0 = insertelement <3 x i32> undef, i32 %res.1, i32 0
  %val.1 = insertelement <3 x i32> %val.0, i32 %res.2, i32 1
  %val.2 = insertelement <3 x i32> %val.1, i32 %res.3, i32 2
  ret <3 x i32> %val.2
}

define <3 x float> @_cont_ObjectRayOrigin3(%0* nocapture readnone %data, %struct.HitData* %hitData) {
  %resPtr.1 = getelementptr %struct.HitData, %struct.HitData* %hitData, i32 0, i32 0, i32 0
  %res.1 = load float, float* %resPtr.1
  %resPtr.2 = getelementptr %struct.HitData, %struct.HitData* %hitData, i32 0, i32 0, i32 1
  %res.2 = load float, float* %resPtr.2
  %resPtr.3 = getelementptr %struct.HitData, %struct.HitData* %hitData, i32 0, i32 0, i32 2
  %res.3 = load float, float* %resPtr.3
  %val.0 = insertelement <3 x float> undef, float %res.1, i32 0
  %val.1 = insertelement <3 x float> %val.0, float %res.2, i32 1
  %val.2 = insertelement <3 x float> %val.1, float %res.3, i32 2
  ret <3 x float> %val.2
}

define <3 x float> @_cont_ObjectRayDirection3(%0* nocapture readnone %data, %struct.HitData* %hitData) {
  %resPtr.1 = getelementptr %struct.HitData, %struct.HitData* %hitData, i32 0, i32 1, i32 0
  %res.1 = load float, float* %resPtr.1
  %resPtr.2 = getelementptr %struct.HitData, %struct.HitData* %hitData, i32 0, i32 1, i32 1
  %res.2 = load float, float* %resPtr.2
  %resPtr.3 = getelementptr %struct.HitData, %struct.HitData* %hitData, i32 0, i32 1, i32 2
  %res.3 = load float, float* %resPtr.3
  %val.0 = insertelement <3 x float> undef, float %res.1, i32 0
  %val.1 = insertelement <3 x float> %val.0, float %res.2, i32 1
  %val.2 = insertelement <3 x float> %val.1, float %res.3, i32 2
  ret <3 x float> %val.2
}

define float @_cont_RayTCurrent(%0* nocapture readnone %data, %struct.HitData* %hitData) {
  %resPtr = getelementptr %struct.HitData, %struct.HitData* %hitData, i32 0, i32 2
  %res = load float, float* %resPtr
  ret float %res
}

%dx.types.Handle = type { i8* }
%struct.RayPayload = type { <4 x float> }
%dx.types.ResourceProperties = type { i32, i32 }
%struct.BuiltInTriangleIntersectionAttributes = type { <2 x float> }
%struct.RaytracingAccelerationStructure = type { i32 }
%"class.RWTexture2D<vector<float, 4> >" = type { <4 x float> }

@"\01?Scene@@3URaytracingAccelerationStructure@@A" = external constant %dx.types.Handle, align 4
@"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4

; Function Attrs: nounwind
define void @MyRayGen() #0 {
  %1 = load %dx.types.Handle, %dx.types.Handle* @"\01?Scene@@3URaytracingAccelerationStructure@@A", align 4
  %2 = load %dx.types.Handle, %dx.types.Handle* @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A", align 4
  %3 = alloca %struct.RayPayload, align 4
  %4 = bitcast %struct.RayPayload* %3 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %3, i32 0, i32 0
  store <4 x float> zeroinitializer, <4 x float>* %5, align 4, !tbaa !31
  %6 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %1)  ; CreateHandleForLib(Resource)
  %7 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %6, %dx.types.ResourceProperties { i32 16, i32 0 })  ; AnnotateHandle(res,props)  resource: RTAccelerationStructure
  call void @dx.op.traceRay.struct.RayPayload(i32 157, %dx.types.Handle %7, i32 16, i32 -1, i32 0, i32 1, i32 0, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3F50624DE0000000, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+04, %struct.RayPayload* nonnull %3)  ; TraceRay(AccelerationStructure,RayFlags,InstanceInclusionMask,RayContributionToHitGroupIndex,MultiplierForGeometryContributionToShaderIndex,MissShaderIndex,Origin_X,Origin_Y,Origin_Z,TMin,Direction_X,Direction_Y,Direction_Z,TMax,payload)
  %8 = load <4 x float>, <4 x float>* %5, align 4, !tbaa !31
  %9 = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 0)  ; DispatchRaysIndex(col)
  %10 = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 1)  ; DispatchRaysIndex(col)
  %11 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %2)  ; CreateHandleForLib(Resource)
  %12 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %11, %dx.types.ResourceProperties { i32 4098, i32 1033 })  ; AnnotateHandle(res,props)  resource: RWTexture2D<4xF32>
  %13 = extractelement <4 x float> %8, i64 0
  %14 = extractelement <4 x float> %8, i64 1
  %15 = extractelement <4 x float> %8, i64 2
  %16 = extractelement <4 x float> %8, i64 3
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %12, i32 %9, i32 %10, i32 undef, float %13, float %14, float %15, float %16, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  call void @llvm.lifetime.end(i64 16, i8* %4) #1
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind
define void @MyClosestHit(%struct.RayPayload* noalias nocapture %payload, %struct.BuiltInTriangleIntersectionAttributes* nocapture readonly %attr) #0 {
  %1 = getelementptr inbounds %struct.BuiltInTriangleIntersectionAttributes, %struct.BuiltInTriangleIntersectionAttributes* %attr, i32 0, i32 0
  %2 = load <2 x float>, <2 x float>* %1, align 4
  %3 = extractelement <2 x float> %2, i32 0
  %4 = fsub fast float 1.000000e+00, %3
  %5 = extractelement <2 x float> %2, i32 1
  %6 = fsub fast float %4, %5
  %7 = insertelement <4 x float> undef, float %6, i64 0
  %8 = insertelement <4 x float> %7, float %3, i64 1
  %9 = insertelement <4 x float> %8, float %5, i64 2
  %10 = insertelement <4 x float> %9, float 1.000000e+00, i64 3
  %11 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %payload, i32 0, i32 0
  store <4 x float> %10, <4 x float>* %11, align 4
  ret void
}

; Function Attrs: nounwind
declare void @dx.op.traceRay.struct.RayPayload(i32, %dx.types.Handle, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, %struct.RayPayload*) #1

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.dispatchRaysIndex.i32(i32, i8) #2

; Function Attrs: nounwind readnone
declare float @dx.op.objectRayDirection.f32(i32, i8) #2

; Function Attrs: nounwind readnone
declare float @dx.op.objectRayOrigin.f32(i32, i8) #2

; Function Attrs: nounwind readonly
declare float @dx.op.rayTCurrent.f32(i32) #3

; Function Attrs: noreturn nounwind
declare void @dx.op.acceptHitAndEndSearch(i32) #4

; Function Attrs: noreturn nounwind
declare void @dx.op.ignoreHit(i32) #4

; Function Attrs: nounwind
declare i1 @dx.op.reportHit.struct.BuiltInTriangleIntersectionAttributes(i32, float, i32, %struct.BuiltInTriangleIntersectionAttributes*) #1

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32, %dx.types.Handle) #3

attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="0" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readonly }
attributes #4 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="0" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!1}
!dx.shaderModel = !{!2}
!dx.resources = !{!3}
!dx.typeAnnotations = !{}
!dx.entryPoints = !{!18, !23, !29}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 6}
!2 = !{!"lib", i32 6, i32 6}
!3 = !{!4, !7, null, null}
!4 = !{!5}
!5 = !{i32 0, %struct.RaytracingAccelerationStructure* bitcast (%dx.types.Handle* @"\01?Scene@@3URaytracingAccelerationStructure@@A" to %struct.RaytracingAccelerationStructure*), !"Scene", i32 0, i32 0, i32 1, i32 16, i32 0, !6}
!6 = !{i32 0, i32 4}
!7 = !{!8}
!8 = !{i32 0, %"class.RWTexture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A" to %"class.RWTexture2D<vector<float, 4> >"*), !"RenderTarget", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !9}
!9 = !{i32 0, i32 9}
!11 = !{!12}
!12 = !{i32 1, !13, !13}
!13 = !{}
!14 = !{!12, !15, !16}
!15 = !{i32 2, !13, !13}
!16 = !{i32 0, !13, !13}
!17 = !{!12, !15}
!18 = !{null, !"", null, !3, !19}
!19 = !{i32 0, i64 65536}
!22 = !{i32 0}
!23 = !{void (%struct.RayPayload*, %struct.BuiltInTriangleIntersectionAttributes*)* @MyClosestHit, !"MyClosestHit", null, null, !24}
!24 = !{i32 8, i32 10, i32 6, i32 16, i32 7, i32 8, i32 5, !22}
!29 = !{void ()* @MyRayGen, !"MyRayGen", null, null, !30}
!30 = !{i32 8, i32 7, i32 5, !22}
!31 = !{!32, !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
; LOWERRAYTRACINGPIPELINE-LABEL: @_cont_TraceRay.struct.RayPayload.attr_max_32_bytes(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[DIS_DATA:%.*]] = load [[TMP0:%.*]], %0* [[DATA:%.*]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[SYS_DATA:%.*]] = insertvalue [[TMP2:%.*]] undef, [[TMP0]] [[DIS_DATA]], 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TRAV_DATA:%.*]] = insertvalue [[TMP1:%.*]] undef, [[TMP2]] [[SYS_DATA]], 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[ADDR:%.*]] = call i64 @_AmdGetResumePointAddr() #[[ATTR3:[0-9]+]]
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TRAV_DATA2:%.*]] = insertvalue [[TMP1]] [[TRAV_DATA]], i64 [[ADDR]], 5
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP16:%.*]] = getelementptr inbounds [[STRUCT_RAYPAYLOAD:%.*]], %struct.RayPayload* [[TMP14:%.*]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP17:%.*]] = bitcast <4 x float>* [[TMP16]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP18:%.*]] = getelementptr i32, i32* [[TMP17]], i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP19:%.*]] = getelementptr i32, i32* [[TMP18]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP20:%.*]] = load i32, i32* [[TMP19]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP20]], i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_0_CALLER_OUT:%.*]], %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out*), i32 0, i32 0, i32 0), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP21:%.*]] = getelementptr i32, i32* [[TMP17]], i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP22:%.*]] = getelementptr i32, i32* [[TMP21]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP23:%.*]] = load i32, i32* [[TMP22]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP23]], i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_0_CALLER_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out*), i32 0, i32 0, i32 7), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP24:%.*]] = getelementptr i32, i32* [[TMP21]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP25:%.*]] = load i32, i32* [[TMP24]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP25]], i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_0_CALLER_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out*), i32 0, i32 0, i64 8), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP26:%.*]] = getelementptr i32, i32* [[TMP21]], i64 2
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP27:%.*]] = load i32, i32* [[TMP26]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP27]], i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_0_CALLER_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_0_caller_out*), i32 0, i32 0, i64 9), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP28:%.*]] = call %continuation.token* inttoptr (i64 4 to %continuation.token* ([[TMP1]])*)([[TMP1]] [[TRAV_DATA2]]), !continuation.registercount !20, !continuation.returnedRegistercount !20
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP29:%.*]] = call [[TMP0]] @await.(%continuation.token* [[TMP28]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP30:%.*]] = getelementptr inbounds [[STRUCT_RAYPAYLOAD]], %struct.RayPayload* [[TMP14]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP31:%.*]] = bitcast <4 x float>* [[TMP30]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP32:%.*]] = getelementptr i32, i32* [[TMP31]], i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP33:%.*]] = getelementptr i32, i32* [[TMP32]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP34:%.*]] = load i32, i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT:%.*]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i32 0), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP34]], i32* [[TMP33]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP35:%.*]] = getelementptr i32, i32* [[TMP31]], i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP36:%.*]] = getelementptr i32, i32* [[TMP35]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP37:%.*]] = load i32, i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i32 7), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP37]], i32* [[TMP36]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP38:%.*]] = getelementptr i32, i32* [[TMP35]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP39:%.*]] = load i32, i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i64 8), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP39]], i32* [[TMP38]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP40:%.*]] = getelementptr i32, i32* [[TMP35]], i64 2
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP41:%.*]] = load i32, i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i64 9), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP41]], i32* [[TMP40]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[TMP0]] [[TMP29]], %0* [[DATA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[LOCAL_ROOT_INDEX:%.*]] = call i32 @_cont_GetLocalRootIndex(%0* [[DATA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @amd.dx.setLocalRootIndex(i32 [[LOCAL_ROOT_INDEX]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @_AmdRestoreSystemData(%0* [[DATA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    ret void
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @_cont_TraceRay(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[DIS_DATA:%.*]] = load [[TMP0:%.*]], %0* [[DATA:%.*]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[SYS_DATA:%.*]] = insertvalue [[TMP2:%.*]] undef, [[TMP0]] [[DIS_DATA]], 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TRAV_DATA:%.*]] = insertvalue [[TMP1:%.*]] undef, [[TMP2]] [[SYS_DATA]], 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[ADDR:%.*]] = call i64 @_AmdGetResumePointAddr() #[[ATTR3]]
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TRAV_DATA2:%.*]] = insertvalue [[TMP1]] [[TRAV_DATA]], i64 [[ADDR]], 5
; LOWERRAYTRACINGPIPELINE-NEXT:    [[NEWDATA:%.*]] = call [[TMP0]] @_AmdAwaitTraversal(i64 4, [[TMP1]] [[TRAV_DATA2]])
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[TMP0]] [[NEWDATA]], %0* [[DATA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[LOCAL_ROOT_INDEX:%.*]] = call i32 @_cont_GetLocalRootIndex(%0* [[DATA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @amd.dx.setLocalRootIndex(i32 [[LOCAL_ROOT_INDEX]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @_AmdRestoreSystemData(%0* [[DATA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    ret void
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @_cont_CallShader(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[DIS_DATA:%.*]] = load [[TMP0:%.*]], %0* [[DATA:%.*]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[NEWDATA:%.*]] = call [[TMP0]] @_AmdAwaitShader(i64 2, [[TMP0]] [[DIS_DATA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[TMP0]] [[NEWDATA]], %0* [[DATA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[LOCAL_ROOT_INDEX:%.*]] = call i32 @_cont_GetLocalRootIndex(%0* [[DATA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @amd.dx.setLocalRootIndex(i32 [[LOCAL_ROOT_INDEX]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @_AmdRestoreSystemData(%0* [[DATA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    ret void
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @_cont_ReportHit(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[ORIGTPTR:%.*]] = getelementptr inbounds [[TMP3:%.*]], %3* [[DATA:%.*]], i32 0, i32 0, i32 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[ORIGT:%.*]] = load float, float* [[ORIGTPTR]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[ISNOHIT:%.*]] = fcmp fast uge float [[T:%.*]], [[ORIGT]]
; LOWERRAYTRACINGPIPELINE-NEXT:    br i1 [[ISNOHIT]], label [[ISEND:%.*]], label [[CALLAHIT:%.*]]
; LOWERRAYTRACINGPIPELINE:       callAHit:
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TRAV_DATA:%.*]] = load [[TMP3]], %3* [[DATA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[NEWDATA:%.*]] = call [[TMP3]] @_AmdAwaitAnyHit(i64 3, [[TMP3]] [[TRAV_DATA]], float [[T]], i32 [[HITKIND:%.*]])
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[TMP3]] [[NEWDATA]], %3* [[DATA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP1:%.*]] = getelementptr inbounds [[TMP3]], %3* [[DATA]], i32 0, i32 0, i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[LOCAL_ROOT_INDEX:%.*]] = call i32 @_cont_GetLocalRootIndex(%0* [[TMP1]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @amd.dx.setLocalRootIndex(i32 [[LOCAL_ROOT_INDEX]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @_AmdRestoreSystemDataAnyHit(%3* [[DATA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    ret i1 true
; LOWERRAYTRACINGPIPELINE:       isEnd:
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @_AmdAcceptHitAttributes(%3* [[DATA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    ret i1 false
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @_cont_DispatchRaysIndex3(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RESPTR_1:%.*]] = getelementptr [[TMP0:%.*]], %0* [[DATA:%.*]], i32 0, i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RES_1:%.*]] = load i32, i32* [[RESPTR_1]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RESPTR_2:%.*]] = getelementptr [[TMP0]], %0* [[DATA]], i32 0, i32 0, i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RES_2:%.*]] = load i32, i32* [[RESPTR_2]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RESPTR_3:%.*]] = getelementptr [[TMP0]], %0* [[DATA]], i32 0, i32 0, i32 2
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RES_3:%.*]] = load i32, i32* [[RESPTR_3]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[VAL_0:%.*]] = insertelement <3 x i32> undef, i32 [[RES_1]], i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[VAL_1:%.*]] = insertelement <3 x i32> [[VAL_0]], i32 [[RES_2]], i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[VAL_2:%.*]] = insertelement <3 x i32> [[VAL_1]], i32 [[RES_3]], i32 2
; LOWERRAYTRACINGPIPELINE-NEXT:    ret <3 x i32> [[VAL_2]]
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @_cont_ObjectRayOrigin3(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RESPTR_1:%.*]] = getelementptr [[STRUCT_HITDATA:%.*]], %struct.HitData* [[HITDATA:%.*]], i32 0, i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RES_1:%.*]] = load float, float* [[RESPTR_1]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RESPTR_2:%.*]] = getelementptr [[STRUCT_HITDATA]], %struct.HitData* [[HITDATA]], i32 0, i32 0, i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RES_2:%.*]] = load float, float* [[RESPTR_2]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RESPTR_3:%.*]] = getelementptr [[STRUCT_HITDATA]], %struct.HitData* [[HITDATA]], i32 0, i32 0, i32 2
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RES_3:%.*]] = load float, float* [[RESPTR_3]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[VAL_0:%.*]] = insertelement <3 x float> undef, float [[RES_1]], i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[VAL_1:%.*]] = insertelement <3 x float> [[VAL_0]], float [[RES_2]], i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[VAL_2:%.*]] = insertelement <3 x float> [[VAL_1]], float [[RES_3]], i32 2
; LOWERRAYTRACINGPIPELINE-NEXT:    ret <3 x float> [[VAL_2]]
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @_cont_ObjectRayDirection3(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RESPTR_1:%.*]] = getelementptr [[STRUCT_HITDATA:%.*]], %struct.HitData* [[HITDATA:%.*]], i32 0, i32 1, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RES_1:%.*]] = load float, float* [[RESPTR_1]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RESPTR_2:%.*]] = getelementptr [[STRUCT_HITDATA]], %struct.HitData* [[HITDATA]], i32 0, i32 1, i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RES_2:%.*]] = load float, float* [[RESPTR_2]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RESPTR_3:%.*]] = getelementptr [[STRUCT_HITDATA]], %struct.HitData* [[HITDATA]], i32 0, i32 1, i32 2
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RES_3:%.*]] = load float, float* [[RESPTR_3]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[VAL_0:%.*]] = insertelement <3 x float> undef, float [[RES_1]], i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[VAL_1:%.*]] = insertelement <3 x float> [[VAL_0]], float [[RES_2]], i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[VAL_2:%.*]] = insertelement <3 x float> [[VAL_1]], float [[RES_3]], i32 2
; LOWERRAYTRACINGPIPELINE-NEXT:    ret <3 x float> [[VAL_2]]
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @_cont_RayTCurrent(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RESPTR:%.*]] = getelementptr [[STRUCT_HITDATA:%.*]], %struct.HitData* [[HITDATA:%.*]], i32 0, i32 2
; LOWERRAYTRACINGPIPELINE-NEXT:    [[RES:%.*]] = load float, float* [[RESPTR]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    ret float [[RES]]
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @MyRayGen(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[SYSTEM_DATA_ALLOCA:%.*]] = alloca [[TMP0:%.*]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP1:%.*]] = call [[TMP0]] @continuations.getSystemData.s_s_0()
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[TMP0]] [[TMP1]], %0* [[SYSTEM_DATA_ALLOCA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[LOCAL_ROOT_INDEX:%.*]] = call i32 @_cont_GetLocalRootIndex(%0* [[SYSTEM_DATA_ALLOCA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @amd.dx.setLocalRootIndex(i32 [[LOCAL_ROOT_INDEX]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP2:%.*]] = load [[DX_TYPES_HANDLE:%.*]], %dx.types.Handle* @"\01?Scene@@3URaytracingAccelerationStructure@@A", align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP3:%.*]] = load [[DX_TYPES_HANDLE]], %dx.types.Handle* @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A", align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP4:%.*]] = alloca [[STRUCT_RAYPAYLOAD:%.*]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP5:%.*]] = bitcast %struct.RayPayload* [[TMP4]] to i8*
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @llvm.lifetime.start.p0i8(i64 16, i8* [[TMP5]]) #[[ATTR1:[0-9]+]]
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP6:%.*]] = getelementptr inbounds [[STRUCT_RAYPAYLOAD]], %struct.RayPayload* [[TMP4]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    store <4 x float> zeroinitializer, <4 x float>* [[TMP6]], align 4, !tbaa [[TBAA23:![0-9]+]]
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP7:%.*]] = call [[DX_TYPES_HANDLE]] @dx.op.createHandleForLib.dx.types.Handle(i32 160, [[DX_TYPES_HANDLE]] [[TMP2]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP8:%.*]] = call [[DX_TYPES_HANDLE]] @dx.op.annotateHandle(i32 216, [[DX_TYPES_HANDLE]] [[TMP7]], [[DX_TYPES_RESOURCEPROPERTIES:%.*]] { i32 16, i32 0 })
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP9:%.*]] = call i64 @amd.dx.getAccelStructAddr([[DX_TYPES_HANDLE]] [[TMP8]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @_cont_TraceRay.struct.RayPayload.attr_max_32_bytes(%0* [[SYSTEM_DATA_ALLOCA]], i64 [[TMP9]], i32 16, i32 -1, i32 0, i32 1, i32 0, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3F50624DE0000000, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+04, %struct.RayPayload* [[TMP4]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP10:%.*]] = load <4 x float>, <4 x float>* [[TMP6]], align 4, !tbaa [[TBAA23]]
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP11:%.*]] = call <3 x i32> @lgc.rt.dispatch.rays.index()
; LOWERRAYTRACINGPIPELINE-NEXT:    [[EXTRACT:%.*]] = extractelement <3 x i32> [[TMP11]], i8 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP12:%.*]] = call <3 x i32> @lgc.rt.dispatch.rays.index()
; LOWERRAYTRACINGPIPELINE-NEXT:    [[EXTRACT1:%.*]] = extractelement <3 x i32> [[TMP12]], i8 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP13:%.*]] = call [[DX_TYPES_HANDLE]] @dx.op.createHandleForLib.dx.types.Handle(i32 160, [[DX_TYPES_HANDLE]] [[TMP3]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP14:%.*]] = call [[DX_TYPES_HANDLE]] @dx.op.annotateHandle(i32 216, [[DX_TYPES_HANDLE]] [[TMP13]], [[DX_TYPES_RESOURCEPROPERTIES]] { i32 4098, i32 1033 })
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP15:%.*]] = extractelement <4 x float> [[TMP10]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP16:%.*]] = extractelement <4 x float> [[TMP10]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP17:%.*]] = extractelement <4 x float> [[TMP10]], i64 2
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP18:%.*]] = extractelement <4 x float> [[TMP10]], i64 3
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @dx.op.textureStore.f32(i32 67, [[DX_TYPES_HANDLE]] [[TMP14]], i32 [[EXTRACT]], i32 [[EXTRACT1]], i32 undef, float [[TMP15]], float [[TMP16]], float [[TMP17]], float [[TMP18]], i8 15)
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @llvm.lifetime.end.p0i8(i64 16, i8* [[TMP5]]) #[[ATTR1]]
; LOWERRAYTRACINGPIPELINE-NEXT:    ret void
;
;
; LOWERRAYTRACINGPIPELINE-LABEL: @MyClosestHit(
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP2:%.*]] = alloca [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES:%.*]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[SYSTEM_DATA_ALLOCA:%.*]] = alloca [[TMP2]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP3:%.*]] = alloca [[STRUCT_RAYPAYLOAD:%.*]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[HITATTRS:%.*]] = alloca [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]], align 8
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP4:%.*]] = call [[TMP2]] @continuations.getSystemData.s_s()
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[TMP2]] [[TMP4]], %2* [[SYSTEM_DATA_ALLOCA]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP5:%.*]] = getelementptr inbounds [[TMP2]], %2* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[LOCAL_ROOT_INDEX:%.*]] = call i32 @_cont_GetLocalRootIndex(%0* [[TMP5]])
; LOWERRAYTRACINGPIPELINE-NEXT:    call void @amd.dx.setLocalRootIndex(i32 [[LOCAL_ROOT_INDEX]])
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP6:%.*]] = getelementptr inbounds [[STRUCT_RAYPAYLOAD]], %struct.RayPayload* [[TMP3]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP7:%.*]] = bitcast <4 x float>* [[TMP6]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP8:%.*]] = getelementptr i32, i32* [[TMP7]], i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP9:%.*]] = getelementptr i32, i32* [[TMP8]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP10:%.*]] = load i32, i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S:%.*]], %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s*), i32 0, i32 0, i32 0), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP10]], i32* [[TMP9]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP11:%.*]] = getelementptr i32, i32* [[TMP7]], i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP12:%.*]] = getelementptr i32, i32* [[TMP11]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP13:%.*]] = load i32, i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]], %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s*), i32 0, i32 0, i32 7), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP13]], i32* [[TMP12]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP14:%.*]] = getelementptr i32, i32* [[TMP11]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP15:%.*]] = load i32, i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]], %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s*), i32 0, i32 0, i64 8), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP15]], i32* [[TMP14]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP16:%.*]] = getelementptr i32, i32* [[TMP11]], i64 2
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP17:%.*]] = load i32, i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_3_CLOSESTHIT_IN_PAYLOAD_ATTR_0_I32S]], %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_3_closesthit_in.payload_attr_0_i32s*), i32 0, i32 0, i64 9), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP17]], i32* [[TMP16]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    call void (...) @registerbuffer.setpointerbarrier([30 x i32]* @PAYLOAD)
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP18:%.*]] = bitcast %struct.BuiltInTriangleIntersectionAttributes* [[TMP2]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP19:%.*]] = call [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] @_cont_GetTriangleHitAttributes(%2* [[SYSTEM_DATA_ALLOCA]])
; LOWERRAYTRACINGPIPELINE-NEXT:    store [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]] [[TMP19]], %struct.BuiltInTriangleIntersectionAttributes* [[TMP2]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP20:%.*]] = bitcast %struct.BuiltInTriangleIntersectionAttributes* [[HITATTRS]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP21:%.*]] = getelementptr inbounds i32, i32* [[TMP20]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP22:%.*]] = getelementptr inbounds i32, i32* [[TMP18]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP23:%.*]] = load i32, i32* [[TMP22]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP23]], i32* [[TMP21]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP24:%.*]] = getelementptr inbounds i32, i32* [[TMP20]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP25:%.*]] = getelementptr inbounds i32, i32* [[TMP18]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP26:%.*]] = load i32, i32* [[TMP25]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP26]], i32* [[TMP24]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP27:%.*]] = getelementptr inbounds [[STRUCT_BUILTINTRIANGLEINTERSECTIONATTRIBUTES]], %struct.BuiltInTriangleIntersectionAttributes* [[HITATTRS]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP28:%.*]] = load <2 x float>, <2 x float>* [[TMP27]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP29:%.*]] = extractelement <2 x float> [[TMP28]], i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP30:%.*]] = fsub fast float 1.000000e+00, [[TMP29]]
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP31:%.*]] = extractelement <2 x float> [[TMP28]], i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP32:%.*]] = fsub fast float [[TMP30]], [[TMP31]]
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP33:%.*]] = insertelement <4 x float> undef, float [[TMP32]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP34:%.*]] = insertelement <4 x float> [[TMP33]], float [[TMP29]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP35:%.*]] = insertelement <4 x float> [[TMP34]], float [[TMP31]], i64 2
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP36:%.*]] = insertelement <4 x float> [[TMP35]], float 1.000000e+00, i64 3
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP37:%.*]] = getelementptr inbounds [[STRUCT_RAYPAYLOAD]], %struct.RayPayload* [[TMP3]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    store <4 x float> [[TMP36]], <4 x float>* [[TMP37]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    call void (...) @registerbuffer.setpointerbarrier([30 x i32]* @PAYLOAD)
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP38:%.*]] = getelementptr inbounds [[STRUCT_RAYPAYLOAD]], %struct.RayPayload* [[TMP3]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP39:%.*]] = bitcast <4 x float>* [[TMP38]] to i32*
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP40:%.*]] = getelementptr i32, i32* [[TMP39]], i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP41:%.*]] = getelementptr i32, i32* [[TMP40]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP42:%.*]] = load i32, i32* [[TMP41]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP42]], i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT:%.*]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i32 0), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP43:%.*]] = getelementptr i32, i32* [[TMP39]], i32 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP44:%.*]] = getelementptr i32, i32* [[TMP43]], i64 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP45:%.*]] = load i32, i32* [[TMP44]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP45]], i32* getelementptr inbounds ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i32 7), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP46:%.*]] = getelementptr i32, i32* [[TMP43]], i64 1
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP47:%.*]] = load i32, i32* [[TMP46]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP47]], i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i64 8), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP48:%.*]] = getelementptr i32, i32* [[TMP43]], i64 2
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP49:%.*]] = load i32, i32* [[TMP48]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    store i32 [[TMP49]], i32* getelementptr ([[STRUCT_RAYPAYLOAD_ATTR_MAX_8_I32S_LAYOUT_5_CLOSESTHIT_OUT]], %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out* bitcast ([30 x i32]* @PAYLOAD to %struct.RayPayload.attr_max_8_i32s.layout_5_closesthit_out*), i32 0, i32 0, i64 9), align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP50:%.*]] = getelementptr inbounds [[TMP2]], %2* [[SYSTEM_DATA_ALLOCA]], i32 0, i32 0
; LOWERRAYTRACINGPIPELINE-NEXT:    [[TMP51:%.*]] = load [[TMP0:%.*]], %0* [[TMP50]], align 4
; LOWERRAYTRACINGPIPELINE-NEXT:    ret [[TMP0]] [[TMP51]], !continuation.registercount !20
;
