#version 450 core

layout(set = 0, binding = 0, rgba8i)  uniform iimage2D img2Di;
layout(set = 0, binding = 1, rgba8ui) uniform uimage2D img2Du;

layout(set = 1, binding = 0) buffer BO
{
    vec4 mOut;
};

void main()
{
    ivec4 temp1 = imageLoad(img2Di, ivec2(0, 0));
    uvec4 temp2 = imageLoad(img2Du, ivec2(0, 0));
    mOut = vec4(temp1 + temp2);
}

// BEGIN_SHADERTEST
/*
; RUN: amdllpc -spvgen-dir=%spvgendir% -v %gfxip %s | FileCheck -check-prefix=SHADERTEST %s
; SHADERTEST-LABEL: {{^// LLPC}} SPIRV-to-LLVM translation results
; SHADERTEST-LABEL: {{^// LLPC}}  SPIR-V lowering results
; SHADERTEST: call {{.*}} @"llpc.call.get.image.desc.ptr{{.*}}(i32 0, i32 0
; SHADERTEST: call <4 x i32> @llpc.image.read.i32.2D{{.*}}({{.*}}, <2 x i32> zeroinitializer, i32 0,{{.*}})
; SHADERTEST: call {{.*}} @"llpc.call.get.image.desc.ptr{{.*}}(i32 0, i32 1
; SHADERTEST: call <4 x i32> @llpc.image.read.u32.2D{{.*}}({{.*}}, <2 x i32> zeroinitializer, i32 0,{{.*}})

; SHADERTEST-LABEL: {{^// LLPC}}  pipeline patching results
; SHADERTEST: call <4 x float> @llvm.amdgcn.image.load.2d.v4f32.i32(i32 15, i32 0, i32 0,{{.*}}, i32 0, i32 0)
; SHADERTEST: AMDLLPC SUCCESS
*/
// END_SHADERTEST
